extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.3", import: ["@key", "@shareable", "@inaccessible", "@tag", "@provides", "@requires", "@external", "@extends", "@override"])

type Address {
  id: ID!
  formattedAddress: String!
  Location(where: LocationWhereInput, orderBy: [LocationOrderByWithRelationInput!], cursor: LocationWhereUniqueInput, take: Int, skip: Int, distinct: [LocationScalarFieldEnum!]): [Location!]!
  AddressComponents(where: AddressComponentWhereInput, orderBy: [AddressComponentOrderByWithRelationInput!], cursor: AddressComponentWhereUniqueInput, take: Int, skip: Int, distinct: [AddressComponentScalarFieldEnum!]): [AddressComponent!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AddressComponent {
  id: ID!
  h3Index15: String
  long_name: String!
  short_name: String!
  types: [String!]!
  Address: Address
  addressId: String
}

input AddressComponentAvgOrderByAggregateInput {
  id: SortOrder
}

input AddressComponentCountOrderByAggregateInput {
  id: SortOrder
  h3Index15: SortOrder
  long_name: SortOrder
  short_name: SortOrder
  types: SortOrder
  addressId: SortOrder
}

input AddressComponentCreateInput {
  h3Index15: String
  long_name: String!
  short_name: String!
  types: [String!]
  Address: AddressCreateNestedOneWithoutAddressComponentsInput
}

input AddressComponentCreateManyAddressInput {
  id: Int
  h3Index15: String
  long_name: String!
  short_name: String!
  types: [String!]
}

input AddressComponentCreateManyAddressInputEnvelope {
  data: [AddressComponentCreateManyAddressInput!]!
  skipDuplicates: Boolean
}

input AddressComponentCreateManyInput {
  id: Int
  h3Index15: String
  long_name: String!
  short_name: String!
  types: [String!]
  addressId: String
}

input AddressComponentCreateNestedManyWithoutAddressInput {
  create: AddressComponentCreateWithoutAddressInput
  connectOrCreate: [AddressComponentCreateOrConnectWithoutAddressInput!]
  createMany: AddressComponentCreateManyAddressInputEnvelope
  connect: [AddressComponentWhereUniqueInput!]
}

input AddressComponentCreateOrConnectWithoutAddressInput {
  where: AddressComponentWhereUniqueInput!
  create: AddressComponentCreateWithoutAddressInput!
}

input AddressComponentCreateWithoutAddressInput {
  h3Index15: String
  long_name: String!
  short_name: String!
  types: [String!]
}

input AddressComponentCreatetypesInput {
  set: [String!]!
}

input AddressComponentListRelationFilter {
  every: AddressComponentWhereInput
  some: AddressComponentWhereInput
  none: AddressComponentWhereInput
}

input AddressComponentMaxOrderByAggregateInput {
  id: SortOrder
  h3Index15: SortOrder
  long_name: SortOrder
  short_name: SortOrder
  addressId: SortOrder
}

input AddressComponentMinOrderByAggregateInput {
  id: SortOrder
  h3Index15: SortOrder
  long_name: SortOrder
  short_name: SortOrder
  addressId: SortOrder
}

input AddressComponentOrderByRelationAggregateInput {
  _count: SortOrder
}

input AddressComponentOrderByWithAggregationInput {
  id: SortOrder
  h3Index15: SortOrder
  long_name: SortOrder
  short_name: SortOrder
  types: SortOrder
  addressId: SortOrder
  _count: AddressComponentCountOrderByAggregateInput
  _avg: AddressComponentAvgOrderByAggregateInput
  _max: AddressComponentMaxOrderByAggregateInput
  _min: AddressComponentMinOrderByAggregateInput
  _sum: AddressComponentSumOrderByAggregateInput
}

input AddressComponentOrderByWithRelationInput {
  id: SortOrder
  h3Index15: SortOrder
  long_name: SortOrder
  short_name: SortOrder
  types: SortOrder
  addressId: SortOrder
  Address: AddressOrderByWithRelationInput
}

enum AddressComponentScalarFieldEnum {
  id
  h3Index15
  long_name
  short_name
  types
  addressId
}

input AddressComponentScalarWhereInput {
  AND: [AddressComponentScalarWhereInput!]
  OR: [AddressComponentScalarWhereInput!]
  NOT: [AddressComponentScalarWhereInput!]
  id: IntFilter
  h3Index15: StringNullableFilter
  long_name: StringFilter
  short_name: StringFilter
  types: StringNullableListFilter
  addressId: StringNullableFilter
}

input AddressComponentScalarWhereWithAggregatesInput {
  AND: [AddressComponentScalarWhereWithAggregatesInput!]
  OR: [AddressComponentScalarWhereWithAggregatesInput!]
  NOT: [AddressComponentScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  h3Index15: StringNullableWithAggregatesFilter
  long_name: StringWithAggregatesFilter
  short_name: StringWithAggregatesFilter
  types: StringNullableListFilter
  addressId: StringNullableWithAggregatesFilter
}

input AddressComponentSumOrderByAggregateInput {
  id: SortOrder
}

input AddressComponentUpdateInput {
  h3Index15: NullableStringFieldUpdateOperationsInput
  long_name: StringFieldUpdateOperationsInput
  short_name: StringFieldUpdateOperationsInput
  types: [String!]
  Address: AddressUpdateOneWithoutAddressComponentsNestedInput
}

input AddressComponentUpdateManyMutationInput {
  h3Index15: NullableStringFieldUpdateOperationsInput
  long_name: StringFieldUpdateOperationsInput
  short_name: StringFieldUpdateOperationsInput
  types: [String!]
}

input AddressComponentUpdateManyWithWhereWithoutAddressInput {
  where: AddressComponentScalarWhereInput!
  data: AddressComponentUpdateManyMutationInput!
}

input AddressComponentUpdateManyWithoutAddressNestedInput {
  create: AddressComponentCreateWithoutAddressInput
  connectOrCreate: [AddressComponentCreateOrConnectWithoutAddressInput!]
  upsert: [AddressComponentUpsertWithWhereUniqueWithoutAddressInput!]
  createMany: AddressComponentCreateManyAddressInputEnvelope
  set: [AddressComponentWhereUniqueInput!]
  disconnect: [AddressComponentWhereUniqueInput!]
  delete: [AddressComponentWhereUniqueInput!]
  connect: [AddressComponentWhereUniqueInput!]
  update: [AddressComponentUpdateWithWhereUniqueWithoutAddressInput!]
  updateMany: [AddressComponentUpdateManyWithWhereWithoutAddressInput!]
  deleteMany: [AddressComponentScalarWhereInput!]
}

input AddressComponentUpdateWithWhereUniqueWithoutAddressInput {
  where: AddressComponentWhereUniqueInput!
  data: AddressComponentUpdateWithoutAddressInput!
}

input AddressComponentUpdateWithoutAddressInput {
  h3Index15: NullableStringFieldUpdateOperationsInput
  long_name: StringFieldUpdateOperationsInput
  short_name: StringFieldUpdateOperationsInput
  types: [String!]
}

input AddressComponentUpdatetypesInput {
  set: [String!]
  push: [String!]
}

input AddressComponentUpsertWithWhereUniqueWithoutAddressInput {
  where: AddressComponentWhereUniqueInput!
  update: AddressComponentUpdateWithoutAddressInput!
  create: AddressComponentCreateWithoutAddressInput!
}

input AddressComponentWhereInput {
  AND: [AddressComponentWhereInput!]
  OR: [AddressComponentWhereInput!]
  NOT: [AddressComponentWhereInput!]
  id: IntFilter
  h3Index15: StringNullableFilter
  long_name: StringFilter
  short_name: StringFilter
  types: StringNullableListFilter
  addressId: StringNullableFilter
  Address: AddressWhereInput
}

input AddressComponentWhereUniqueInput {
  id: Int
}

input AddressCountOrderByAggregateInput {
  id: SortOrder
  formattedAddress: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input AddressCreateInput {
  id: String
  formattedAddress: String!
  createdAt: DateTime
  updatedAt: DateTime
  Location: LocationCreateNestedManyWithoutAddressInput
  AddressComponents: AddressComponentCreateNestedManyWithoutAddressInput
}

input AddressCreateManyInput {
  id: String
  formattedAddress: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input AddressCreateNestedOneWithoutAddressComponentsInput {
  create: AddressCreateWithoutAddressComponentsInput
  connectOrCreate: AddressCreateOrConnectWithoutAddressComponentsInput
  connect: AddressWhereUniqueInput
}

input AddressCreateNestedOneWithoutLocationInput {
  create: AddressCreateWithoutLocationInput
  connectOrCreate: AddressCreateOrConnectWithoutLocationInput
  connect: AddressWhereUniqueInput
}

input AddressCreateOrConnectWithoutAddressComponentsInput {
  where: AddressWhereUniqueInput!
  create: AddressCreateWithoutAddressComponentsInput!
}

input AddressCreateOrConnectWithoutLocationInput {
  where: AddressWhereUniqueInput!
  create: AddressCreateWithoutLocationInput!
}

input AddressCreateWithoutAddressComponentsInput {
  id: String
  formattedAddress: String!
  createdAt: DateTime
  updatedAt: DateTime
  Location: LocationCreateNestedManyWithoutAddressInput
}

input AddressCreateWithoutLocationInput {
  id: String
  formattedAddress: String!
  createdAt: DateTime
  updatedAt: DateTime
  AddressComponents: AddressComponentCreateNestedManyWithoutAddressInput
}

input AddressMaxOrderByAggregateInput {
  id: SortOrder
  formattedAddress: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input AddressMinOrderByAggregateInput {
  id: SortOrder
  formattedAddress: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input AddressOrderByWithAggregationInput {
  id: SortOrder
  formattedAddress: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: AddressCountOrderByAggregateInput
  _max: AddressMaxOrderByAggregateInput
  _min: AddressMinOrderByAggregateInput
}

input AddressOrderByWithRelationInput {
  id: SortOrder
  formattedAddress: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  Location: LocationOrderByRelationAggregateInput
  AddressComponents: AddressComponentOrderByRelationAggregateInput
}

input AddressRelationFilter {
  is: AddressWhereInput
  isNot: AddressWhereInput
}

enum AddressScalarFieldEnum {
  id
  formattedAddress
  createdAt
  updatedAt
}

input AddressScalarWhereWithAggregatesInput {
  AND: [AddressScalarWhereWithAggregatesInput!]
  OR: [AddressScalarWhereWithAggregatesInput!]
  NOT: [AddressScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  formattedAddress: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input AddressUpdateInput {
  id: StringFieldUpdateOperationsInput
  formattedAddress: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Location: LocationUpdateManyWithoutAddressNestedInput
  AddressComponents: AddressComponentUpdateManyWithoutAddressNestedInput
}

input AddressUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  formattedAddress: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AddressUpdateOneWithoutAddressComponentsNestedInput {
  create: AddressCreateWithoutAddressComponentsInput
  connectOrCreate: AddressCreateOrConnectWithoutAddressComponentsInput
  upsert: AddressUpsertWithoutAddressComponentsInput
  disconnect: Boolean
  delete: Boolean
  connect: AddressWhereUniqueInput
  update: AddressUpdateWithoutAddressComponentsInput
}

input AddressUpdateOneWithoutLocationNestedInput {
  create: AddressCreateWithoutLocationInput
  connectOrCreate: AddressCreateOrConnectWithoutLocationInput
  upsert: AddressUpsertWithoutLocationInput
  disconnect: Boolean
  delete: Boolean
  connect: AddressWhereUniqueInput
  update: AddressUpdateWithoutLocationInput
}

input AddressUpdateWithoutAddressComponentsInput {
  id: StringFieldUpdateOperationsInput
  formattedAddress: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Location: LocationUpdateManyWithoutAddressNestedInput
}

input AddressUpdateWithoutLocationInput {
  id: StringFieldUpdateOperationsInput
  formattedAddress: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  AddressComponents: AddressComponentUpdateManyWithoutAddressNestedInput
}

input AddressUpsertWithoutAddressComponentsInput {
  update: AddressUpdateWithoutAddressComponentsInput!
  create: AddressCreateWithoutAddressComponentsInput!
}

input AddressUpsertWithoutLocationInput {
  update: AddressUpdateWithoutLocationInput!
  create: AddressCreateWithoutLocationInput!
}

input AddressWhereInput {
  AND: [AddressWhereInput!]
  OR: [AddressWhereInput!]
  NOT: [AddressWhereInput!]
  id: StringFilter
  formattedAddress: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  Location: LocationListRelationFilter
  AddressComponents: AddressComponentListRelationFilter
}

input AddressWhereUniqueInput {
  id: String
}

enum AppType {
  BARFRIENDS
  PETFRIENDS
}

type Area {
  id: ID!
  City: City!
  State: State!
  Country: Country!
  cityId: String!
  stateId: String!
  countryId: String!
  ComingArea: ComingArea
  H3Index6VenueRecommendation: H3Index6VenueRecommendation
  Location: Location
  H3Index5VenueRecommendation: H3Index5VenueRecommendation
}

input AreaCountOrderByAggregateInput {
  id: SortOrder
  cityId: SortOrder
  stateId: SortOrder
  countryId: SortOrder
}

input AreaCreateInput {
  id: String
  City: CityCreateNestedOneWithoutAreaInput!
  State: StateCreateNestedOneWithoutAreaInput!
  Country: CountryCreateNestedOneWithoutAreaInput!
  ComingArea: ComingAreaCreateNestedOneWithoutAreaInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutAreaInput
  Location: LocationCreateNestedOneWithoutAreaInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutAreaInput
}

input AreaCreateManyCityInput {
  id: String
  stateId: String!
  countryId: String!
}

input AreaCreateManyCityInputEnvelope {
  data: [AreaCreateManyCityInput!]!
  skipDuplicates: Boolean
}

input AreaCreateManyCountryInput {
  id: String
  cityId: String!
  stateId: String!
}

input AreaCreateManyCountryInputEnvelope {
  data: [AreaCreateManyCountryInput!]!
  skipDuplicates: Boolean
}

input AreaCreateManyInput {
  id: String
  cityId: String!
  stateId: String!
  countryId: String!
}

input AreaCreateManyStateInput {
  id: String
  cityId: String!
  countryId: String!
}

input AreaCreateManyStateInputEnvelope {
  data: [AreaCreateManyStateInput!]!
  skipDuplicates: Boolean
}

input AreaCreateNestedManyWithoutCityInput {
  create: AreaCreateWithoutCityInput
  connectOrCreate: [AreaCreateOrConnectWithoutCityInput!]
  createMany: AreaCreateManyCityInputEnvelope
  connect: [AreaWhereUniqueInput!]
}

input AreaCreateNestedManyWithoutCountryInput {
  create: AreaCreateWithoutCountryInput
  connectOrCreate: [AreaCreateOrConnectWithoutCountryInput!]
  createMany: AreaCreateManyCountryInputEnvelope
  connect: [AreaWhereUniqueInput!]
}

input AreaCreateNestedManyWithoutStateInput {
  create: AreaCreateWithoutStateInput
  connectOrCreate: [AreaCreateOrConnectWithoutStateInput!]
  createMany: AreaCreateManyStateInputEnvelope
  connect: [AreaWhereUniqueInput!]
}

input AreaCreateNestedOneWithoutComingAreaInput {
  create: AreaCreateWithoutComingAreaInput
  connectOrCreate: AreaCreateOrConnectWithoutComingAreaInput
  connect: AreaWhereUniqueInput
}

input AreaCreateNestedOneWithoutH3Index5VenueRecommendationInput {
  create: AreaCreateWithoutH3Index5VenueRecommendationInput
  connectOrCreate: AreaCreateOrConnectWithoutH3Index5VenueRecommendationInput
  connect: AreaWhereUniqueInput
}

input AreaCreateNestedOneWithoutH3Index6VenueRecommendationInput {
  create: AreaCreateWithoutH3Index6VenueRecommendationInput
  connectOrCreate: AreaCreateOrConnectWithoutH3Index6VenueRecommendationInput
  connect: AreaWhereUniqueInput
}

input AreaCreateNestedOneWithoutLocationInput {
  create: AreaCreateWithoutLocationInput
  connectOrCreate: AreaCreateOrConnectWithoutLocationInput
  connect: AreaWhereUniqueInput
}

input AreaCreateOrConnectWithoutCityInput {
  where: AreaWhereUniqueInput!
  create: AreaCreateWithoutCityInput!
}

input AreaCreateOrConnectWithoutComingAreaInput {
  where: AreaWhereUniqueInput!
  create: AreaCreateWithoutComingAreaInput!
}

input AreaCreateOrConnectWithoutCountryInput {
  where: AreaWhereUniqueInput!
  create: AreaCreateWithoutCountryInput!
}

input AreaCreateOrConnectWithoutH3Index5VenueRecommendationInput {
  where: AreaWhereUniqueInput!
  create: AreaCreateWithoutH3Index5VenueRecommendationInput!
}

input AreaCreateOrConnectWithoutH3Index6VenueRecommendationInput {
  where: AreaWhereUniqueInput!
  create: AreaCreateWithoutH3Index6VenueRecommendationInput!
}

input AreaCreateOrConnectWithoutLocationInput {
  where: AreaWhereUniqueInput!
  create: AreaCreateWithoutLocationInput!
}

input AreaCreateOrConnectWithoutStateInput {
  where: AreaWhereUniqueInput!
  create: AreaCreateWithoutStateInput!
}

input AreaCreateWithoutCityInput {
  id: String
  State: StateCreateNestedOneWithoutAreaInput!
  Country: CountryCreateNestedOneWithoutAreaInput!
  ComingArea: ComingAreaCreateNestedOneWithoutAreaInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutAreaInput
  Location: LocationCreateNestedOneWithoutAreaInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutAreaInput
}

input AreaCreateWithoutComingAreaInput {
  id: String
  City: CityCreateNestedOneWithoutAreaInput!
  State: StateCreateNestedOneWithoutAreaInput!
  Country: CountryCreateNestedOneWithoutAreaInput!
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutAreaInput
  Location: LocationCreateNestedOneWithoutAreaInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutAreaInput
}

input AreaCreateWithoutCountryInput {
  id: String
  City: CityCreateNestedOneWithoutAreaInput!
  State: StateCreateNestedOneWithoutAreaInput!
  ComingArea: ComingAreaCreateNestedOneWithoutAreaInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutAreaInput
  Location: LocationCreateNestedOneWithoutAreaInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutAreaInput
}

input AreaCreateWithoutH3Index5VenueRecommendationInput {
  id: String
  City: CityCreateNestedOneWithoutAreaInput!
  State: StateCreateNestedOneWithoutAreaInput!
  Country: CountryCreateNestedOneWithoutAreaInput!
  ComingArea: ComingAreaCreateNestedOneWithoutAreaInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutAreaInput
  Location: LocationCreateNestedOneWithoutAreaInput
}

input AreaCreateWithoutH3Index6VenueRecommendationInput {
  id: String
  City: CityCreateNestedOneWithoutAreaInput!
  State: StateCreateNestedOneWithoutAreaInput!
  Country: CountryCreateNestedOneWithoutAreaInput!
  ComingArea: ComingAreaCreateNestedOneWithoutAreaInput
  Location: LocationCreateNestedOneWithoutAreaInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutAreaInput
}

input AreaCreateWithoutLocationInput {
  id: String
  City: CityCreateNestedOneWithoutAreaInput!
  State: StateCreateNestedOneWithoutAreaInput!
  Country: CountryCreateNestedOneWithoutAreaInput!
  ComingArea: ComingAreaCreateNestedOneWithoutAreaInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutAreaInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutAreaInput
}

input AreaCreateWithoutStateInput {
  id: String
  City: CityCreateNestedOneWithoutAreaInput!
  Country: CountryCreateNestedOneWithoutAreaInput!
  ComingArea: ComingAreaCreateNestedOneWithoutAreaInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutAreaInput
  Location: LocationCreateNestedOneWithoutAreaInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutAreaInput
}

input AreaListRelationFilter {
  every: AreaWhereInput
  some: AreaWhereInput
  none: AreaWhereInput
}

input AreaMaxOrderByAggregateInput {
  id: SortOrder
  cityId: SortOrder
  stateId: SortOrder
  countryId: SortOrder
}

input AreaMinOrderByAggregateInput {
  id: SortOrder
  cityId: SortOrder
  stateId: SortOrder
  countryId: SortOrder
}

input AreaOrderByRelationAggregateInput {
  _count: SortOrder
}

input AreaOrderByWithAggregationInput {
  id: SortOrder
  cityId: SortOrder
  stateId: SortOrder
  countryId: SortOrder
  _count: AreaCountOrderByAggregateInput
  _max: AreaMaxOrderByAggregateInput
  _min: AreaMinOrderByAggregateInput
}

input AreaOrderByWithRelationInput {
  id: SortOrder
  cityId: SortOrder
  stateId: SortOrder
  countryId: SortOrder
  City: CityOrderByWithRelationInput
  State: StateOrderByWithRelationInput
  Country: CountryOrderByWithRelationInput
  ComingArea: ComingAreaOrderByWithRelationInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationOrderByWithRelationInput
  Location: LocationOrderByWithRelationInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationOrderByWithRelationInput
}

input AreaRelationFilter {
  is: AreaWhereInput
  isNot: AreaWhereInput
}

type AreaResponse {
  Country: Country!
  State: State!
  City: City!
  Geometry: Coords!
}

enum AreaScalarFieldEnum {
  id
  cityId
  stateId
  countryId
}

input AreaScalarWhereInput {
  AND: [AreaScalarWhereInput!]
  OR: [AreaScalarWhereInput!]
  NOT: [AreaScalarWhereInput!]
  id: StringFilter
  cityId: StringFilter
  stateId: StringFilter
  countryId: StringFilter
}

input AreaScalarWhereWithAggregatesInput {
  AND: [AreaScalarWhereWithAggregatesInput!]
  OR: [AreaScalarWhereWithAggregatesInput!]
  NOT: [AreaScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  cityId: StringWithAggregatesFilter
  stateId: StringWithAggregatesFilter
  countryId: StringWithAggregatesFilter
}

input AreaUpdateInput {
  id: StringFieldUpdateOperationsInput
  City: CityUpdateOneRequiredWithoutAreaNestedInput
  State: StateUpdateOneRequiredWithoutAreaNestedInput
  Country: CountryUpdateOneRequiredWithoutAreaNestedInput
  ComingArea: ComingAreaUpdateOneWithoutAreaNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutAreaNestedInput
  Location: LocationUpdateOneWithoutAreaNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutAreaNestedInput
}

input AreaUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input AreaUpdateManyWithWhereWithoutCityInput {
  where: AreaScalarWhereInput!
  data: AreaUpdateManyMutationInput!
}

input AreaUpdateManyWithWhereWithoutCountryInput {
  where: AreaScalarWhereInput!
  data: AreaUpdateManyMutationInput!
}

input AreaUpdateManyWithWhereWithoutStateInput {
  where: AreaScalarWhereInput!
  data: AreaUpdateManyMutationInput!
}

input AreaUpdateManyWithoutCityNestedInput {
  create: AreaCreateWithoutCityInput
  connectOrCreate: [AreaCreateOrConnectWithoutCityInput!]
  upsert: [AreaUpsertWithWhereUniqueWithoutCityInput!]
  createMany: AreaCreateManyCityInputEnvelope
  set: [AreaWhereUniqueInput!]
  disconnect: [AreaWhereUniqueInput!]
  delete: [AreaWhereUniqueInput!]
  connect: [AreaWhereUniqueInput!]
  update: [AreaUpdateWithWhereUniqueWithoutCityInput!]
  updateMany: [AreaUpdateManyWithWhereWithoutCityInput!]
  deleteMany: [AreaScalarWhereInput!]
}

input AreaUpdateManyWithoutCountryNestedInput {
  create: AreaCreateWithoutCountryInput
  connectOrCreate: [AreaCreateOrConnectWithoutCountryInput!]
  upsert: [AreaUpsertWithWhereUniqueWithoutCountryInput!]
  createMany: AreaCreateManyCountryInputEnvelope
  set: [AreaWhereUniqueInput!]
  disconnect: [AreaWhereUniqueInput!]
  delete: [AreaWhereUniqueInput!]
  connect: [AreaWhereUniqueInput!]
  update: [AreaUpdateWithWhereUniqueWithoutCountryInput!]
  updateMany: [AreaUpdateManyWithWhereWithoutCountryInput!]
  deleteMany: [AreaScalarWhereInput!]
}

input AreaUpdateManyWithoutStateNestedInput {
  create: AreaCreateWithoutStateInput
  connectOrCreate: [AreaCreateOrConnectWithoutStateInput!]
  upsert: [AreaUpsertWithWhereUniqueWithoutStateInput!]
  createMany: AreaCreateManyStateInputEnvelope
  set: [AreaWhereUniqueInput!]
  disconnect: [AreaWhereUniqueInput!]
  delete: [AreaWhereUniqueInput!]
  connect: [AreaWhereUniqueInput!]
  update: [AreaUpdateWithWhereUniqueWithoutStateInput!]
  updateMany: [AreaUpdateManyWithWhereWithoutStateInput!]
  deleteMany: [AreaScalarWhereInput!]
}

input AreaUpdateOneWithoutComingAreaNestedInput {
  create: AreaCreateWithoutComingAreaInput
  connectOrCreate: AreaCreateOrConnectWithoutComingAreaInput
  upsert: AreaUpsertWithoutComingAreaInput
  disconnect: Boolean
  delete: Boolean
  connect: AreaWhereUniqueInput
  update: AreaUpdateWithoutComingAreaInput
}

input AreaUpdateOneWithoutH3Index5VenueRecommendationNestedInput {
  create: AreaCreateWithoutH3Index5VenueRecommendationInput
  connectOrCreate: AreaCreateOrConnectWithoutH3Index5VenueRecommendationInput
  upsert: AreaUpsertWithoutH3Index5VenueRecommendationInput
  disconnect: Boolean
  delete: Boolean
  connect: AreaWhereUniqueInput
  update: AreaUpdateWithoutH3Index5VenueRecommendationInput
}

input AreaUpdateOneWithoutH3Index6VenueRecommendationNestedInput {
  create: AreaCreateWithoutH3Index6VenueRecommendationInput
  connectOrCreate: AreaCreateOrConnectWithoutH3Index6VenueRecommendationInput
  upsert: AreaUpsertWithoutH3Index6VenueRecommendationInput
  disconnect: Boolean
  delete: Boolean
  connect: AreaWhereUniqueInput
  update: AreaUpdateWithoutH3Index6VenueRecommendationInput
}

input AreaUpdateOneWithoutLocationNestedInput {
  create: AreaCreateWithoutLocationInput
  connectOrCreate: AreaCreateOrConnectWithoutLocationInput
  upsert: AreaUpsertWithoutLocationInput
  disconnect: Boolean
  delete: Boolean
  connect: AreaWhereUniqueInput
  update: AreaUpdateWithoutLocationInput
}

input AreaUpdateWithWhereUniqueWithoutCityInput {
  where: AreaWhereUniqueInput!
  data: AreaUpdateWithoutCityInput!
}

input AreaUpdateWithWhereUniqueWithoutCountryInput {
  where: AreaWhereUniqueInput!
  data: AreaUpdateWithoutCountryInput!
}

input AreaUpdateWithWhereUniqueWithoutStateInput {
  where: AreaWhereUniqueInput!
  data: AreaUpdateWithoutStateInput!
}

input AreaUpdateWithoutCityInput {
  id: StringFieldUpdateOperationsInput
  State: StateUpdateOneRequiredWithoutAreaNestedInput
  Country: CountryUpdateOneRequiredWithoutAreaNestedInput
  ComingArea: ComingAreaUpdateOneWithoutAreaNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutAreaNestedInput
  Location: LocationUpdateOneWithoutAreaNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutAreaNestedInput
}

input AreaUpdateWithoutComingAreaInput {
  id: StringFieldUpdateOperationsInput
  City: CityUpdateOneRequiredWithoutAreaNestedInput
  State: StateUpdateOneRequiredWithoutAreaNestedInput
  Country: CountryUpdateOneRequiredWithoutAreaNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutAreaNestedInput
  Location: LocationUpdateOneWithoutAreaNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutAreaNestedInput
}

input AreaUpdateWithoutCountryInput {
  id: StringFieldUpdateOperationsInput
  City: CityUpdateOneRequiredWithoutAreaNestedInput
  State: StateUpdateOneRequiredWithoutAreaNestedInput
  ComingArea: ComingAreaUpdateOneWithoutAreaNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutAreaNestedInput
  Location: LocationUpdateOneWithoutAreaNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutAreaNestedInput
}

input AreaUpdateWithoutH3Index5VenueRecommendationInput {
  id: StringFieldUpdateOperationsInput
  City: CityUpdateOneRequiredWithoutAreaNestedInput
  State: StateUpdateOneRequiredWithoutAreaNestedInput
  Country: CountryUpdateOneRequiredWithoutAreaNestedInput
  ComingArea: ComingAreaUpdateOneWithoutAreaNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutAreaNestedInput
  Location: LocationUpdateOneWithoutAreaNestedInput
}

input AreaUpdateWithoutH3Index6VenueRecommendationInput {
  id: StringFieldUpdateOperationsInput
  City: CityUpdateOneRequiredWithoutAreaNestedInput
  State: StateUpdateOneRequiredWithoutAreaNestedInput
  Country: CountryUpdateOneRequiredWithoutAreaNestedInput
  ComingArea: ComingAreaUpdateOneWithoutAreaNestedInput
  Location: LocationUpdateOneWithoutAreaNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutAreaNestedInput
}

input AreaUpdateWithoutLocationInput {
  id: StringFieldUpdateOperationsInput
  City: CityUpdateOneRequiredWithoutAreaNestedInput
  State: StateUpdateOneRequiredWithoutAreaNestedInput
  Country: CountryUpdateOneRequiredWithoutAreaNestedInput
  ComingArea: ComingAreaUpdateOneWithoutAreaNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutAreaNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutAreaNestedInput
}

input AreaUpdateWithoutStateInput {
  id: StringFieldUpdateOperationsInput
  City: CityUpdateOneRequiredWithoutAreaNestedInput
  Country: CountryUpdateOneRequiredWithoutAreaNestedInput
  ComingArea: ComingAreaUpdateOneWithoutAreaNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutAreaNestedInput
  Location: LocationUpdateOneWithoutAreaNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutAreaNestedInput
}

input AreaUpsertWithWhereUniqueWithoutCityInput {
  where: AreaWhereUniqueInput!
  update: AreaUpdateWithoutCityInput!
  create: AreaCreateWithoutCityInput!
}

input AreaUpsertWithWhereUniqueWithoutCountryInput {
  where: AreaWhereUniqueInput!
  update: AreaUpdateWithoutCountryInput!
  create: AreaCreateWithoutCountryInput!
}

input AreaUpsertWithWhereUniqueWithoutStateInput {
  where: AreaWhereUniqueInput!
  update: AreaUpdateWithoutStateInput!
  create: AreaCreateWithoutStateInput!
}

input AreaUpsertWithoutComingAreaInput {
  update: AreaUpdateWithoutComingAreaInput!
  create: AreaCreateWithoutComingAreaInput!
}

input AreaUpsertWithoutH3Index5VenueRecommendationInput {
  update: AreaUpdateWithoutH3Index5VenueRecommendationInput!
  create: AreaCreateWithoutH3Index5VenueRecommendationInput!
}

input AreaUpsertWithoutH3Index6VenueRecommendationInput {
  update: AreaUpdateWithoutH3Index6VenueRecommendationInput!
  create: AreaCreateWithoutH3Index6VenueRecommendationInput!
}

input AreaUpsertWithoutLocationInput {
  update: AreaUpdateWithoutLocationInput!
  create: AreaCreateWithoutLocationInput!
}

input AreaWhereInput {
  AND: [AreaWhereInput!]
  OR: [AreaWhereInput!]
  NOT: [AreaWhereInput!]
  id: StringFilter
  cityId: StringFilter
  stateId: StringFilter
  countryId: StringFilter
  City: CityWhereInput
  State: StateWhereInput
  Country: CountryWhereInput
  ComingArea: ComingAreaWhereInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationWhereInput
  Location: LocationWhereInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationWhereInput
}

input AreaWhereUniqueInput {
  id: String
}

type AuthenticationProvider {
  id: ID!
  Credentials: Credentials
  phones(where: PhoneWhereInput, orderBy: [PhoneOrderByWithRelationInput!], cursor: PhoneWhereUniqueInput, take: Int, skip: Int, distinct: [PhoneScalarFieldEnum!]): [Phone!]!
  emails(where: EmailWhereInput, orderBy: [EmailOrderByWithRelationInput!], cursor: EmailWhereUniqueInput, take: Int, skip: Int, distinct: [EmailScalarFieldEnum!]): [Email!]!
  Password: Password
  codepassword: Code
}

input AuthenticationProviderCountOrderByAggregateInput {
  id: SortOrder
}

input AuthenticationProviderCreateInput {
  id: String
  Credentials: CredentialsCreateNestedOneWithoutAuthenticationProviderInput
  phones: PhoneCreateNestedManyWithoutAuthenticationProviderInput
  emails: EmailCreateNestedManyWithoutAuthenticationProviderInput
  Password: PasswordCreateNestedOneWithoutAuthenticationProviderInput
  codepassword: CodeCreateNestedOneWithoutAuthenticationProviderInput
}

input AuthenticationProviderCreateManyInput {
  id: String
}

input AuthenticationProviderCreateNestedManyWithoutEmailsInput {
  create: AuthenticationProviderCreateWithoutEmailsInput
  connectOrCreate: [AuthenticationProviderCreateOrConnectWithoutEmailsInput!]
  connect: [AuthenticationProviderWhereUniqueInput!]
}

input AuthenticationProviderCreateNestedManyWithoutPhonesInput {
  create: AuthenticationProviderCreateWithoutPhonesInput
  connectOrCreate: [AuthenticationProviderCreateOrConnectWithoutPhonesInput!]
  connect: [AuthenticationProviderWhereUniqueInput!]
}

input AuthenticationProviderCreateNestedOneWithoutCodepasswordInput {
  create: AuthenticationProviderCreateWithoutCodepasswordInput
  connectOrCreate: AuthenticationProviderCreateOrConnectWithoutCodepasswordInput
  connect: AuthenticationProviderWhereUniqueInput
}

input AuthenticationProviderCreateNestedOneWithoutCredentialsInput {
  create: AuthenticationProviderCreateWithoutCredentialsInput
  connectOrCreate: AuthenticationProviderCreateOrConnectWithoutCredentialsInput
  connect: AuthenticationProviderWhereUniqueInput
}

input AuthenticationProviderCreateNestedOneWithoutPasswordInput {
  create: AuthenticationProviderCreateWithoutPasswordInput
  connectOrCreate: AuthenticationProviderCreateOrConnectWithoutPasswordInput
  connect: AuthenticationProviderWhereUniqueInput
}

input AuthenticationProviderCreateOrConnectWithoutCodepasswordInput {
  where: AuthenticationProviderWhereUniqueInput!
  create: AuthenticationProviderCreateWithoutCodepasswordInput!
}

input AuthenticationProviderCreateOrConnectWithoutCredentialsInput {
  where: AuthenticationProviderWhereUniqueInput!
  create: AuthenticationProviderCreateWithoutCredentialsInput!
}

input AuthenticationProviderCreateOrConnectWithoutEmailsInput {
  where: AuthenticationProviderWhereUniqueInput!
  create: AuthenticationProviderCreateWithoutEmailsInput!
}

input AuthenticationProviderCreateOrConnectWithoutPasswordInput {
  where: AuthenticationProviderWhereUniqueInput!
  create: AuthenticationProviderCreateWithoutPasswordInput!
}

input AuthenticationProviderCreateOrConnectWithoutPhonesInput {
  where: AuthenticationProviderWhereUniqueInput!
  create: AuthenticationProviderCreateWithoutPhonesInput!
}

input AuthenticationProviderCreateWithoutCodepasswordInput {
  id: String
  Credentials: CredentialsCreateNestedOneWithoutAuthenticationProviderInput
  phones: PhoneCreateNestedManyWithoutAuthenticationProviderInput
  emails: EmailCreateNestedManyWithoutAuthenticationProviderInput
  Password: PasswordCreateNestedOneWithoutAuthenticationProviderInput
}

input AuthenticationProviderCreateWithoutCredentialsInput {
  id: String
  phones: PhoneCreateNestedManyWithoutAuthenticationProviderInput
  emails: EmailCreateNestedManyWithoutAuthenticationProviderInput
  Password: PasswordCreateNestedOneWithoutAuthenticationProviderInput
  codepassword: CodeCreateNestedOneWithoutAuthenticationProviderInput
}

input AuthenticationProviderCreateWithoutEmailsInput {
  id: String
  Credentials: CredentialsCreateNestedOneWithoutAuthenticationProviderInput
  phones: PhoneCreateNestedManyWithoutAuthenticationProviderInput
  Password: PasswordCreateNestedOneWithoutAuthenticationProviderInput
  codepassword: CodeCreateNestedOneWithoutAuthenticationProviderInput
}

input AuthenticationProviderCreateWithoutPasswordInput {
  id: String
  Credentials: CredentialsCreateNestedOneWithoutAuthenticationProviderInput
  phones: PhoneCreateNestedManyWithoutAuthenticationProviderInput
  emails: EmailCreateNestedManyWithoutAuthenticationProviderInput
  codepassword: CodeCreateNestedOneWithoutAuthenticationProviderInput
}

input AuthenticationProviderCreateWithoutPhonesInput {
  id: String
  Credentials: CredentialsCreateNestedOneWithoutAuthenticationProviderInput
  emails: EmailCreateNestedManyWithoutAuthenticationProviderInput
  Password: PasswordCreateNestedOneWithoutAuthenticationProviderInput
  codepassword: CodeCreateNestedOneWithoutAuthenticationProviderInput
}

input AuthenticationProviderListRelationFilter {
  every: AuthenticationProviderWhereInput
  some: AuthenticationProviderWhereInput
  none: AuthenticationProviderWhereInput
}

input AuthenticationProviderMaxOrderByAggregateInput {
  id: SortOrder
}

input AuthenticationProviderMinOrderByAggregateInput {
  id: SortOrder
}

input AuthenticationProviderOrderByRelationAggregateInput {
  _count: SortOrder
}

input AuthenticationProviderOrderByWithAggregationInput {
  id: SortOrder
  _count: AuthenticationProviderCountOrderByAggregateInput
  _max: AuthenticationProviderMaxOrderByAggregateInput
  _min: AuthenticationProviderMinOrderByAggregateInput
}

input AuthenticationProviderOrderByWithRelationInput {
  id: SortOrder
  Credentials: CredentialsOrderByWithRelationInput
  phones: PhoneOrderByRelationAggregateInput
  emails: EmailOrderByRelationAggregateInput
  Password: PasswordOrderByWithRelationInput
  codepassword: CodeOrderByWithRelationInput
}

input AuthenticationProviderRelationFilter {
  is: AuthenticationProviderWhereInput
  isNot: AuthenticationProviderWhereInput
}

enum AuthenticationProviderScalarFieldEnum {
  id
}

input AuthenticationProviderScalarWhereInput {
  AND: [AuthenticationProviderScalarWhereInput!]
  OR: [AuthenticationProviderScalarWhereInput!]
  NOT: [AuthenticationProviderScalarWhereInput!]
  id: StringFilter
}

input AuthenticationProviderScalarWhereWithAggregatesInput {
  AND: [AuthenticationProviderScalarWhereWithAggregatesInput!]
  OR: [AuthenticationProviderScalarWhereWithAggregatesInput!]
  NOT: [AuthenticationProviderScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
}

input AuthenticationProviderUpdateInput {
  id: StringFieldUpdateOperationsInput
  Credentials: CredentialsUpdateOneWithoutAuthenticationProviderNestedInput
  phones: PhoneUpdateManyWithoutAuthenticationProviderNestedInput
  emails: EmailUpdateManyWithoutAuthenticationProviderNestedInput
  Password: PasswordUpdateOneWithoutAuthenticationProviderNestedInput
  codepassword: CodeUpdateOneWithoutAuthenticationProviderNestedInput
}

input AuthenticationProviderUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input AuthenticationProviderUpdateManyWithWhereWithoutEmailsInput {
  where: AuthenticationProviderScalarWhereInput!
  data: AuthenticationProviderUpdateManyMutationInput!
}

input AuthenticationProviderUpdateManyWithWhereWithoutPhonesInput {
  where: AuthenticationProviderScalarWhereInput!
  data: AuthenticationProviderUpdateManyMutationInput!
}

input AuthenticationProviderUpdateManyWithoutEmailsNestedInput {
  create: AuthenticationProviderCreateWithoutEmailsInput
  connectOrCreate: [AuthenticationProviderCreateOrConnectWithoutEmailsInput!]
  upsert: [AuthenticationProviderUpsertWithWhereUniqueWithoutEmailsInput!]
  set: [AuthenticationProviderWhereUniqueInput!]
  disconnect: [AuthenticationProviderWhereUniqueInput!]
  delete: [AuthenticationProviderWhereUniqueInput!]
  connect: [AuthenticationProviderWhereUniqueInput!]
  update: [AuthenticationProviderUpdateWithWhereUniqueWithoutEmailsInput!]
  updateMany: [AuthenticationProviderUpdateManyWithWhereWithoutEmailsInput!]
  deleteMany: [AuthenticationProviderScalarWhereInput!]
}

input AuthenticationProviderUpdateManyWithoutPhonesNestedInput {
  create: AuthenticationProviderCreateWithoutPhonesInput
  connectOrCreate: [AuthenticationProviderCreateOrConnectWithoutPhonesInput!]
  upsert: [AuthenticationProviderUpsertWithWhereUniqueWithoutPhonesInput!]
  set: [AuthenticationProviderWhereUniqueInput!]
  disconnect: [AuthenticationProviderWhereUniqueInput!]
  delete: [AuthenticationProviderWhereUniqueInput!]
  connect: [AuthenticationProviderWhereUniqueInput!]
  update: [AuthenticationProviderUpdateWithWhereUniqueWithoutPhonesInput!]
  updateMany: [AuthenticationProviderUpdateManyWithWhereWithoutPhonesInput!]
  deleteMany: [AuthenticationProviderScalarWhereInput!]
}

input AuthenticationProviderUpdateOneRequiredWithoutPasswordNestedInput {
  create: AuthenticationProviderCreateWithoutPasswordInput
  connectOrCreate: AuthenticationProviderCreateOrConnectWithoutPasswordInput
  upsert: AuthenticationProviderUpsertWithoutPasswordInput
  connect: AuthenticationProviderWhereUniqueInput
  update: AuthenticationProviderUpdateWithoutPasswordInput
}

input AuthenticationProviderUpdateOneWithoutCodepasswordNestedInput {
  create: AuthenticationProviderCreateWithoutCodepasswordInput
  connectOrCreate: AuthenticationProviderCreateOrConnectWithoutCodepasswordInput
  upsert: AuthenticationProviderUpsertWithoutCodepasswordInput
  disconnect: Boolean
  delete: Boolean
  connect: AuthenticationProviderWhereUniqueInput
  update: AuthenticationProviderUpdateWithoutCodepasswordInput
}

input AuthenticationProviderUpdateOneWithoutCredentialsNestedInput {
  create: AuthenticationProviderCreateWithoutCredentialsInput
  connectOrCreate: AuthenticationProviderCreateOrConnectWithoutCredentialsInput
  upsert: AuthenticationProviderUpsertWithoutCredentialsInput
  disconnect: Boolean
  delete: Boolean
  connect: AuthenticationProviderWhereUniqueInput
  update: AuthenticationProviderUpdateWithoutCredentialsInput
}

input AuthenticationProviderUpdateWithWhereUniqueWithoutEmailsInput {
  where: AuthenticationProviderWhereUniqueInput!
  data: AuthenticationProviderUpdateWithoutEmailsInput!
}

input AuthenticationProviderUpdateWithWhereUniqueWithoutPhonesInput {
  where: AuthenticationProviderWhereUniqueInput!
  data: AuthenticationProviderUpdateWithoutPhonesInput!
}

input AuthenticationProviderUpdateWithoutCodepasswordInput {
  id: StringFieldUpdateOperationsInput
  Credentials: CredentialsUpdateOneWithoutAuthenticationProviderNestedInput
  phones: PhoneUpdateManyWithoutAuthenticationProviderNestedInput
  emails: EmailUpdateManyWithoutAuthenticationProviderNestedInput
  Password: PasswordUpdateOneWithoutAuthenticationProviderNestedInput
}

input AuthenticationProviderUpdateWithoutCredentialsInput {
  id: StringFieldUpdateOperationsInput
  phones: PhoneUpdateManyWithoutAuthenticationProviderNestedInput
  emails: EmailUpdateManyWithoutAuthenticationProviderNestedInput
  Password: PasswordUpdateOneWithoutAuthenticationProviderNestedInput
  codepassword: CodeUpdateOneWithoutAuthenticationProviderNestedInput
}

input AuthenticationProviderUpdateWithoutEmailsInput {
  id: StringFieldUpdateOperationsInput
  Credentials: CredentialsUpdateOneWithoutAuthenticationProviderNestedInput
  phones: PhoneUpdateManyWithoutAuthenticationProviderNestedInput
  Password: PasswordUpdateOneWithoutAuthenticationProviderNestedInput
  codepassword: CodeUpdateOneWithoutAuthenticationProviderNestedInput
}

input AuthenticationProviderUpdateWithoutPasswordInput {
  id: StringFieldUpdateOperationsInput
  Credentials: CredentialsUpdateOneWithoutAuthenticationProviderNestedInput
  phones: PhoneUpdateManyWithoutAuthenticationProviderNestedInput
  emails: EmailUpdateManyWithoutAuthenticationProviderNestedInput
  codepassword: CodeUpdateOneWithoutAuthenticationProviderNestedInput
}

input AuthenticationProviderUpdateWithoutPhonesInput {
  id: StringFieldUpdateOperationsInput
  Credentials: CredentialsUpdateOneWithoutAuthenticationProviderNestedInput
  emails: EmailUpdateManyWithoutAuthenticationProviderNestedInput
  Password: PasswordUpdateOneWithoutAuthenticationProviderNestedInput
  codepassword: CodeUpdateOneWithoutAuthenticationProviderNestedInput
}

input AuthenticationProviderUpsertWithWhereUniqueWithoutEmailsInput {
  where: AuthenticationProviderWhereUniqueInput!
  update: AuthenticationProviderUpdateWithoutEmailsInput!
  create: AuthenticationProviderCreateWithoutEmailsInput!
}

input AuthenticationProviderUpsertWithWhereUniqueWithoutPhonesInput {
  where: AuthenticationProviderWhereUniqueInput!
  update: AuthenticationProviderUpdateWithoutPhonesInput!
  create: AuthenticationProviderCreateWithoutPhonesInput!
}

input AuthenticationProviderUpsertWithoutCodepasswordInput {
  update: AuthenticationProviderUpdateWithoutCodepasswordInput!
  create: AuthenticationProviderCreateWithoutCodepasswordInput!
}

input AuthenticationProviderUpsertWithoutCredentialsInput {
  update: AuthenticationProviderUpdateWithoutCredentialsInput!
  create: AuthenticationProviderCreateWithoutCredentialsInput!
}

input AuthenticationProviderUpsertWithoutPasswordInput {
  update: AuthenticationProviderUpdateWithoutPasswordInput!
  create: AuthenticationProviderCreateWithoutPasswordInput!
}

input AuthenticationProviderWhereInput {
  AND: [AuthenticationProviderWhereInput!]
  OR: [AuthenticationProviderWhereInput!]
  NOT: [AuthenticationProviderWhereInput!]
  id: StringFilter
  Credentials: CredentialsWhereInput
  phones: PhoneListRelationFilter
  emails: EmailListRelationFilter
  Password: PasswordWhereInput
  codepassword: CodeWhereInput
}

input AuthenticationProviderWhereUniqueInput {
  id: String
}

input Authenticators {
  username: String
  EmailInput: EmailInput
  PhoneInput: PhoneInput
}

union AuthorizedProfilesResponseUnion = ProfilesResponse | ErrorProfiling

input AuthorizedProfilesWhereInput {
  profiles: CustomProfileWhereInput!
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input BoolNullableWithAggregatesFilter {
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedBoolNullableFilter
  _max: NestedBoolNullableFilter
}

input BoolWithAggregatesFilter {
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedBoolFilter
  _max: NestedBoolFilter
}

type Category {
  id: ID!
  name: String!
  Tags(where: TagWhereInput, orderBy: [TagOrderByWithRelationInput!], cursor: TagWhereUniqueInput, take: Int, skip: Int, distinct: [TagScalarFieldEnum!]): [Tag!]!
}

input CategoryCountOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
}

input CategoryCreateInput {
  id: String
  name: String!
  Tags: TagCreateNestedManyWithoutCategoryInput
}

input CategoryCreateManyInput {
  id: String
  name: String!
}

input CategoryCreateNestedOneWithoutTagsInput {
  create: CategoryCreateWithoutTagsInput
  connectOrCreate: CategoryCreateOrConnectWithoutTagsInput
  connect: CategoryWhereUniqueInput
}

input CategoryCreateOrConnectWithoutTagsInput {
  where: CategoryWhereUniqueInput!
  create: CategoryCreateWithoutTagsInput!
}

input CategoryCreateWithoutTagsInput {
  id: String
  name: String!
}

input CategoryMaxOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
}

input CategoryMinOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
}

input CategoryOrderByWithAggregationInput {
  id: SortOrder
  name: SortOrder
  _count: CategoryCountOrderByAggregateInput
  _max: CategoryMaxOrderByAggregateInput
  _min: CategoryMinOrderByAggregateInput
}

input CategoryOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  Tags: TagOrderByRelationAggregateInput
}

input CategoryRelationFilter {
  is: CategoryWhereInput
  isNot: CategoryWhereInput
}

enum CategoryScalarFieldEnum {
  id
  name
}

input CategoryScalarWhereWithAggregatesInput {
  AND: [CategoryScalarWhereWithAggregatesInput!]
  OR: [CategoryScalarWhereWithAggregatesInput!]
  NOT: [CategoryScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
}

input CategoryUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Tags: TagUpdateManyWithoutCategoryNestedInput
}

input CategoryUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CategoryUpdateOneWithoutTagsNestedInput {
  create: CategoryCreateWithoutTagsInput
  connectOrCreate: CategoryCreateOrConnectWithoutTagsInput
  upsert: CategoryUpsertWithoutTagsInput
  disconnect: Boolean
  delete: Boolean
  connect: CategoryWhereUniqueInput
  update: CategoryUpdateWithoutTagsInput
}

input CategoryUpdateWithoutTagsInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CategoryUpsertWithoutTagsInput {
  update: CategoryUpdateWithoutTagsInput!
  create: CategoryCreateWithoutTagsInput!
}

input CategoryWhereInput {
  AND: [CategoryWhereInput!]
  OR: [CategoryWhereInput!]
  NOT: [CategoryWhereInput!]
  id: StringFilter
  name: StringFilter
  Tags: TagListRelationFilter
}

input CategoryWhereUniqueInput {
  id: String
}

input ChatroomCountOrderByAggregateInput {
  id: SortOrder
}

input ChatroomCreateInput {
  id: String
  profiles: ProfileCreateNestedManyWithoutChatroomInput
  messages: MessageCreateNestedManyWithoutChatroomInput
}

input ChatroomCreateManyInput {
  id: String
}

input ChatroomCreateNestedManyWithoutProfilesInput {
  create: ChatroomCreateWithoutProfilesInput
  connectOrCreate: [ChatroomCreateOrConnectWithoutProfilesInput!]
  connect: [ChatroomWhereUniqueInput!]
}

input ChatroomCreateNestedOneWithoutMessagesInput {
  create: ChatroomCreateWithoutMessagesInput
  connectOrCreate: ChatroomCreateOrConnectWithoutMessagesInput
  connect: ChatroomWhereUniqueInput
}

input ChatroomCreateOrConnectWithoutMessagesInput {
  where: ChatroomWhereUniqueInput!
  create: ChatroomCreateWithoutMessagesInput!
}

input ChatroomCreateOrConnectWithoutProfilesInput {
  where: ChatroomWhereUniqueInput!
  create: ChatroomCreateWithoutProfilesInput!
}

input ChatroomCreateWithoutMessagesInput {
  id: String
  profiles: ProfileCreateNestedManyWithoutChatroomInput
}

input ChatroomCreateWithoutProfilesInput {
  id: String
  messages: MessageCreateNestedManyWithoutChatroomInput
}

input ChatroomListRelationFilter {
  every: ChatroomWhereInput
  some: ChatroomWhereInput
  none: ChatroomWhereInput
}

input ChatroomMaxOrderByAggregateInput {
  id: SortOrder
}

input ChatroomMinOrderByAggregateInput {
  id: SortOrder
}

input ChatroomOrderByRelationAggregateInput {
  _count: SortOrder
}

input ChatroomOrderByWithAggregationInput {
  id: SortOrder
  _count: ChatroomCountOrderByAggregateInput
  _max: ChatroomMaxOrderByAggregateInput
  _min: ChatroomMinOrderByAggregateInput
}

input ChatroomOrderByWithRelationInput {
  id: SortOrder
  profiles: ProfileOrderByRelationAggregateInput
  messages: MessageOrderByRelationAggregateInput
}

input ChatroomRelationFilter {
  is: ChatroomWhereInput
  isNot: ChatroomWhereInput
}

enum ChatroomScalarFieldEnum {
  id
}

input ChatroomScalarWhereInput {
  AND: [ChatroomScalarWhereInput!]
  OR: [ChatroomScalarWhereInput!]
  NOT: [ChatroomScalarWhereInput!]
  id: StringFilter
}

input ChatroomScalarWhereWithAggregatesInput {
  AND: [ChatroomScalarWhereWithAggregatesInput!]
  OR: [ChatroomScalarWhereWithAggregatesInput!]
  NOT: [ChatroomScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
}

input ChatroomUpdateInput {
  id: StringFieldUpdateOperationsInput
  profiles: ProfileUpdateManyWithoutChatroomNestedInput
  messages: MessageUpdateManyWithoutChatroomNestedInput
}

input ChatroomUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input ChatroomUpdateManyWithWhereWithoutProfilesInput {
  where: ChatroomScalarWhereInput!
  data: ChatroomUpdateManyMutationInput!
}

input ChatroomUpdateManyWithoutProfilesNestedInput {
  create: ChatroomCreateWithoutProfilesInput
  connectOrCreate: [ChatroomCreateOrConnectWithoutProfilesInput!]
  upsert: [ChatroomUpsertWithWhereUniqueWithoutProfilesInput!]
  set: [ChatroomWhereUniqueInput!]
  disconnect: [ChatroomWhereUniqueInput!]
  delete: [ChatroomWhereUniqueInput!]
  connect: [ChatroomWhereUniqueInput!]
  update: [ChatroomUpdateWithWhereUniqueWithoutProfilesInput!]
  updateMany: [ChatroomUpdateManyWithWhereWithoutProfilesInput!]
  deleteMany: [ChatroomScalarWhereInput!]
}

input ChatroomUpdateOneWithoutMessagesNestedInput {
  create: ChatroomCreateWithoutMessagesInput
  connectOrCreate: ChatroomCreateOrConnectWithoutMessagesInput
  upsert: ChatroomUpsertWithoutMessagesInput
  disconnect: Boolean
  delete: Boolean
  connect: ChatroomWhereUniqueInput
  update: ChatroomUpdateWithoutMessagesInput
}

input ChatroomUpdateWithWhereUniqueWithoutProfilesInput {
  where: ChatroomWhereUniqueInput!
  data: ChatroomUpdateWithoutProfilesInput!
}

input ChatroomUpdateWithoutMessagesInput {
  id: StringFieldUpdateOperationsInput
  profiles: ProfileUpdateManyWithoutChatroomNestedInput
}

input ChatroomUpdateWithoutProfilesInput {
  id: StringFieldUpdateOperationsInput
  messages: MessageUpdateManyWithoutChatroomNestedInput
}

input ChatroomUpsertWithWhereUniqueWithoutProfilesInput {
  where: ChatroomWhereUniqueInput!
  update: ChatroomUpdateWithoutProfilesInput!
  create: ChatroomCreateWithoutProfilesInput!
}

input ChatroomUpsertWithoutMessagesInput {
  update: ChatroomUpdateWithoutMessagesInput!
  create: ChatroomCreateWithoutMessagesInput!
}

input ChatroomWhereInput {
  AND: [ChatroomWhereInput!]
  OR: [ChatroomWhereInput!]
  NOT: [ChatroomWhereInput!]
  id: StringFilter
  profiles: ProfileListRelationFilter
  messages: MessageListRelationFilter
}

input ChatroomWhereUniqueInput {
  id: String
}

type City {
  id: ID!
  name: String!
  Geometry: Geometry!
  geometryId: Int!
  Area(where: AreaWhereInput, orderBy: [AreaOrderByWithRelationInput!], cursor: AreaWhereUniqueInput, take: Int, skip: Int, distinct: [AreaScalarFieldEnum!]): [Area!]!
}

input CityAvgOrderByAggregateInput {
  geometryId: SortOrder
}

input CityCountOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  geometryId: SortOrder
}

input CityCreateInput {
  id: String
  name: String!
  Geometry: GeometryCreateNestedOneWithoutCityInput!
  Area: AreaCreateNestedManyWithoutCityInput
}

input CityCreateManyInput {
  id: String
  name: String!
  geometryId: Int!
}

input CityCreateNestedOneWithoutAreaInput {
  create: CityCreateWithoutAreaInput
  connectOrCreate: CityCreateOrConnectWithoutAreaInput
  connect: CityWhereUniqueInput
}

input CityCreateNestedOneWithoutGeometryInput {
  create: CityCreateWithoutGeometryInput
  connectOrCreate: CityCreateOrConnectWithoutGeometryInput
  connect: CityWhereUniqueInput
}

input CityCreateOrConnectWithoutAreaInput {
  where: CityWhereUniqueInput!
  create: CityCreateWithoutAreaInput!
}

input CityCreateOrConnectWithoutGeometryInput {
  where: CityWhereUniqueInput!
  create: CityCreateWithoutGeometryInput!
}

input CityCreateWithoutAreaInput {
  id: String
  name: String!
  Geometry: GeometryCreateNestedOneWithoutCityInput!
}

input CityCreateWithoutGeometryInput {
  id: String
  name: String!
  Area: AreaCreateNestedManyWithoutCityInput
}

input CityMaxOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  geometryId: SortOrder
}

input CityMinOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  geometryId: SortOrder
}

input CityOrderByWithAggregationInput {
  id: SortOrder
  name: SortOrder
  geometryId: SortOrder
  _count: CityCountOrderByAggregateInput
  _avg: CityAvgOrderByAggregateInput
  _max: CityMaxOrderByAggregateInput
  _min: CityMinOrderByAggregateInput
  _sum: CitySumOrderByAggregateInput
}

input CityOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  geometryId: SortOrder
  Geometry: GeometryOrderByWithRelationInput
  Area: AreaOrderByRelationAggregateInput
}

input CityRelationFilter {
  is: CityWhereInput
  isNot: CityWhereInput
}

type CityResponseObject {
  name: String!
  stateCode: String!
  countryCode: String!
  latitude: String
  longitude: String
}

enum CityScalarFieldEnum {
  id
  name
  geometryId
}

input CityScalarWhereWithAggregatesInput {
  AND: [CityScalarWhereWithAggregatesInput!]
  OR: [CityScalarWhereWithAggregatesInput!]
  NOT: [CityScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
  geometryId: IntWithAggregatesFilter
}

input CitySumOrderByAggregateInput {
  geometryId: SortOrder
}

input CityUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Geometry: GeometryUpdateOneRequiredWithoutCityNestedInput
  Area: AreaUpdateManyWithoutCityNestedInput
}

input CityUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CityUpdateOneRequiredWithoutAreaNestedInput {
  create: CityCreateWithoutAreaInput
  connectOrCreate: CityCreateOrConnectWithoutAreaInput
  upsert: CityUpsertWithoutAreaInput
  connect: CityWhereUniqueInput
  update: CityUpdateWithoutAreaInput
}

input CityUpdateOneWithoutGeometryNestedInput {
  create: CityCreateWithoutGeometryInput
  connectOrCreate: CityCreateOrConnectWithoutGeometryInput
  upsert: CityUpsertWithoutGeometryInput
  disconnect: Boolean
  delete: Boolean
  connect: CityWhereUniqueInput
  update: CityUpdateWithoutGeometryInput
}

input CityUpdateWithoutAreaInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Geometry: GeometryUpdateOneRequiredWithoutCityNestedInput
}

input CityUpdateWithoutGeometryInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Area: AreaUpdateManyWithoutCityNestedInput
}

input CityUpsertWithoutAreaInput {
  update: CityUpdateWithoutAreaInput!
  create: CityCreateWithoutAreaInput!
}

input CityUpsertWithoutGeometryInput {
  update: CityUpdateWithoutGeometryInput!
  create: CityCreateWithoutGeometryInput!
}

input CityWhereInput {
  AND: [CityWhereInput!]
  OR: [CityWhereInput!]
  NOT: [CityWhereInput!]
  id: StringFilter
  name: StringFilter
  geometryId: IntFilter
  Geometry: GeometryWhereInput
  Area: AreaListRelationFilter
}

input CityWhereUniqueInput {
  id: String
  name: String
  geometryId: Int
}

type Code {
  id: ID!
  code: String!
}

input CodeCountOrderByAggregateInput {
  id: SortOrder
  code: SortOrder
  authenitcationProviderId: SortOrder
  canUseAsRecovery: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input CodeCreateInput {
  id: String
  code: String!
  canUseAsRecovery: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  AuthenticationProvider: AuthenticationProviderCreateNestedOneWithoutCodepasswordInput
}

input CodeCreateManyInput {
  id: String
  code: String!
  authenitcationProviderId: String
  canUseAsRecovery: Boolean
  createdAt: DateTime
  updatedAt: DateTime
}

input CodeCreateNestedOneWithoutAuthenticationProviderInput {
  create: CodeCreateWithoutAuthenticationProviderInput
  connectOrCreate: CodeCreateOrConnectWithoutAuthenticationProviderInput
  connect: CodeWhereUniqueInput
}

input CodeCreateOrConnectWithoutAuthenticationProviderInput {
  where: CodeWhereUniqueInput!
  create: CodeCreateWithoutAuthenticationProviderInput!
}

input CodeCreateWithoutAuthenticationProviderInput {
  id: String
  code: String!
  canUseAsRecovery: Boolean
  createdAt: DateTime
  updatedAt: DateTime
}

input CodeDataInput {
  """Length is the total numbers that you want the code to be."""
  length: Int = 4
}

input CodeMaxOrderByAggregateInput {
  id: SortOrder
  code: SortOrder
  authenitcationProviderId: SortOrder
  canUseAsRecovery: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input CodeMinOrderByAggregateInput {
  id: SortOrder
  code: SortOrder
  authenitcationProviderId: SortOrder
  canUseAsRecovery: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input CodeOrderByWithAggregationInput {
  id: SortOrder
  code: SortOrder
  authenitcationProviderId: SortOrder
  canUseAsRecovery: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: CodeCountOrderByAggregateInput
  _max: CodeMaxOrderByAggregateInput
  _min: CodeMinOrderByAggregateInput
}

input CodeOrderByWithRelationInput {
  id: SortOrder
  code: SortOrder
  authenitcationProviderId: SortOrder
  canUseAsRecovery: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  AuthenticationProvider: AuthenticationProviderOrderByWithRelationInput
}

input CodeRelationFilter {
  is: CodeWhereInput
  isNot: CodeWhereInput
}

union CodeResponse = Code | ErrorProfiling

enum CodeScalarFieldEnum {
  id
  code
  authenitcationProviderId
  canUseAsRecovery
  createdAt
  updatedAt
}

input CodeScalarWhereWithAggregatesInput {
  AND: [CodeScalarWhereWithAggregatesInput!]
  OR: [CodeScalarWhereWithAggregatesInput!]
  NOT: [CodeScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  code: StringWithAggregatesFilter
  authenitcationProviderId: StringNullableWithAggregatesFilter
  canUseAsRecovery: BoolNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input CodeUpdateInput {
  id: StringFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  AuthenticationProvider: AuthenticationProviderUpdateOneWithoutCodepasswordNestedInput
}

input CodeUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CodeUpdateOneWithoutAuthenticationProviderNestedInput {
  create: CodeCreateWithoutAuthenticationProviderInput
  connectOrCreate: CodeCreateOrConnectWithoutAuthenticationProviderInput
  upsert: CodeUpsertWithoutAuthenticationProviderInput
  disconnect: Boolean
  delete: Boolean
  connect: CodeWhereUniqueInput
  update: CodeUpdateWithoutAuthenticationProviderInput
}

input CodeUpdateWithoutAuthenticationProviderInput {
  id: StringFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CodeUpsertWithoutAuthenticationProviderInput {
  update: CodeUpdateWithoutAuthenticationProviderInput!
  create: CodeCreateWithoutAuthenticationProviderInput!
}

input CodeWhereInput {
  AND: [CodeWhereInput!]
  OR: [CodeWhereInput!]
  NOT: [CodeWhereInput!]
  id: StringFilter
  code: StringFilter
  authenitcationProviderId: StringNullableFilter
  canUseAsRecovery: BoolNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  AuthenticationProvider: AuthenticationProviderWhereInput
}

input CodeWhereUniqueInput {
  id: String
  authenitcationProviderId: String
}

type ComingArea {
  id: ID!
  h3Index5: String!
  h3Index6: String!
  Area: Area
  areaId: String
  timesRequested: Int!
  toBeNotifiedProfileIds: [String!]!
  keywordSuggestions: [String!]!
  Vote(where: VoteWhereInput, orderBy: [VoteOrderByWithRelationInput!], cursor: VoteWhereUniqueInput, take: Int, skip: Int, distinct: [VoteScalarFieldEnum!]): [Vote!]!
}

input ComingAreaAvgOrderByAggregateInput {
  timesRequested: SortOrder
}

input ComingAreaCountOrderByAggregateInput {
  id: SortOrder
  h3Index5: SortOrder
  h3Index6: SortOrder
  areaId: SortOrder
  timesRequested: SortOrder
  toBeNotifiedProfileIds: SortOrder
  keywordSuggestions: SortOrder
}

input ComingAreaCreateInput {
  id: String
  h3Index5: String!
  h3Index6: String!
  timesRequested: Int!
  toBeNotifiedProfileIds: [String!]
  keywordSuggestions: [String!]
  Area: AreaCreateNestedOneWithoutComingAreaInput
  Vote: VoteCreateNestedManyWithoutComingAreaInput
}

input ComingAreaCreateManyInput {
  id: String
  h3Index5: String!
  h3Index6: String!
  areaId: String
  timesRequested: Int!
  toBeNotifiedProfileIds: [String!]
  keywordSuggestions: [String!]
}

input ComingAreaCreateNestedOneWithoutAreaInput {
  create: ComingAreaCreateWithoutAreaInput
  connectOrCreate: ComingAreaCreateOrConnectWithoutAreaInput
  connect: ComingAreaWhereUniqueInput
}

input ComingAreaCreateNestedOneWithoutVoteInput {
  create: ComingAreaCreateWithoutVoteInput
  connectOrCreate: ComingAreaCreateOrConnectWithoutVoteInput
  connect: ComingAreaWhereUniqueInput
}

input ComingAreaCreateOrConnectWithoutAreaInput {
  where: ComingAreaWhereUniqueInput!
  create: ComingAreaCreateWithoutAreaInput!
}

input ComingAreaCreateOrConnectWithoutVoteInput {
  where: ComingAreaWhereUniqueInput!
  create: ComingAreaCreateWithoutVoteInput!
}

input ComingAreaCreateWithoutAreaInput {
  id: String
  h3Index5: String!
  h3Index6: String!
  timesRequested: Int!
  toBeNotifiedProfileIds: [String!]
  keywordSuggestions: [String!]
  Vote: VoteCreateNestedManyWithoutComingAreaInput
}

input ComingAreaCreateWithoutVoteInput {
  id: String
  h3Index5: String!
  h3Index6: String!
  timesRequested: Int!
  toBeNotifiedProfileIds: [String!]
  keywordSuggestions: [String!]
  Area: AreaCreateNestedOneWithoutComingAreaInput
}

input ComingAreaCreatekeywordSuggestionsInput {
  set: [String!]!
}

input ComingAreaCreatetoBeNotifiedProfileIdsInput {
  set: [String!]!
}

input ComingAreaMaxOrderByAggregateInput {
  id: SortOrder
  h3Index5: SortOrder
  h3Index6: SortOrder
  areaId: SortOrder
  timesRequested: SortOrder
}

input ComingAreaMinOrderByAggregateInput {
  id: SortOrder
  h3Index5: SortOrder
  h3Index6: SortOrder
  areaId: SortOrder
  timesRequested: SortOrder
}

input ComingAreaOrderByWithAggregationInput {
  id: SortOrder
  h3Index5: SortOrder
  h3Index6: SortOrder
  areaId: SortOrder
  timesRequested: SortOrder
  toBeNotifiedProfileIds: SortOrder
  keywordSuggestions: SortOrder
  _count: ComingAreaCountOrderByAggregateInput
  _avg: ComingAreaAvgOrderByAggregateInput
  _max: ComingAreaMaxOrderByAggregateInput
  _min: ComingAreaMinOrderByAggregateInput
  _sum: ComingAreaSumOrderByAggregateInput
}

input ComingAreaOrderByWithRelationInput {
  id: SortOrder
  h3Index5: SortOrder
  h3Index6: SortOrder
  areaId: SortOrder
  timesRequested: SortOrder
  toBeNotifiedProfileIds: SortOrder
  keywordSuggestions: SortOrder
  Area: AreaOrderByWithRelationInput
  Vote: VoteOrderByRelationAggregateInput
}

input ComingAreaRelationFilter {
  is: ComingAreaWhereInput
  isNot: ComingAreaWhereInput
}

type ComingAreaResponse {
  comingAreas: [ComingArea!]!
  searchArea: Area
}

enum ComingAreaScalarFieldEnum {
  id
  h3Index5
  h3Index6
  areaId
  timesRequested
  toBeNotifiedProfileIds
  keywordSuggestions
}

input ComingAreaScalarWhereWithAggregatesInput {
  AND: [ComingAreaScalarWhereWithAggregatesInput!]
  OR: [ComingAreaScalarWhereWithAggregatesInput!]
  NOT: [ComingAreaScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  h3Index5: StringWithAggregatesFilter
  h3Index6: StringWithAggregatesFilter
  areaId: StringNullableWithAggregatesFilter
  timesRequested: IntWithAggregatesFilter
  toBeNotifiedProfileIds: StringNullableListFilter
  keywordSuggestions: StringNullableListFilter
}

input ComingAreaSumOrderByAggregateInput {
  timesRequested: SortOrder
}

input ComingAreaUpdateInput {
  id: StringFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  timesRequested: IntFieldUpdateOperationsInput
  toBeNotifiedProfileIds: [String!]
  keywordSuggestions: [String!]
  Area: AreaUpdateOneWithoutComingAreaNestedInput
  Vote: VoteUpdateManyWithoutComingAreaNestedInput
}

input ComingAreaUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  timesRequested: IntFieldUpdateOperationsInput
  toBeNotifiedProfileIds: [String!]
  keywordSuggestions: [String!]
}

input ComingAreaUpdateOneWithoutAreaNestedInput {
  create: ComingAreaCreateWithoutAreaInput
  connectOrCreate: ComingAreaCreateOrConnectWithoutAreaInput
  upsert: ComingAreaUpsertWithoutAreaInput
  disconnect: Boolean
  delete: Boolean
  connect: ComingAreaWhereUniqueInput
  update: ComingAreaUpdateWithoutAreaInput
}

input ComingAreaUpdateOneWithoutVoteNestedInput {
  create: ComingAreaCreateWithoutVoteInput
  connectOrCreate: ComingAreaCreateOrConnectWithoutVoteInput
  upsert: ComingAreaUpsertWithoutVoteInput
  disconnect: Boolean
  delete: Boolean
  connect: ComingAreaWhereUniqueInput
  update: ComingAreaUpdateWithoutVoteInput
}

input ComingAreaUpdateWithoutAreaInput {
  id: StringFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  timesRequested: IntFieldUpdateOperationsInput
  toBeNotifiedProfileIds: [String!]
  keywordSuggestions: [String!]
  Vote: VoteUpdateManyWithoutComingAreaNestedInput
}

input ComingAreaUpdateWithoutVoteInput {
  id: StringFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  timesRequested: IntFieldUpdateOperationsInput
  toBeNotifiedProfileIds: [String!]
  keywordSuggestions: [String!]
  Area: AreaUpdateOneWithoutComingAreaNestedInput
}

input ComingAreaUpdatekeywordSuggestionsInput {
  set: [String!]
  push: [String!]
}

input ComingAreaUpdatetoBeNotifiedProfileIdsInput {
  set: [String!]
  push: [String!]
}

input ComingAreaUpsertWithoutAreaInput {
  update: ComingAreaUpdateWithoutAreaInput!
  create: ComingAreaCreateWithoutAreaInput!
}

input ComingAreaUpsertWithoutVoteInput {
  update: ComingAreaUpdateWithoutVoteInput!
  create: ComingAreaCreateWithoutVoteInput!
}

input ComingAreaWhereInput {
  AND: [ComingAreaWhereInput!]
  OR: [ComingAreaWhereInput!]
  NOT: [ComingAreaWhereInput!]
  id: StringFilter
  h3Index5: StringFilter
  h3Index6: StringFilter
  areaId: StringNullableFilter
  timesRequested: IntFilter
  toBeNotifiedProfileIds: StringNullableListFilter
  keywordSuggestions: StringNullableListFilter
  Area: AreaWhereInput
  Vote: VoteListRelationFilter
}

input ComingAreaWhereUniqueInput {
  id: String
  areaId: String
}

input ContactInput {
  name: String
  number: String
}

type Coords {
  latitude: Float
  longitude: Float
}

input CoordsInput {
  latitude: Float!
  longitude: Float!
}

type Country {
  id: ID!
  name: String!
  isoCode: String!
  Geometry: Geometry!
  geometryId: Int!
  Area(where: AreaWhereInput, orderBy: [AreaOrderByWithRelationInput!], cursor: AreaWhereUniqueInput, take: Int, skip: Int, distinct: [AreaScalarFieldEnum!]): [Area!]!
}

input CountryAvgOrderByAggregateInput {
  geometryId: SortOrder
}

input CountryCountOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  isoCode: SortOrder
  geometryId: SortOrder
}

input CountryCreateInput {
  id: String
  name: String!
  isoCode: String!
  Geometry: GeometryCreateNestedOneWithoutCountryInput!
  Area: AreaCreateNestedManyWithoutCountryInput
}

input CountryCreateManyInput {
  id: String
  name: String!
  isoCode: String!
  geometryId: Int!
}

input CountryCreateNestedOneWithoutAreaInput {
  create: CountryCreateWithoutAreaInput
  connectOrCreate: CountryCreateOrConnectWithoutAreaInput
  connect: CountryWhereUniqueInput
}

input CountryCreateNestedOneWithoutGeometryInput {
  create: CountryCreateWithoutGeometryInput
  connectOrCreate: CountryCreateOrConnectWithoutGeometryInput
  connect: CountryWhereUniqueInput
}

input CountryCreateOrConnectWithoutAreaInput {
  where: CountryWhereUniqueInput!
  create: CountryCreateWithoutAreaInput!
}

input CountryCreateOrConnectWithoutGeometryInput {
  where: CountryWhereUniqueInput!
  create: CountryCreateWithoutGeometryInput!
}

input CountryCreateWithoutAreaInput {
  id: String
  name: String!
  isoCode: String!
  Geometry: GeometryCreateNestedOneWithoutCountryInput!
}

input CountryCreateWithoutGeometryInput {
  id: String
  name: String!
  isoCode: String!
  Area: AreaCreateNestedManyWithoutCountryInput
}

input CountryMaxOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  isoCode: SortOrder
  geometryId: SortOrder
}

input CountryMinOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  isoCode: SortOrder
  geometryId: SortOrder
}

input CountryOrderByWithAggregationInput {
  id: SortOrder
  name: SortOrder
  isoCode: SortOrder
  geometryId: SortOrder
  _count: CountryCountOrderByAggregateInput
  _avg: CountryAvgOrderByAggregateInput
  _max: CountryMaxOrderByAggregateInput
  _min: CountryMinOrderByAggregateInput
  _sum: CountrySumOrderByAggregateInput
}

input CountryOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  isoCode: SortOrder
  geometryId: SortOrder
  Geometry: GeometryOrderByWithRelationInput
  Area: AreaOrderByRelationAggregateInput
}

input CountryRelationFilter {
  is: CountryWhereInput
  isNot: CountryWhereInput
}

type CountryResponseObject {
  name: String!
  phonecode: String!
  isoCode: String!
  flag: String!
  currency: String!
  latitude: String!
  longitude: String!
}

enum CountryScalarFieldEnum {
  id
  name
  isoCode
  geometryId
}

input CountryScalarWhereWithAggregatesInput {
  AND: [CountryScalarWhereWithAggregatesInput!]
  OR: [CountryScalarWhereWithAggregatesInput!]
  NOT: [CountryScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
  isoCode: StringWithAggregatesFilter
  geometryId: IntWithAggregatesFilter
}

input CountrySumOrderByAggregateInput {
  geometryId: SortOrder
}

input CountryUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  isoCode: StringFieldUpdateOperationsInput
  Geometry: GeometryUpdateOneRequiredWithoutCountryNestedInput
  Area: AreaUpdateManyWithoutCountryNestedInput
}

input CountryUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  isoCode: StringFieldUpdateOperationsInput
}

input CountryUpdateOneRequiredWithoutAreaNestedInput {
  create: CountryCreateWithoutAreaInput
  connectOrCreate: CountryCreateOrConnectWithoutAreaInput
  upsert: CountryUpsertWithoutAreaInput
  connect: CountryWhereUniqueInput
  update: CountryUpdateWithoutAreaInput
}

input CountryUpdateOneWithoutGeometryNestedInput {
  create: CountryCreateWithoutGeometryInput
  connectOrCreate: CountryCreateOrConnectWithoutGeometryInput
  upsert: CountryUpsertWithoutGeometryInput
  disconnect: Boolean
  delete: Boolean
  connect: CountryWhereUniqueInput
  update: CountryUpdateWithoutGeometryInput
}

input CountryUpdateWithoutAreaInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  isoCode: StringFieldUpdateOperationsInput
  Geometry: GeometryUpdateOneRequiredWithoutCountryNestedInput
}

input CountryUpdateWithoutGeometryInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  isoCode: StringFieldUpdateOperationsInput
  Area: AreaUpdateManyWithoutCountryNestedInput
}

input CountryUpsertWithoutAreaInput {
  update: CountryUpdateWithoutAreaInput!
  create: CountryCreateWithoutAreaInput!
}

input CountryUpsertWithoutGeometryInput {
  update: CountryUpdateWithoutGeometryInput!
  create: CountryCreateWithoutGeometryInput!
}

input CountryWhereInput {
  AND: [CountryWhereInput!]
  OR: [CountryWhereInput!]
  NOT: [CountryWhereInput!]
  id: StringFilter
  name: StringFilter
  isoCode: StringFilter
  geometryId: IntFilter
  Geometry: GeometryWhereInput
  Area: AreaListRelationFilter
}

input CountryWhereUniqueInput {
  id: String
  name: String
  isoCode: String
  geometryId: Int
}

input CreatePersonalDataInput {
  PrivacyPolicyId: ID
  ServicesId: ID
  PhoneInput: PhoneInput
  EmailInput: EmailInput
  password: String!
  username: String!
  fullname: String
  address: String!
  birthday: DateTime!
}

input CreateVenueDataInput {
  PrivacyPolicyId: ID
  ServicesId: ID
  PhoneInput: PhoneInput
  EmailInput: EmailInput
  password: String!
  established: DateTime!
  venuename: String!
  venuelocalname: String!
  venueusername: String!
  address: String!
  ownername: String!
  contacts: [VenueContactInput!]!
  capacity: String!
  venuetypes: [String!]
  description: String
  birthday: DateTime
  photos: PhotoCreateManyProfileInputEnvelope
}

type Credentials {
  id: ID!
  LegalAgreement(where: LegalAgreementWhereInput, orderBy: [LegalAgreementOrderByWithRelationInput!], cursor: LegalAgreementWhereUniqueInput, take: Int, skip: Int, distinct: [LegalAgreementScalarFieldEnum!]): [LegalAgreement!]!
  AuthenticationProvider: AuthenticationProvider
  authenticationProviderId: String
  Profile: Profile!
  profileId: String!
  createdtAt: DateTime!
  updatedAt: DateTime!
}

input CredentialsCountOrderByAggregateInput {
  id: SortOrder
  authenticationProviderId: SortOrder
  profileId: SortOrder
  createdtAt: SortOrder
  updatedAt: SortOrder
}

input CredentialsCreateInput {
  id: String
  createdtAt: DateTime
  updatedAt: DateTime
  LegalAgreement: LegalAgreementCreateNestedManyWithoutCredentialsInput
  AuthenticationProvider: AuthenticationProviderCreateNestedOneWithoutCredentialsInput
  Profile: ProfileCreateNestedOneWithoutCredentialsInput!
}

input CredentialsCreateManyInput {
  id: String
  authenticationProviderId: String
  profileId: String!
  createdtAt: DateTime
  updatedAt: DateTime
}

input CredentialsCreateNestedOneWithoutAuthenticationProviderInput {
  create: CredentialsCreateWithoutAuthenticationProviderInput
  connectOrCreate: CredentialsCreateOrConnectWithoutAuthenticationProviderInput
  connect: CredentialsWhereUniqueInput
}

input CredentialsCreateNestedOneWithoutLegalAgreementInput {
  create: CredentialsCreateWithoutLegalAgreementInput
  connectOrCreate: CredentialsCreateOrConnectWithoutLegalAgreementInput
  connect: CredentialsWhereUniqueInput
}

input CredentialsCreateNestedOneWithoutProfileInput {
  create: CredentialsCreateWithoutProfileInput
  connectOrCreate: CredentialsCreateOrConnectWithoutProfileInput
  connect: CredentialsWhereUniqueInput
}

input CredentialsCreateOrConnectWithoutAuthenticationProviderInput {
  where: CredentialsWhereUniqueInput!
  create: CredentialsCreateWithoutAuthenticationProviderInput!
}

input CredentialsCreateOrConnectWithoutLegalAgreementInput {
  where: CredentialsWhereUniqueInput!
  create: CredentialsCreateWithoutLegalAgreementInput!
}

input CredentialsCreateOrConnectWithoutProfileInput {
  where: CredentialsWhereUniqueInput!
  create: CredentialsCreateWithoutProfileInput!
}

input CredentialsCreateWithoutAuthenticationProviderInput {
  id: String
  createdtAt: DateTime
  updatedAt: DateTime
  LegalAgreement: LegalAgreementCreateNestedManyWithoutCredentialsInput
  Profile: ProfileCreateNestedOneWithoutCredentialsInput!
}

input CredentialsCreateWithoutLegalAgreementInput {
  id: String
  createdtAt: DateTime
  updatedAt: DateTime
  AuthenticationProvider: AuthenticationProviderCreateNestedOneWithoutCredentialsInput
  Profile: ProfileCreateNestedOneWithoutCredentialsInput!
}

input CredentialsCreateWithoutProfileInput {
  id: String
  createdtAt: DateTime
  updatedAt: DateTime
  LegalAgreement: LegalAgreementCreateNestedManyWithoutCredentialsInput
  AuthenticationProvider: AuthenticationProviderCreateNestedOneWithoutCredentialsInput
}

input CredentialsMaxOrderByAggregateInput {
  id: SortOrder
  authenticationProviderId: SortOrder
  profileId: SortOrder
  createdtAt: SortOrder
  updatedAt: SortOrder
}

input CredentialsMinOrderByAggregateInput {
  id: SortOrder
  authenticationProviderId: SortOrder
  profileId: SortOrder
  createdtAt: SortOrder
  updatedAt: SortOrder
}

input CredentialsOrderByWithAggregationInput {
  id: SortOrder
  authenticationProviderId: SortOrder
  profileId: SortOrder
  createdtAt: SortOrder
  updatedAt: SortOrder
  _count: CredentialsCountOrderByAggregateInput
  _max: CredentialsMaxOrderByAggregateInput
  _min: CredentialsMinOrderByAggregateInput
}

input CredentialsOrderByWithRelationInput {
  id: SortOrder
  authenticationProviderId: SortOrder
  profileId: SortOrder
  createdtAt: SortOrder
  updatedAt: SortOrder
  LegalAgreement: LegalAgreementOrderByRelationAggregateInput
  AuthenticationProvider: AuthenticationProviderOrderByWithRelationInput
  Profile: ProfileOrderByWithRelationInput
}

input CredentialsRelationFilter {
  is: CredentialsWhereInput
  isNot: CredentialsWhereInput
}

enum CredentialsScalarFieldEnum {
  id
  authenticationProviderId
  profileId
  createdtAt
  updatedAt
}

input CredentialsScalarWhereWithAggregatesInput {
  AND: [CredentialsScalarWhereWithAggregatesInput!]
  OR: [CredentialsScalarWhereWithAggregatesInput!]
  NOT: [CredentialsScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  authenticationProviderId: StringNullableWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  createdtAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input CredentialsUpdateInput {
  id: StringFieldUpdateOperationsInput
  createdtAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  LegalAgreement: LegalAgreementUpdateManyWithoutCredentialsNestedInput
  AuthenticationProvider: AuthenticationProviderUpdateOneWithoutCredentialsNestedInput
  Profile: ProfileUpdateOneRequiredWithoutCredentialsNestedInput
}

input CredentialsUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  createdtAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CredentialsUpdateOneWithoutAuthenticationProviderNestedInput {
  create: CredentialsCreateWithoutAuthenticationProviderInput
  connectOrCreate: CredentialsCreateOrConnectWithoutAuthenticationProviderInput
  upsert: CredentialsUpsertWithoutAuthenticationProviderInput
  disconnect: Boolean
  delete: Boolean
  connect: CredentialsWhereUniqueInput
  update: CredentialsUpdateWithoutAuthenticationProviderInput
}

input CredentialsUpdateOneWithoutLegalAgreementNestedInput {
  create: CredentialsCreateWithoutLegalAgreementInput
  connectOrCreate: CredentialsCreateOrConnectWithoutLegalAgreementInput
  upsert: CredentialsUpsertWithoutLegalAgreementInput
  disconnect: Boolean
  delete: Boolean
  connect: CredentialsWhereUniqueInput
  update: CredentialsUpdateWithoutLegalAgreementInput
}

input CredentialsUpdateOneWithoutProfileNestedInput {
  create: CredentialsCreateWithoutProfileInput
  connectOrCreate: CredentialsCreateOrConnectWithoutProfileInput
  upsert: CredentialsUpsertWithoutProfileInput
  disconnect: Boolean
  delete: Boolean
  connect: CredentialsWhereUniqueInput
  update: CredentialsUpdateWithoutProfileInput
}

input CredentialsUpdateWithoutAuthenticationProviderInput {
  id: StringFieldUpdateOperationsInput
  createdtAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  LegalAgreement: LegalAgreementUpdateManyWithoutCredentialsNestedInput
  Profile: ProfileUpdateOneRequiredWithoutCredentialsNestedInput
}

input CredentialsUpdateWithoutLegalAgreementInput {
  id: StringFieldUpdateOperationsInput
  createdtAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  AuthenticationProvider: AuthenticationProviderUpdateOneWithoutCredentialsNestedInput
  Profile: ProfileUpdateOneRequiredWithoutCredentialsNestedInput
}

input CredentialsUpdateWithoutProfileInput {
  id: StringFieldUpdateOperationsInput
  createdtAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  LegalAgreement: LegalAgreementUpdateManyWithoutCredentialsNestedInput
  AuthenticationProvider: AuthenticationProviderUpdateOneWithoutCredentialsNestedInput
}

input CredentialsUpsertWithoutAuthenticationProviderInput {
  update: CredentialsUpdateWithoutAuthenticationProviderInput!
  create: CredentialsCreateWithoutAuthenticationProviderInput!
}

input CredentialsUpsertWithoutLegalAgreementInput {
  update: CredentialsUpdateWithoutLegalAgreementInput!
  create: CredentialsCreateWithoutLegalAgreementInput!
}

input CredentialsUpsertWithoutProfileInput {
  update: CredentialsUpdateWithoutProfileInput!
  create: CredentialsCreateWithoutProfileInput!
}

input CredentialsWhereInput {
  AND: [CredentialsWhereInput!]
  OR: [CredentialsWhereInput!]
  NOT: [CredentialsWhereInput!]
  id: StringFilter
  authenticationProviderId: StringNullableFilter
  profileId: StringFilter
  createdtAt: DateTimeFilter
  updatedAt: DateTimeFilter
  LegalAgreement: LegalAgreementListRelationFilter
  AuthenticationProvider: AuthenticationProviderWhereInput
  Profile: ProfileWhereInput
}

input CredentialsWhereUniqueInput {
  id: String
  authenticationProviderId: String
  profileId: String
}

input CustomCodeWhereInput {
  Authenticators: Authenticators
}

input CustomProfileWhereInput {
  email: String
  username: String
  Phone: PhoneInput
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableFilter
}

input DateTimeNullableWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedDateTimeNullableFilter
  _max: NestedDateTimeNullableFilter
}

input DateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedDateTimeFilter
  _max: NestedDateTimeFilter
}

type DetailInformation {
  id: ID!
  description: String
  capacity: Int
  established: DateTime
  Tags(where: TagWhereInput, orderBy: [TagOrderByWithRelationInput!], cursor: TagWhereUniqueInput, take: Int, skip: Int, distinct: [TagScalarFieldEnum!]): [Tag!]!
  Profile: Profile!
  profileId: String!
}

input DetailInformationAvgOrderByAggregateInput {
  capacity: SortOrder
}

input DetailInformationCountOrderByAggregateInput {
  id: SortOrder
  description: SortOrder
  capacity: SortOrder
  established: SortOrder
  profileId: SortOrder
}

input DetailInformationCreateInput {
  id: String
  description: String
  capacity: Int
  established: DateTime
  Tags: TagCreateNestedManyWithoutDetailInformationInput
  Profile: ProfileCreateNestedOneWithoutDetailInformationInput!
}

input DetailInformationCreateManyInput {
  id: String
  description: String
  capacity: Int
  established: DateTime
  profileId: String!
}

input DetailInformationCreateNestedManyWithoutTagsInput {
  create: DetailInformationCreateWithoutTagsInput
  connectOrCreate: [DetailInformationCreateOrConnectWithoutTagsInput!]
  connect: [DetailInformationWhereUniqueInput!]
}

input DetailInformationCreateNestedOneWithoutProfileInput {
  create: DetailInformationCreateWithoutProfileInput
  connectOrCreate: DetailInformationCreateOrConnectWithoutProfileInput
  connect: DetailInformationWhereUniqueInput
}

input DetailInformationCreateOrConnectWithoutProfileInput {
  where: DetailInformationWhereUniqueInput!
  create: DetailInformationCreateWithoutProfileInput!
}

input DetailInformationCreateOrConnectWithoutTagsInput {
  where: DetailInformationWhereUniqueInput!
  create: DetailInformationCreateWithoutTagsInput!
}

input DetailInformationCreateWithoutProfileInput {
  id: String
  description: String
  capacity: Int
  established: DateTime
  Tags: TagCreateNestedManyWithoutDetailInformationInput
}

input DetailInformationCreateWithoutTagsInput {
  id: String
  description: String
  capacity: Int
  established: DateTime
  Profile: ProfileCreateNestedOneWithoutDetailInformationInput!
}

input DetailInformationListRelationFilter {
  every: DetailInformationWhereInput
  some: DetailInformationWhereInput
  none: DetailInformationWhereInput
}

input DetailInformationMaxOrderByAggregateInput {
  id: SortOrder
  description: SortOrder
  capacity: SortOrder
  established: SortOrder
  profileId: SortOrder
}

input DetailInformationMinOrderByAggregateInput {
  id: SortOrder
  description: SortOrder
  capacity: SortOrder
  established: SortOrder
  profileId: SortOrder
}

input DetailInformationOrderByRelationAggregateInput {
  _count: SortOrder
}

input DetailInformationOrderByWithAggregationInput {
  id: SortOrder
  description: SortOrder
  capacity: SortOrder
  established: SortOrder
  profileId: SortOrder
  _count: DetailInformationCountOrderByAggregateInput
  _avg: DetailInformationAvgOrderByAggregateInput
  _max: DetailInformationMaxOrderByAggregateInput
  _min: DetailInformationMinOrderByAggregateInput
  _sum: DetailInformationSumOrderByAggregateInput
}

input DetailInformationOrderByWithRelationInput {
  id: SortOrder
  description: SortOrder
  capacity: SortOrder
  established: SortOrder
  profileId: SortOrder
  Tags: TagOrderByRelationAggregateInput
  Profile: ProfileOrderByWithRelationInput
}

input DetailInformationRelationFilter {
  is: DetailInformationWhereInput
  isNot: DetailInformationWhereInput
}

enum DetailInformationScalarFieldEnum {
  id
  description
  capacity
  established
  profileId
}

input DetailInformationScalarWhereInput {
  AND: [DetailInformationScalarWhereInput!]
  OR: [DetailInformationScalarWhereInput!]
  NOT: [DetailInformationScalarWhereInput!]
  id: StringFilter
  description: StringNullableFilter
  capacity: IntNullableFilter
  established: DateTimeNullableFilter
  profileId: StringFilter
}

input DetailInformationScalarWhereWithAggregatesInput {
  AND: [DetailInformationScalarWhereWithAggregatesInput!]
  OR: [DetailInformationScalarWhereWithAggregatesInput!]
  NOT: [DetailInformationScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  capacity: IntNullableWithAggregatesFilter
  established: DateTimeNullableWithAggregatesFilter
  profileId: StringWithAggregatesFilter
}

input DetailInformationSumOrderByAggregateInput {
  capacity: SortOrder
}

input DetailInformationUpdateInput {
  id: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  capacity: NullableIntFieldUpdateOperationsInput
  established: NullableDateTimeFieldUpdateOperationsInput
  Tags: TagUpdateManyWithoutDetailInformationNestedInput
  Profile: ProfileUpdateOneRequiredWithoutDetailInformationNestedInput
}

input DetailInformationUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  capacity: NullableIntFieldUpdateOperationsInput
  established: NullableDateTimeFieldUpdateOperationsInput
}

input DetailInformationUpdateManyWithWhereWithoutTagsInput {
  where: DetailInformationScalarWhereInput!
  data: DetailInformationUpdateManyMutationInput!
}

input DetailInformationUpdateManyWithoutTagsNestedInput {
  create: DetailInformationCreateWithoutTagsInput
  connectOrCreate: [DetailInformationCreateOrConnectWithoutTagsInput!]
  upsert: [DetailInformationUpsertWithWhereUniqueWithoutTagsInput!]
  set: [DetailInformationWhereUniqueInput!]
  disconnect: [DetailInformationWhereUniqueInput!]
  delete: [DetailInformationWhereUniqueInput!]
  connect: [DetailInformationWhereUniqueInput!]
  update: [DetailInformationUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [DetailInformationUpdateManyWithWhereWithoutTagsInput!]
  deleteMany: [DetailInformationScalarWhereInput!]
}

input DetailInformationUpdateOneWithoutProfileNestedInput {
  create: DetailInformationCreateWithoutProfileInput
  connectOrCreate: DetailInformationCreateOrConnectWithoutProfileInput
  upsert: DetailInformationUpsertWithoutProfileInput
  disconnect: Boolean
  delete: Boolean
  connect: DetailInformationWhereUniqueInput
  update: DetailInformationUpdateWithoutProfileInput
}

input DetailInformationUpdateWithWhereUniqueWithoutTagsInput {
  where: DetailInformationWhereUniqueInput!
  data: DetailInformationUpdateWithoutTagsInput!
}

input DetailInformationUpdateWithoutProfileInput {
  id: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  capacity: NullableIntFieldUpdateOperationsInput
  established: NullableDateTimeFieldUpdateOperationsInput
  Tags: TagUpdateManyWithoutDetailInformationNestedInput
}

input DetailInformationUpdateWithoutTagsInput {
  id: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  capacity: NullableIntFieldUpdateOperationsInput
  established: NullableDateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutDetailInformationNestedInput
}

input DetailInformationUpsertWithWhereUniqueWithoutTagsInput {
  where: DetailInformationWhereUniqueInput!
  update: DetailInformationUpdateWithoutTagsInput!
  create: DetailInformationCreateWithoutTagsInput!
}

input DetailInformationUpsertWithoutProfileInput {
  update: DetailInformationUpdateWithoutProfileInput!
  create: DetailInformationCreateWithoutProfileInput!
}

input DetailInformationWhereInput {
  AND: [DetailInformationWhereInput!]
  OR: [DetailInformationWhereInput!]
  NOT: [DetailInformationWhereInput!]
  id: StringFilter
  description: StringNullableFilter
  capacity: IntNullableFilter
  established: DateTimeNullableFilter
  profileId: StringFilter
  Tags: TagListRelationFilter
  Profile: ProfileWhereInput
}

input DetailInformationWhereUniqueInput {
  id: String
  profileId: String
}

type Document {
  id: ID!
  LegalAgreement: [LegalAgreement!]!
  TypeOfDocument: TypeOfDocument!
  createdAt: DateTime!
  updatedAt: DateTime!
  content: String!
}

input DocumentAvgOrderByAggregateInput {
  id: SortOrder
}

input DocumentCountOrderByAggregateInput {
  id: SortOrder
  content: SortOrder
  TypeOfDocument: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input DocumentCreateInput {
  content: String!
  TypeOfDocument: TypeOfDocument!
  createdAt: DateTime
  updatedAt: DateTime
  LegalAgreement: LegalAgreementCreateNestedManyWithoutDocumentInput
}

input DocumentCreateManyInput {
  id: Int
  content: String!
  TypeOfDocument: TypeOfDocument!
  createdAt: DateTime
  updatedAt: DateTime
}

input DocumentCreateNestedOneWithoutLegalAgreementInput {
  create: DocumentCreateWithoutLegalAgreementInput
  connectOrCreate: DocumentCreateOrConnectWithoutLegalAgreementInput
  connect: DocumentWhereUniqueInput
}

input DocumentCreateOrConnectWithoutLegalAgreementInput {
  where: DocumentWhereUniqueInput!
  create: DocumentCreateWithoutLegalAgreementInput!
}

input DocumentCreateWithoutLegalAgreementInput {
  content: String!
  TypeOfDocument: TypeOfDocument!
  createdAt: DateTime
  updatedAt: DateTime
}

input DocumentMaxOrderByAggregateInput {
  id: SortOrder
  content: SortOrder
  TypeOfDocument: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input DocumentMinOrderByAggregateInput {
  id: SortOrder
  content: SortOrder
  TypeOfDocument: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input DocumentOrderByWithAggregationInput {
  id: SortOrder
  content: SortOrder
  TypeOfDocument: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: DocumentCountOrderByAggregateInput
  _avg: DocumentAvgOrderByAggregateInput
  _max: DocumentMaxOrderByAggregateInput
  _min: DocumentMinOrderByAggregateInput
  _sum: DocumentSumOrderByAggregateInput
}

input DocumentOrderByWithRelationInput {
  id: SortOrder
  content: SortOrder
  TypeOfDocument: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  LegalAgreement: LegalAgreementOrderByRelationAggregateInput
}

input DocumentRelationFilter {
  is: DocumentWhereInput
  isNot: DocumentWhereInput
}

enum DocumentScalarFieldEnum {
  id
  content
  TypeOfDocument
  createdAt
  updatedAt
}

input DocumentScalarWhereWithAggregatesInput {
  AND: [DocumentScalarWhereWithAggregatesInput!]
  OR: [DocumentScalarWhereWithAggregatesInput!]
  NOT: [DocumentScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  content: StringWithAggregatesFilter
  TypeOfDocument: EnumTypeOfDocumentWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input DocumentSumOrderByAggregateInput {
  id: SortOrder
}

input DocumentUpdateInput {
  content: StringFieldUpdateOperationsInput
  TypeOfDocument: EnumTypeOfDocumentFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  LegalAgreement: LegalAgreementUpdateManyWithoutDocumentNestedInput
}

input DocumentUpdateManyMutationInput {
  content: StringFieldUpdateOperationsInput
  TypeOfDocument: EnumTypeOfDocumentFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DocumentUpdateOneRequiredWithoutLegalAgreementNestedInput {
  create: DocumentCreateWithoutLegalAgreementInput
  connectOrCreate: DocumentCreateOrConnectWithoutLegalAgreementInput
  upsert: DocumentUpsertWithoutLegalAgreementInput
  connect: DocumentWhereUniqueInput
  update: DocumentUpdateWithoutLegalAgreementInput
}

input DocumentUpdateWithoutLegalAgreementInput {
  content: StringFieldUpdateOperationsInput
  TypeOfDocument: EnumTypeOfDocumentFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DocumentUpsertWithoutLegalAgreementInput {
  update: DocumentUpdateWithoutLegalAgreementInput!
  create: DocumentCreateWithoutLegalAgreementInput!
}

input DocumentWhereInput {
  AND: [DocumentWhereInput!]
  OR: [DocumentWhereInput!]
  NOT: [DocumentWhereInput!]
  id: IntFilter
  content: StringFilter
  TypeOfDocument: EnumTypeOfDocumentFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  LegalAgreement: LegalAgreementListRelationFilter
}

input DocumentWhereUniqueInput {
  id: Int
}

type Email {
  id: ID!
  email: String!
  AuthenticationProvider(where: AuthenticationProviderWhereInput, orderBy: [AuthenticationProviderOrderByWithRelationInput!], cursor: AuthenticationProviderWhereUniqueInput, take: Int, skip: Int, distinct: [AuthenticationProviderScalarFieldEnum!]): [AuthenticationProvider!]!
  canUseAsRecovery: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
}

input EmailAvgOrderByAggregateInput {
  id: SortOrder
}

input EmailCountOrderByAggregateInput {
  id: SortOrder
  email: SortOrder
  canUseAsRecovery: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input EmailCreateInput {
  email: String!
  canUseAsRecovery: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  AuthenticationProvider: AuthenticationProviderCreateNestedManyWithoutEmailsInput
}

input EmailCreateManyInput {
  id: Int
  email: String!
  canUseAsRecovery: Boolean
  createdAt: DateTime
  updatedAt: DateTime
}

input EmailCreateNestedManyWithoutAuthenticationProviderInput {
  create: EmailCreateWithoutAuthenticationProviderInput
  connectOrCreate: [EmailCreateOrConnectWithoutAuthenticationProviderInput!]
  connect: [EmailWhereUniqueInput!]
}

input EmailCreateOrConnectWithoutAuthenticationProviderInput {
  where: EmailWhereUniqueInput!
  create: EmailCreateWithoutAuthenticationProviderInput!
}

input EmailCreateWithoutAuthenticationProviderInput {
  email: String!
  canUseAsRecovery: Boolean
  createdAt: DateTime
  updatedAt: DateTime
}

input EmailInput {
  email: String
}

input EmailListRelationFilter {
  every: EmailWhereInput
  some: EmailWhereInput
  none: EmailWhereInput
}

input EmailMaxOrderByAggregateInput {
  id: SortOrder
  email: SortOrder
  canUseAsRecovery: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input EmailMinOrderByAggregateInput {
  id: SortOrder
  email: SortOrder
  canUseAsRecovery: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input EmailOrderByRelationAggregateInput {
  _count: SortOrder
}

input EmailOrderByWithAggregationInput {
  id: SortOrder
  email: SortOrder
  canUseAsRecovery: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: EmailCountOrderByAggregateInput
  _avg: EmailAvgOrderByAggregateInput
  _max: EmailMaxOrderByAggregateInput
  _min: EmailMinOrderByAggregateInput
  _sum: EmailSumOrderByAggregateInput
}

input EmailOrderByWithRelationInput {
  id: SortOrder
  email: SortOrder
  canUseAsRecovery: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  AuthenticationProvider: AuthenticationProviderOrderByRelationAggregateInput
}

enum EmailScalarFieldEnum {
  id
  email
  canUseAsRecovery
  createdAt
  updatedAt
}

input EmailScalarWhereInput {
  AND: [EmailScalarWhereInput!]
  OR: [EmailScalarWhereInput!]
  NOT: [EmailScalarWhereInput!]
  id: IntFilter
  email: StringFilter
  canUseAsRecovery: BoolNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input EmailScalarWhereWithAggregatesInput {
  AND: [EmailScalarWhereWithAggregatesInput!]
  OR: [EmailScalarWhereWithAggregatesInput!]
  NOT: [EmailScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  email: StringWithAggregatesFilter
  canUseAsRecovery: BoolNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input EmailSumOrderByAggregateInput {
  id: SortOrder
}

input EmailUpdateInput {
  email: StringFieldUpdateOperationsInput
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  AuthenticationProvider: AuthenticationProviderUpdateManyWithoutEmailsNestedInput
}

input EmailUpdateManyMutationInput {
  email: StringFieldUpdateOperationsInput
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input EmailUpdateManyWithWhereWithoutAuthenticationProviderInput {
  where: EmailScalarWhereInput!
  data: EmailUpdateManyMutationInput!
}

input EmailUpdateManyWithoutAuthenticationProviderNestedInput {
  create: EmailCreateWithoutAuthenticationProviderInput
  connectOrCreate: [EmailCreateOrConnectWithoutAuthenticationProviderInput!]
  upsert: [EmailUpsertWithWhereUniqueWithoutAuthenticationProviderInput!]
  set: [EmailWhereUniqueInput!]
  disconnect: [EmailWhereUniqueInput!]
  delete: [EmailWhereUniqueInput!]
  connect: [EmailWhereUniqueInput!]
  update: [EmailUpdateWithWhereUniqueWithoutAuthenticationProviderInput!]
  updateMany: [EmailUpdateManyWithWhereWithoutAuthenticationProviderInput!]
  deleteMany: [EmailScalarWhereInput!]
}

input EmailUpdateWithWhereUniqueWithoutAuthenticationProviderInput {
  where: EmailWhereUniqueInput!
  data: EmailUpdateWithoutAuthenticationProviderInput!
}

input EmailUpdateWithoutAuthenticationProviderInput {
  email: StringFieldUpdateOperationsInput
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input EmailUpsertWithWhereUniqueWithoutAuthenticationProviderInput {
  where: EmailWhereUniqueInput!
  update: EmailUpdateWithoutAuthenticationProviderInput!
  create: EmailCreateWithoutAuthenticationProviderInput!
}

input EmailWhereInput {
  AND: [EmailWhereInput!]
  OR: [EmailWhereInput!]
  NOT: [EmailWhereInput!]
  id: IntFilter
  email: StringFilter
  canUseAsRecovery: BoolNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  AuthenticationProvider: AuthenticationProviderListRelationFilter
}

input EmailWhereUniqueInput {
  id: Int
}

type Emojimood {
  id: ID!
  emojiname: String
  emoji: String
  colors: [String!]!
}

input EmojimoodAvgOrderByAggregateInput {
  id: SortOrder
}

input EmojimoodCountOrderByAggregateInput {
  id: SortOrder
  colors: SortOrder
  emojiname: SortOrder
  emoji: SortOrder
}

input EmojimoodCreateInput {
  colors: [String!]
  emojiname: String
  emoji: String
  Story: StoryCreateNestedManyWithoutEmojimoodInput
}

input EmojimoodCreateManyInput {
  id: Int
  colors: [String!]
  emojiname: String
  emoji: String
}

input EmojimoodCreateNestedManyWithoutStoryInput {
  create: EmojimoodCreateWithoutStoryInput
  connectOrCreate: [EmojimoodCreateOrConnectWithoutStoryInput!]
  connect: [EmojimoodWhereUniqueInput!]
}

input EmojimoodCreateOrConnectWithoutStoryInput {
  where: EmojimoodWhereUniqueInput!
  create: EmojimoodCreateWithoutStoryInput!
}

input EmojimoodCreateWithoutStoryInput {
  colors: [String!]
  emojiname: String
  emoji: String
}

input EmojimoodCreatecolorsInput {
  set: [String!]!
}

input EmojimoodListRelationFilter {
  every: EmojimoodWhereInput
  some: EmojimoodWhereInput
  none: EmojimoodWhereInput
}

input EmojimoodMaxOrderByAggregateInput {
  id: SortOrder
  emojiname: SortOrder
  emoji: SortOrder
}

input EmojimoodMinOrderByAggregateInput {
  id: SortOrder
  emojiname: SortOrder
  emoji: SortOrder
}

input EmojimoodOrderByRelationAggregateInput {
  _count: SortOrder
}

input EmojimoodOrderByWithAggregationInput {
  id: SortOrder
  colors: SortOrder
  emojiname: SortOrder
  emoji: SortOrder
  _count: EmojimoodCountOrderByAggregateInput
  _avg: EmojimoodAvgOrderByAggregateInput
  _max: EmojimoodMaxOrderByAggregateInput
  _min: EmojimoodMinOrderByAggregateInput
  _sum: EmojimoodSumOrderByAggregateInput
}

input EmojimoodOrderByWithRelationInput {
  id: SortOrder
  colors: SortOrder
  emojiname: SortOrder
  emoji: SortOrder
  Story: StoryOrderByRelationAggregateInput
}

enum EmojimoodScalarFieldEnum {
  id
  colors
  emojiname
  emoji
}

input EmojimoodScalarWhereInput {
  AND: [EmojimoodScalarWhereInput!]
  OR: [EmojimoodScalarWhereInput!]
  NOT: [EmojimoodScalarWhereInput!]
  id: IntFilter
  colors: StringNullableListFilter
  emojiname: StringNullableFilter
  emoji: StringNullableFilter
}

input EmojimoodScalarWhereWithAggregatesInput {
  AND: [EmojimoodScalarWhereWithAggregatesInput!]
  OR: [EmojimoodScalarWhereWithAggregatesInput!]
  NOT: [EmojimoodScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  colors: StringNullableListFilter
  emojiname: StringNullableWithAggregatesFilter
  emoji: StringNullableWithAggregatesFilter
}

input EmojimoodSumOrderByAggregateInput {
  id: SortOrder
}

input EmojimoodUpdateInput {
  colors: [String!]
  emojiname: NullableStringFieldUpdateOperationsInput
  emoji: NullableStringFieldUpdateOperationsInput
  Story: StoryUpdateManyWithoutEmojimoodNestedInput
}

input EmojimoodUpdateManyMutationInput {
  colors: [String!]
  emojiname: NullableStringFieldUpdateOperationsInput
  emoji: NullableStringFieldUpdateOperationsInput
}

input EmojimoodUpdateManyWithWhereWithoutStoryInput {
  where: EmojimoodScalarWhereInput!
  data: EmojimoodUpdateManyMutationInput!
}

input EmojimoodUpdateManyWithoutStoryNestedInput {
  create: EmojimoodCreateWithoutStoryInput
  connectOrCreate: [EmojimoodCreateOrConnectWithoutStoryInput!]
  upsert: [EmojimoodUpsertWithWhereUniqueWithoutStoryInput!]
  set: [EmojimoodWhereUniqueInput!]
  disconnect: [EmojimoodWhereUniqueInput!]
  delete: [EmojimoodWhereUniqueInput!]
  connect: [EmojimoodWhereUniqueInput!]
  update: [EmojimoodUpdateWithWhereUniqueWithoutStoryInput!]
  updateMany: [EmojimoodUpdateManyWithWhereWithoutStoryInput!]
  deleteMany: [EmojimoodScalarWhereInput!]
}

input EmojimoodUpdateWithWhereUniqueWithoutStoryInput {
  where: EmojimoodWhereUniqueInput!
  data: EmojimoodUpdateWithoutStoryInput!
}

input EmojimoodUpdateWithoutStoryInput {
  colors: [String!]
  emojiname: NullableStringFieldUpdateOperationsInput
  emoji: NullableStringFieldUpdateOperationsInput
}

input EmojimoodUpdatecolorsInput {
  set: [String!]
  push: [String!]
}

input EmojimoodUpsertWithWhereUniqueWithoutStoryInput {
  where: EmojimoodWhereUniqueInput!
  update: EmojimoodUpdateWithoutStoryInput!
  create: EmojimoodCreateWithoutStoryInput!
}

input EmojimoodWhereInput {
  AND: [EmojimoodWhereInput!]
  OR: [EmojimoodWhereInput!]
  NOT: [EmojimoodWhereInput!]
  id: IntFilter
  colors: StringNullableListFilter
  emojiname: StringNullableFilter
  emoji: StringNullableFilter
  Story: StoryListRelationFilter
}

input EmojimoodWhereUniqueInput {
  id: Int
}

input EnumOutTypeFieldUpdateOperationsInput {
  set: OutType
}

input EnumOutTypeFilter {
  equals: OutType
  in: [OutType!]
  notIn: [OutType!]
  not: OutType
}

input EnumOutTypeWithAggregatesFilter {
  equals: OutType
  in: [OutType!]
  notIn: [OutType!]
  not: OutType
  _count: NestedIntFilter
  _min: NestedEnumOutTypeFilter
  _max: NestedEnumOutTypeFilter
}

input EnumPhotoTypeNullableFilter {
  equals: PhotoType
  in: [PhotoType!]
  notIn: [PhotoType!]
  not: PhotoType
}

input EnumPhotoTypeNullableWithAggregatesFilter {
  equals: PhotoType
  in: [PhotoType!]
  notIn: [PhotoType!]
  not: PhotoType
  _count: NestedIntNullableFilter
  _min: NestedEnumPhotoTypeNullableFilter
  _max: NestedEnumPhotoTypeNullableFilter
}

input EnumProfileTypeFieldUpdateOperationsInput {
  set: ProfileType
}

input EnumProfileTypeFilter {
  equals: ProfileType
  in: [ProfileType!]
  notIn: [ProfileType!]
  not: ProfileType
}

input EnumProfileTypeWithAggregatesFilter {
  equals: ProfileType
  in: [ProfileType!]
  notIn: [ProfileType!]
  not: ProfileType
  _count: NestedIntFilter
  _min: NestedEnumProfileTypeFilter
  _max: NestedEnumProfileTypeFilter
}

input EnumRelationshipStatusNullableListFilter {
  equals: [RelationshipStatus!]
  has: RelationshipStatus
  hasEvery: [RelationshipStatus!]
  hasSome: [RelationshipStatus!]
  isEmpty: Boolean
}

input EnumSecureDataTypeFieldUpdateOperationsInput {
  set: SecureDataType
}

input EnumSecureDataTypeFilter {
  equals: SecureDataType
  in: [SecureDataType!]
  notIn: [SecureDataType!]
  not: SecureDataType
}

input EnumSecureDataTypeWithAggregatesFilter {
  equals: SecureDataType
  in: [SecureDataType!]
  notIn: [SecureDataType!]
  not: SecureDataType
  _count: NestedIntFilter
  _min: NestedEnumSecureDataTypeFilter
  _max: NestedEnumSecureDataTypeFilter
}

input EnumTypeOfDocumentFieldUpdateOperationsInput {
  set: TypeOfDocument
}

input EnumTypeOfDocumentFilter {
  equals: TypeOfDocument
  in: [TypeOfDocument!]
  notIn: [TypeOfDocument!]
  not: TypeOfDocument
}

input EnumTypeOfDocumentWithAggregatesFilter {
  equals: TypeOfDocument
  in: [TypeOfDocument!]
  notIn: [TypeOfDocument!]
  not: TypeOfDocument
  _count: NestedIntFilter
  _min: NestedEnumTypeOfDocumentFilter
  _max: NestedEnumTypeOfDocumentFilter
}

"""Long necks, cool patterns, taller than you."""
type ErrorProfiling {
  errorCode: String!
  message: String!
}

type ExploreResponse {
  people: [Personal!]!
  venues: [Venue!]!
  events: [Json!]
}

input FloatFieldUpdateOperationsInput {
  set: Float
  increment: Float
  decrement: Float
  multiply: Float
  divide: Float
}

input FloatFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatFilter
}

input FloatWithAggregatesFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatWithAggregatesFilter
  _count: NestedIntFilter
  _avg: NestedFloatFilter
  _sum: NestedFloatFilter
  _min: NestedFloatFilter
  _max: NestedFloatFilter
}

type FriendRequest {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  Notifications: [Notifications!]!
  NotificationStatus: NotificationStatus!
  notificationStatusId: String!
  senderProfileId: String!
  receiverProfileId: String!
  senderProfile: Profile!
  receiverProfile: Profile!
}

input FriendRequestCountOrderByAggregateInput {
  id: SortOrder
  senderProfileId: SortOrder
  receiverProfileId: SortOrder
  notificationStatusId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input FriendRequestCreateInput {
  id: String
  senderProfileId: String!
  receiverProfileId: String!
  createdAt: DateTime
  updatedAt: DateTime
  Notifications: NotificationsCreateNestedManyWithoutFriendRequestsInput
  NotificationStatus: NotificationStatusCreateNestedOneWithoutFriendRequestInput!
}

input FriendRequestCreateManyInput {
  id: String
  senderProfileId: String!
  receiverProfileId: String!
  notificationStatusId: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input FriendRequestCreateNestedManyWithoutNotificationsInput {
  create: FriendRequestCreateWithoutNotificationsInput
  connectOrCreate: [FriendRequestCreateOrConnectWithoutNotificationsInput!]
  connect: [FriendRequestWhereUniqueInput!]
}

input FriendRequestCreateNestedOneWithoutNotificationStatusInput {
  create: FriendRequestCreateWithoutNotificationStatusInput
  connectOrCreate: FriendRequestCreateOrConnectWithoutNotificationStatusInput
  connect: FriendRequestWhereUniqueInput
}

input FriendRequestCreateOrConnectWithoutNotificationStatusInput {
  where: FriendRequestWhereUniqueInput!
  create: FriendRequestCreateWithoutNotificationStatusInput!
}

input FriendRequestCreateOrConnectWithoutNotificationsInput {
  where: FriendRequestWhereUniqueInput!
  create: FriendRequestCreateWithoutNotificationsInput!
}

input FriendRequestCreateWithoutNotificationStatusInput {
  id: String
  senderProfileId: String!
  receiverProfileId: String!
  createdAt: DateTime
  updatedAt: DateTime
  Notifications: NotificationsCreateNestedManyWithoutFriendRequestsInput
}

input FriendRequestCreateWithoutNotificationsInput {
  id: String
  senderProfileId: String!
  receiverProfileId: String!
  createdAt: DateTime
  updatedAt: DateTime
  NotificationStatus: NotificationStatusCreateNestedOneWithoutFriendRequestInput!
}

input FriendRequestListRelationFilter {
  every: FriendRequestWhereInput
  some: FriendRequestWhereInput
  none: FriendRequestWhereInput
}

input FriendRequestMaxOrderByAggregateInput {
  id: SortOrder
  senderProfileId: SortOrder
  receiverProfileId: SortOrder
  notificationStatusId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input FriendRequestMinOrderByAggregateInput {
  id: SortOrder
  senderProfileId: SortOrder
  receiverProfileId: SortOrder
  notificationStatusId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input FriendRequestOrderByRelationAggregateInput {
  _count: SortOrder
}

input FriendRequestOrderByWithAggregationInput {
  id: SortOrder
  senderProfileId: SortOrder
  receiverProfileId: SortOrder
  notificationStatusId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: FriendRequestCountOrderByAggregateInput
  _max: FriendRequestMaxOrderByAggregateInput
  _min: FriendRequestMinOrderByAggregateInput
}

input FriendRequestOrderByWithRelationInput {
  id: SortOrder
  senderProfileId: SortOrder
  receiverProfileId: SortOrder
  notificationStatusId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  Notifications: NotificationsOrderByRelationAggregateInput
  NotificationStatus: NotificationStatusOrderByWithRelationInput
}

input FriendRequestRelationFilter {
  is: FriendRequestWhereInput
  isNot: FriendRequestWhereInput
}

enum FriendRequestScalarFieldEnum {
  id
  senderProfileId
  receiverProfileId
  notificationStatusId
  createdAt
  updatedAt
}

input FriendRequestScalarWhereInput {
  AND: [FriendRequestScalarWhereInput!]
  OR: [FriendRequestScalarWhereInput!]
  NOT: [FriendRequestScalarWhereInput!]
  id: StringFilter
  senderProfileId: StringFilter
  receiverProfileId: StringFilter
  notificationStatusId: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input FriendRequestScalarWhereWithAggregatesInput {
  AND: [FriendRequestScalarWhereWithAggregatesInput!]
  OR: [FriendRequestScalarWhereWithAggregatesInput!]
  NOT: [FriendRequestScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  senderProfileId: StringWithAggregatesFilter
  receiverProfileId: StringWithAggregatesFilter
  notificationStatusId: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input FriendRequestUpdateInput {
  id: StringFieldUpdateOperationsInput
  senderProfileId: StringFieldUpdateOperationsInput
  receiverProfileId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Notifications: NotificationsUpdateManyWithoutFriendRequestsNestedInput
  NotificationStatus: NotificationStatusUpdateOneRequiredWithoutFriendRequestNestedInput
}

input FriendRequestUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  senderProfileId: StringFieldUpdateOperationsInput
  receiverProfileId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FriendRequestUpdateManyWithWhereWithoutNotificationsInput {
  where: FriendRequestScalarWhereInput!
  data: FriendRequestUpdateManyMutationInput!
}

input FriendRequestUpdateManyWithoutNotificationsNestedInput {
  create: FriendRequestCreateWithoutNotificationsInput
  connectOrCreate: [FriendRequestCreateOrConnectWithoutNotificationsInput!]
  upsert: [FriendRequestUpsertWithWhereUniqueWithoutNotificationsInput!]
  set: [FriendRequestWhereUniqueInput!]
  disconnect: [FriendRequestWhereUniqueInput!]
  delete: [FriendRequestWhereUniqueInput!]
  connect: [FriendRequestWhereUniqueInput!]
  update: [FriendRequestUpdateWithWhereUniqueWithoutNotificationsInput!]
  updateMany: [FriendRequestUpdateManyWithWhereWithoutNotificationsInput!]
  deleteMany: [FriendRequestScalarWhereInput!]
}

input FriendRequestUpdateOneWithoutNotificationStatusNestedInput {
  create: FriendRequestCreateWithoutNotificationStatusInput
  connectOrCreate: FriendRequestCreateOrConnectWithoutNotificationStatusInput
  upsert: FriendRequestUpsertWithoutNotificationStatusInput
  disconnect: Boolean
  delete: Boolean
  connect: FriendRequestWhereUniqueInput
  update: FriendRequestUpdateWithoutNotificationStatusInput
}

input FriendRequestUpdateWithWhereUniqueWithoutNotificationsInput {
  where: FriendRequestWhereUniqueInput!
  data: FriendRequestUpdateWithoutNotificationsInput!
}

input FriendRequestUpdateWithoutNotificationStatusInput {
  id: StringFieldUpdateOperationsInput
  senderProfileId: StringFieldUpdateOperationsInput
  receiverProfileId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Notifications: NotificationsUpdateManyWithoutFriendRequestsNestedInput
}

input FriendRequestUpdateWithoutNotificationsInput {
  id: StringFieldUpdateOperationsInput
  senderProfileId: StringFieldUpdateOperationsInput
  receiverProfileId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  NotificationStatus: NotificationStatusUpdateOneRequiredWithoutFriendRequestNestedInput
}

input FriendRequestUpsertWithWhereUniqueWithoutNotificationsInput {
  where: FriendRequestWhereUniqueInput!
  update: FriendRequestUpdateWithoutNotificationsInput!
  create: FriendRequestCreateWithoutNotificationsInput!
}

input FriendRequestUpsertWithoutNotificationStatusInput {
  update: FriendRequestUpdateWithoutNotificationStatusInput!
  create: FriendRequestCreateWithoutNotificationStatusInput!
}

input FriendRequestWhereInput {
  AND: [FriendRequestWhereInput!]
  OR: [FriendRequestWhereInput!]
  NOT: [FriendRequestWhereInput!]
  id: StringFilter
  senderProfileId: StringFilter
  receiverProfileId: StringFilter
  notificationStatusId: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  Notifications: NotificationsListRelationFilter
  NotificationStatus: NotificationStatusWhereInput
}

input FriendRequestWhereUniqueInput {
  id: String
  notificationStatusId: String
}

type Geometry {
  id: ID!
  h3Index15: String
  latitude: Float!
  longitude: Float!
  Location: Location
  Country: Country
  State: State
  City: City
}

input GeometryAvgOrderByAggregateInput {
  id: SortOrder
  latitude: SortOrder
  longitude: SortOrder
}

input GeometryCountOrderByAggregateInput {
  id: SortOrder
  h3Index15: SortOrder
  latitude: SortOrder
  longitude: SortOrder
}

input GeometryCreateInput {
  h3Index15: String
  latitude: Float!
  longitude: Float!
  Location: LocationCreateNestedOneWithoutGeometryInput
  Country: CountryCreateNestedOneWithoutGeometryInput
  State: StateCreateNestedOneWithoutGeometryInput
  City: CityCreateNestedOneWithoutGeometryInput
}

input GeometryCreateManyInput {
  id: Int
  h3Index15: String
  latitude: Float!
  longitude: Float!
}

input GeometryCreateNestedOneWithoutCityInput {
  create: GeometryCreateWithoutCityInput
  connectOrCreate: GeometryCreateOrConnectWithoutCityInput
  connect: GeometryWhereUniqueInput
}

input GeometryCreateNestedOneWithoutCountryInput {
  create: GeometryCreateWithoutCountryInput
  connectOrCreate: GeometryCreateOrConnectWithoutCountryInput
  connect: GeometryWhereUniqueInput
}

input GeometryCreateNestedOneWithoutLocationInput {
  create: GeometryCreateWithoutLocationInput
  connectOrCreate: GeometryCreateOrConnectWithoutLocationInput
  connect: GeometryWhereUniqueInput
}

input GeometryCreateNestedOneWithoutStateInput {
  create: GeometryCreateWithoutStateInput
  connectOrCreate: GeometryCreateOrConnectWithoutStateInput
  connect: GeometryWhereUniqueInput
}

input GeometryCreateOrConnectWithoutCityInput {
  where: GeometryWhereUniqueInput!
  create: GeometryCreateWithoutCityInput!
}

input GeometryCreateOrConnectWithoutCountryInput {
  where: GeometryWhereUniqueInput!
  create: GeometryCreateWithoutCountryInput!
}

input GeometryCreateOrConnectWithoutLocationInput {
  where: GeometryWhereUniqueInput!
  create: GeometryCreateWithoutLocationInput!
}

input GeometryCreateOrConnectWithoutStateInput {
  where: GeometryWhereUniqueInput!
  create: GeometryCreateWithoutStateInput!
}

input GeometryCreateWithoutCityInput {
  h3Index15: String
  latitude: Float!
  longitude: Float!
  Location: LocationCreateNestedOneWithoutGeometryInput
  Country: CountryCreateNestedOneWithoutGeometryInput
  State: StateCreateNestedOneWithoutGeometryInput
}

input GeometryCreateWithoutCountryInput {
  h3Index15: String
  latitude: Float!
  longitude: Float!
  Location: LocationCreateNestedOneWithoutGeometryInput
  State: StateCreateNestedOneWithoutGeometryInput
  City: CityCreateNestedOneWithoutGeometryInput
}

input GeometryCreateWithoutLocationInput {
  h3Index15: String
  latitude: Float!
  longitude: Float!
  Country: CountryCreateNestedOneWithoutGeometryInput
  State: StateCreateNestedOneWithoutGeometryInput
  City: CityCreateNestedOneWithoutGeometryInput
}

input GeometryCreateWithoutStateInput {
  h3Index15: String
  latitude: Float!
  longitude: Float!
  Location: LocationCreateNestedOneWithoutGeometryInput
  Country: CountryCreateNestedOneWithoutGeometryInput
  City: CityCreateNestedOneWithoutGeometryInput
}

input GeometryMaxOrderByAggregateInput {
  id: SortOrder
  h3Index15: SortOrder
  latitude: SortOrder
  longitude: SortOrder
}

input GeometryMinOrderByAggregateInput {
  id: SortOrder
  h3Index15: SortOrder
  latitude: SortOrder
  longitude: SortOrder
}

input GeometryOrderByWithAggregationInput {
  id: SortOrder
  h3Index15: SortOrder
  latitude: SortOrder
  longitude: SortOrder
  _count: GeometryCountOrderByAggregateInput
  _avg: GeometryAvgOrderByAggregateInput
  _max: GeometryMaxOrderByAggregateInput
  _min: GeometryMinOrderByAggregateInput
  _sum: GeometrySumOrderByAggregateInput
}

input GeometryOrderByWithRelationInput {
  id: SortOrder
  h3Index15: SortOrder
  latitude: SortOrder
  longitude: SortOrder
  Location: LocationOrderByWithRelationInput
  Country: CountryOrderByWithRelationInput
  State: StateOrderByWithRelationInput
  City: CityOrderByWithRelationInput
}

input GeometryRelationFilter {
  is: GeometryWhereInput
  isNot: GeometryWhereInput
}

enum GeometryScalarFieldEnum {
  id
  h3Index15
  latitude
  longitude
}

input GeometryScalarWhereWithAggregatesInput {
  AND: [GeometryScalarWhereWithAggregatesInput!]
  OR: [GeometryScalarWhereWithAggregatesInput!]
  NOT: [GeometryScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  h3Index15: StringNullableWithAggregatesFilter
  latitude: FloatWithAggregatesFilter
  longitude: FloatWithAggregatesFilter
}

input GeometrySumOrderByAggregateInput {
  id: SortOrder
  latitude: SortOrder
  longitude: SortOrder
}

input GeometryUpdateInput {
  h3Index15: NullableStringFieldUpdateOperationsInput
  latitude: FloatFieldUpdateOperationsInput
  longitude: FloatFieldUpdateOperationsInput
  Location: LocationUpdateOneWithoutGeometryNestedInput
  Country: CountryUpdateOneWithoutGeometryNestedInput
  State: StateUpdateOneWithoutGeometryNestedInput
  City: CityUpdateOneWithoutGeometryNestedInput
}

input GeometryUpdateManyMutationInput {
  h3Index15: NullableStringFieldUpdateOperationsInput
  latitude: FloatFieldUpdateOperationsInput
  longitude: FloatFieldUpdateOperationsInput
}

input GeometryUpdateOneRequiredWithoutCityNestedInput {
  create: GeometryCreateWithoutCityInput
  connectOrCreate: GeometryCreateOrConnectWithoutCityInput
  upsert: GeometryUpsertWithoutCityInput
  connect: GeometryWhereUniqueInput
  update: GeometryUpdateWithoutCityInput
}

input GeometryUpdateOneRequiredWithoutCountryNestedInput {
  create: GeometryCreateWithoutCountryInput
  connectOrCreate: GeometryCreateOrConnectWithoutCountryInput
  upsert: GeometryUpsertWithoutCountryInput
  connect: GeometryWhereUniqueInput
  update: GeometryUpdateWithoutCountryInput
}

input GeometryUpdateOneRequiredWithoutStateNestedInput {
  create: GeometryCreateWithoutStateInput
  connectOrCreate: GeometryCreateOrConnectWithoutStateInput
  upsert: GeometryUpsertWithoutStateInput
  connect: GeometryWhereUniqueInput
  update: GeometryUpdateWithoutStateInput
}

input GeometryUpdateOneWithoutLocationNestedInput {
  create: GeometryCreateWithoutLocationInput
  connectOrCreate: GeometryCreateOrConnectWithoutLocationInput
  upsert: GeometryUpsertWithoutLocationInput
  disconnect: Boolean
  delete: Boolean
  connect: GeometryWhereUniqueInput
  update: GeometryUpdateWithoutLocationInput
}

input GeometryUpdateWithoutCityInput {
  h3Index15: NullableStringFieldUpdateOperationsInput
  latitude: FloatFieldUpdateOperationsInput
  longitude: FloatFieldUpdateOperationsInput
  Location: LocationUpdateOneWithoutGeometryNestedInput
  Country: CountryUpdateOneWithoutGeometryNestedInput
  State: StateUpdateOneWithoutGeometryNestedInput
}

input GeometryUpdateWithoutCountryInput {
  h3Index15: NullableStringFieldUpdateOperationsInput
  latitude: FloatFieldUpdateOperationsInput
  longitude: FloatFieldUpdateOperationsInput
  Location: LocationUpdateOneWithoutGeometryNestedInput
  State: StateUpdateOneWithoutGeometryNestedInput
  City: CityUpdateOneWithoutGeometryNestedInput
}

input GeometryUpdateWithoutLocationInput {
  h3Index15: NullableStringFieldUpdateOperationsInput
  latitude: FloatFieldUpdateOperationsInput
  longitude: FloatFieldUpdateOperationsInput
  Country: CountryUpdateOneWithoutGeometryNestedInput
  State: StateUpdateOneWithoutGeometryNestedInput
  City: CityUpdateOneWithoutGeometryNestedInput
}

input GeometryUpdateWithoutStateInput {
  h3Index15: NullableStringFieldUpdateOperationsInput
  latitude: FloatFieldUpdateOperationsInput
  longitude: FloatFieldUpdateOperationsInput
  Location: LocationUpdateOneWithoutGeometryNestedInput
  Country: CountryUpdateOneWithoutGeometryNestedInput
  City: CityUpdateOneWithoutGeometryNestedInput
}

input GeometryUpsertWithoutCityInput {
  update: GeometryUpdateWithoutCityInput!
  create: GeometryCreateWithoutCityInput!
}

input GeometryUpsertWithoutCountryInput {
  update: GeometryUpdateWithoutCountryInput!
  create: GeometryCreateWithoutCountryInput!
}

input GeometryUpsertWithoutLocationInput {
  update: GeometryUpdateWithoutLocationInput!
  create: GeometryCreateWithoutLocationInput!
}

input GeometryUpsertWithoutStateInput {
  update: GeometryUpdateWithoutStateInput!
  create: GeometryCreateWithoutStateInput!
}

input GeometryWhereInput {
  AND: [GeometryWhereInput!]
  OR: [GeometryWhereInput!]
  NOT: [GeometryWhereInput!]
  id: IntFilter
  h3Index15: StringNullableFilter
  latitude: FloatFilter
  longitude: FloatFilter
  Location: LocationWhereInput
  Country: CountryWhereInput
  State: StateWhereInput
  City: CityWhereInput
}

input GeometryWhereUniqueInput {
  id: Int
}

type Group {
  id: ID!
  name: String!
  photos(where: PhotoWhereInput, orderBy: [PhotoOrderByWithRelationInput!], cursor: PhotoWhereUniqueInput, take: Int, skip: Int, distinct: [PhotoScalarFieldEnum!]): [Photo!]!
  Profile(where: ProfileWhereInput, orderBy: [ProfileOrderByWithRelationInput!], cursor: ProfileWhereUniqueInput, take: Int, skip: Int, distinct: [ProfileScalarFieldEnum!]): [Profile!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input GroupCountOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input GroupCreateInput {
  id: String
  name: String!
  createdAt: DateTime
  updatedAt: DateTime
  photos: PhotoCreateNestedManyWithoutGroupInput
  Profile: ProfileCreateNestedManyWithoutGroupsInput
}

input GroupCreateManyInput {
  id: String
  name: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input GroupCreateNestedManyWithoutProfileInput {
  create: GroupCreateWithoutProfileInput
  connectOrCreate: [GroupCreateOrConnectWithoutProfileInput!]
  connect: [GroupWhereUniqueInput!]
}

input GroupCreateNestedOneWithoutPhotosInput {
  create: GroupCreateWithoutPhotosInput
  connectOrCreate: GroupCreateOrConnectWithoutPhotosInput
  connect: GroupWhereUniqueInput
}

input GroupCreateOrConnectWithoutPhotosInput {
  where: GroupWhereUniqueInput!
  create: GroupCreateWithoutPhotosInput!
}

input GroupCreateOrConnectWithoutProfileInput {
  where: GroupWhereUniqueInput!
  create: GroupCreateWithoutProfileInput!
}

input GroupCreateWithoutPhotosInput {
  id: String
  name: String!
  createdAt: DateTime
  updatedAt: DateTime
  Profile: ProfileCreateNestedManyWithoutGroupsInput
}

input GroupCreateWithoutProfileInput {
  id: String
  name: String!
  createdAt: DateTime
  updatedAt: DateTime
  photos: PhotoCreateNestedManyWithoutGroupInput
}

input GroupListRelationFilter {
  every: GroupWhereInput
  some: GroupWhereInput
  none: GroupWhereInput
}

input GroupMaxOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input GroupMinOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input GroupOrderByRelationAggregateInput {
  _count: SortOrder
}

input GroupOrderByWithAggregationInput {
  id: SortOrder
  name: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: GroupCountOrderByAggregateInput
  _max: GroupMaxOrderByAggregateInput
  _min: GroupMinOrderByAggregateInput
}

input GroupOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  photos: PhotoOrderByRelationAggregateInput
  Profile: ProfileOrderByRelationAggregateInput
}

input GroupRelationFilter {
  is: GroupWhereInput
  isNot: GroupWhereInput
}

enum GroupScalarFieldEnum {
  id
  name
  createdAt
  updatedAt
}

input GroupScalarWhereInput {
  AND: [GroupScalarWhereInput!]
  OR: [GroupScalarWhereInput!]
  NOT: [GroupScalarWhereInput!]
  id: StringFilter
  name: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input GroupScalarWhereWithAggregatesInput {
  AND: [GroupScalarWhereWithAggregatesInput!]
  OR: [GroupScalarWhereWithAggregatesInput!]
  NOT: [GroupScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input GroupUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  photos: PhotoUpdateManyWithoutGroupNestedInput
  Profile: ProfileUpdateManyWithoutGroupsNestedInput
}

input GroupUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupUpdateManyWithWhereWithoutProfileInput {
  where: GroupScalarWhereInput!
  data: GroupUpdateManyMutationInput!
}

input GroupUpdateManyWithoutProfileNestedInput {
  create: GroupCreateWithoutProfileInput
  connectOrCreate: [GroupCreateOrConnectWithoutProfileInput!]
  upsert: [GroupUpsertWithWhereUniqueWithoutProfileInput!]
  set: [GroupWhereUniqueInput!]
  disconnect: [GroupWhereUniqueInput!]
  delete: [GroupWhereUniqueInput!]
  connect: [GroupWhereUniqueInput!]
  update: [GroupUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [GroupUpdateManyWithWhereWithoutProfileInput!]
  deleteMany: [GroupScalarWhereInput!]
}

input GroupUpdateOneWithoutPhotosNestedInput {
  create: GroupCreateWithoutPhotosInput
  connectOrCreate: GroupCreateOrConnectWithoutPhotosInput
  upsert: GroupUpsertWithoutPhotosInput
  disconnect: Boolean
  delete: Boolean
  connect: GroupWhereUniqueInput
  update: GroupUpdateWithoutPhotosInput
}

input GroupUpdateWithWhereUniqueWithoutProfileInput {
  where: GroupWhereUniqueInput!
  data: GroupUpdateWithoutProfileInput!
}

input GroupUpdateWithoutPhotosInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateManyWithoutGroupsNestedInput
}

input GroupUpdateWithoutProfileInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  photos: PhotoUpdateManyWithoutGroupNestedInput
}

input GroupUpsertWithWhereUniqueWithoutProfileInput {
  where: GroupWhereUniqueInput!
  update: GroupUpdateWithoutProfileInput!
  create: GroupCreateWithoutProfileInput!
}

input GroupUpsertWithoutPhotosInput {
  update: GroupUpdateWithoutPhotosInput!
  create: GroupCreateWithoutPhotosInput!
}

input GroupWhereInput {
  AND: [GroupWhereInput!]
  OR: [GroupWhereInput!]
  NOT: [GroupWhereInput!]
  id: StringFilter
  name: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  photos: PhotoListRelationFilter
  Profile: ProfileListRelationFilter
}

input GroupWhereUniqueInput {
  id: String
}

type H3Index5VenueRecommendation {
  id: ID!
  h3Index5: String!
  venuesProfileIds: [String!]!
  Area: Area
  areaId: String
  keywordSuggestions: [Json!]!
  timesRequested: Int
  SearchAreaMetrics(where: SearchAreaMetricsWhereInput, orderBy: [SearchAreaMetricsOrderByWithRelationInput!], cursor: SearchAreaMetricsWhereUniqueInput, take: Int, skip: Int, distinct: [SearchAreaMetricsScalarFieldEnum!]): [SearchAreaMetrics!]!
  Vote(where: VoteWhereInput, orderBy: [VoteOrderByWithRelationInput!], cursor: VoteWhereUniqueInput, take: Int, skip: Int, distinct: [VoteScalarFieldEnum!]): [Vote!]!
}

input H3Index5VenueRecommendationAvgOrderByAggregateInput {
  timesRequested: SortOrder
}

input H3Index5VenueRecommendationCountOrderByAggregateInput {
  id: SortOrder
  h3Index5: SortOrder
  venuesProfileIds: SortOrder
  areaId: SortOrder
  keywordSuggestions: SortOrder
  timesRequested: SortOrder
}

input H3Index5VenueRecommendationCreateInput {
  id: String
  h3Index5: String!
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: Int
  Area: AreaCreateNestedOneWithoutH3Index5VenueRecommendationInput
  SearchAreaMetrics: SearchAreaMetricsCreateNestedManyWithoutH3Index5VenueRecommendationInput
  Vote: VoteCreateNestedManyWithoutH3Index5VenueRecommendationInput
}

input H3Index5VenueRecommendationCreateManyInput {
  id: String
  h3Index5: String!
  venuesProfileIds: [String!]
  areaId: String
  keywordSuggestions: [Json!]
  timesRequested: Int
}

input H3Index5VenueRecommendationCreateNestedOneWithoutAreaInput {
  create: H3Index5VenueRecommendationCreateWithoutAreaInput
  connectOrCreate: H3Index5VenueRecommendationCreateOrConnectWithoutAreaInput
  connect: H3Index5VenueRecommendationWhereUniqueInput
}

input H3Index5VenueRecommendationCreateNestedOneWithoutSearchAreaMetricsInput {
  create: H3Index5VenueRecommendationCreateWithoutSearchAreaMetricsInput
  connectOrCreate: H3Index5VenueRecommendationCreateOrConnectWithoutSearchAreaMetricsInput
  connect: H3Index5VenueRecommendationWhereUniqueInput
}

input H3Index5VenueRecommendationCreateNestedOneWithoutVoteInput {
  create: H3Index5VenueRecommendationCreateWithoutVoteInput
  connectOrCreate: H3Index5VenueRecommendationCreateOrConnectWithoutVoteInput
  connect: H3Index5VenueRecommendationWhereUniqueInput
}

input H3Index5VenueRecommendationCreateOrConnectWithoutAreaInput {
  where: H3Index5VenueRecommendationWhereUniqueInput!
  create: H3Index5VenueRecommendationCreateWithoutAreaInput!
}

input H3Index5VenueRecommendationCreateOrConnectWithoutSearchAreaMetricsInput {
  where: H3Index5VenueRecommendationWhereUniqueInput!
  create: H3Index5VenueRecommendationCreateWithoutSearchAreaMetricsInput!
}

input H3Index5VenueRecommendationCreateOrConnectWithoutVoteInput {
  where: H3Index5VenueRecommendationWhereUniqueInput!
  create: H3Index5VenueRecommendationCreateWithoutVoteInput!
}

input H3Index5VenueRecommendationCreateWithoutAreaInput {
  id: String
  h3Index5: String!
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: Int
  SearchAreaMetrics: SearchAreaMetricsCreateNestedManyWithoutH3Index5VenueRecommendationInput
  Vote: VoteCreateNestedManyWithoutH3Index5VenueRecommendationInput
}

input H3Index5VenueRecommendationCreateWithoutSearchAreaMetricsInput {
  id: String
  h3Index5: String!
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: Int
  Area: AreaCreateNestedOneWithoutH3Index5VenueRecommendationInput
  Vote: VoteCreateNestedManyWithoutH3Index5VenueRecommendationInput
}

input H3Index5VenueRecommendationCreateWithoutVoteInput {
  id: String
  h3Index5: String!
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: Int
  Area: AreaCreateNestedOneWithoutH3Index5VenueRecommendationInput
  SearchAreaMetrics: SearchAreaMetricsCreateNestedManyWithoutH3Index5VenueRecommendationInput
}

input H3Index5VenueRecommendationCreatekeywordSuggestionsInput {
  set: [Json!]!
}

input H3Index5VenueRecommendationCreatevenuesProfileIdsInput {
  set: [String!]!
}

input H3Index5VenueRecommendationMaxOrderByAggregateInput {
  id: SortOrder
  h3Index5: SortOrder
  areaId: SortOrder
  timesRequested: SortOrder
}

input H3Index5VenueRecommendationMinOrderByAggregateInput {
  id: SortOrder
  h3Index5: SortOrder
  areaId: SortOrder
  timesRequested: SortOrder
}

input H3Index5VenueRecommendationOrderByWithAggregationInput {
  id: SortOrder
  h3Index5: SortOrder
  venuesProfileIds: SortOrder
  areaId: SortOrder
  keywordSuggestions: SortOrder
  timesRequested: SortOrder
  _count: H3Index5VenueRecommendationCountOrderByAggregateInput
  _avg: H3Index5VenueRecommendationAvgOrderByAggregateInput
  _max: H3Index5VenueRecommendationMaxOrderByAggregateInput
  _min: H3Index5VenueRecommendationMinOrderByAggregateInput
  _sum: H3Index5VenueRecommendationSumOrderByAggregateInput
}

input H3Index5VenueRecommendationOrderByWithRelationInput {
  id: SortOrder
  h3Index5: SortOrder
  venuesProfileIds: SortOrder
  areaId: SortOrder
  keywordSuggestions: SortOrder
  timesRequested: SortOrder
  Area: AreaOrderByWithRelationInput
  SearchAreaMetrics: SearchAreaMetricsOrderByRelationAggregateInput
  Vote: VoteOrderByRelationAggregateInput
}

input H3Index5VenueRecommendationRelationFilter {
  is: H3Index5VenueRecommendationWhereInput
  isNot: H3Index5VenueRecommendationWhereInput
}

enum H3Index5VenueRecommendationScalarFieldEnum {
  id
  h3Index5
  venuesProfileIds
  areaId
  keywordSuggestions
  timesRequested
}

input H3Index5VenueRecommendationScalarWhereWithAggregatesInput {
  AND: [H3Index5VenueRecommendationScalarWhereWithAggregatesInput!]
  OR: [H3Index5VenueRecommendationScalarWhereWithAggregatesInput!]
  NOT: [H3Index5VenueRecommendationScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  h3Index5: StringWithAggregatesFilter
  venuesProfileIds: StringNullableListFilter
  areaId: StringNullableWithAggregatesFilter
  keywordSuggestions: JsonNullableListFilter
  timesRequested: IntNullableWithAggregatesFilter
}

input H3Index5VenueRecommendationSumOrderByAggregateInput {
  timesRequested: SortOrder
}

input H3Index5VenueRecommendationUpdateInput {
  id: StringFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  Area: AreaUpdateOneWithoutH3Index5VenueRecommendationNestedInput
  SearchAreaMetrics: SearchAreaMetricsUpdateManyWithoutH3Index5VenueRecommendationNestedInput
  Vote: VoteUpdateManyWithoutH3Index5VenueRecommendationNestedInput
}

input H3Index5VenueRecommendationUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
}

input H3Index5VenueRecommendationUpdateOneWithoutAreaNestedInput {
  create: H3Index5VenueRecommendationCreateWithoutAreaInput
  connectOrCreate: H3Index5VenueRecommendationCreateOrConnectWithoutAreaInput
  upsert: H3Index5VenueRecommendationUpsertWithoutAreaInput
  disconnect: Boolean
  delete: Boolean
  connect: H3Index5VenueRecommendationWhereUniqueInput
  update: H3Index5VenueRecommendationUpdateWithoutAreaInput
}

input H3Index5VenueRecommendationUpdateOneWithoutSearchAreaMetricsNestedInput {
  create: H3Index5VenueRecommendationCreateWithoutSearchAreaMetricsInput
  connectOrCreate: H3Index5VenueRecommendationCreateOrConnectWithoutSearchAreaMetricsInput
  upsert: H3Index5VenueRecommendationUpsertWithoutSearchAreaMetricsInput
  disconnect: Boolean
  delete: Boolean
  connect: H3Index5VenueRecommendationWhereUniqueInput
  update: H3Index5VenueRecommendationUpdateWithoutSearchAreaMetricsInput
}

input H3Index5VenueRecommendationUpdateOneWithoutVoteNestedInput {
  create: H3Index5VenueRecommendationCreateWithoutVoteInput
  connectOrCreate: H3Index5VenueRecommendationCreateOrConnectWithoutVoteInput
  upsert: H3Index5VenueRecommendationUpsertWithoutVoteInput
  disconnect: Boolean
  delete: Boolean
  connect: H3Index5VenueRecommendationWhereUniqueInput
  update: H3Index5VenueRecommendationUpdateWithoutVoteInput
}

input H3Index5VenueRecommendationUpdateWithoutAreaInput {
  id: StringFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  SearchAreaMetrics: SearchAreaMetricsUpdateManyWithoutH3Index5VenueRecommendationNestedInput
  Vote: VoteUpdateManyWithoutH3Index5VenueRecommendationNestedInput
}

input H3Index5VenueRecommendationUpdateWithoutSearchAreaMetricsInput {
  id: StringFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  Area: AreaUpdateOneWithoutH3Index5VenueRecommendationNestedInput
  Vote: VoteUpdateManyWithoutH3Index5VenueRecommendationNestedInput
}

input H3Index5VenueRecommendationUpdateWithoutVoteInput {
  id: StringFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  Area: AreaUpdateOneWithoutH3Index5VenueRecommendationNestedInput
  SearchAreaMetrics: SearchAreaMetricsUpdateManyWithoutH3Index5VenueRecommendationNestedInput
}

input H3Index5VenueRecommendationUpdatekeywordSuggestionsInput {
  set: [Json!]
  push: Json
}

input H3Index5VenueRecommendationUpdatevenuesProfileIdsInput {
  set: [String!]
  push: [String!]
}

input H3Index5VenueRecommendationUpsertWithoutAreaInput {
  update: H3Index5VenueRecommendationUpdateWithoutAreaInput!
  create: H3Index5VenueRecommendationCreateWithoutAreaInput!
}

input H3Index5VenueRecommendationUpsertWithoutSearchAreaMetricsInput {
  update: H3Index5VenueRecommendationUpdateWithoutSearchAreaMetricsInput!
  create: H3Index5VenueRecommendationCreateWithoutSearchAreaMetricsInput!
}

input H3Index5VenueRecommendationUpsertWithoutVoteInput {
  update: H3Index5VenueRecommendationUpdateWithoutVoteInput!
  create: H3Index5VenueRecommendationCreateWithoutVoteInput!
}

input H3Index5VenueRecommendationWhereInput {
  AND: [H3Index5VenueRecommendationWhereInput!]
  OR: [H3Index5VenueRecommendationWhereInput!]
  NOT: [H3Index5VenueRecommendationWhereInput!]
  id: StringFilter
  h3Index5: StringFilter
  venuesProfileIds: StringNullableListFilter
  areaId: StringNullableFilter
  keywordSuggestions: JsonNullableListFilter
  timesRequested: IntNullableFilter
  Area: AreaWhereInput
  SearchAreaMetrics: SearchAreaMetricsListRelationFilter
  Vote: VoteListRelationFilter
}

input H3Index5VenueRecommendationWhereUniqueInput {
  id: String
  h3Index5: String
  areaId: String
}

type H3Index6VenueRecommendation {
  id: ID!
  h3Index6: String!
  venuesProfileIds: [String!]!
  Area: Area
  areaId: String
  keywordSuggestions: [Json!]!
  timesRequested: Int
  SearchAreaMetrics(where: SearchAreaMetricsWhereInput, orderBy: [SearchAreaMetricsOrderByWithRelationInput!], cursor: SearchAreaMetricsWhereUniqueInput, take: Int, skip: Int, distinct: [SearchAreaMetricsScalarFieldEnum!]): [SearchAreaMetrics!]!
  Vote(where: VoteWhereInput, orderBy: [VoteOrderByWithRelationInput!], cursor: VoteWhereUniqueInput, take: Int, skip: Int, distinct: [VoteScalarFieldEnum!]): [Vote!]!
  createdAt: DateTime!
}

input H3Index6VenueRecommendationAvgOrderByAggregateInput {
  timesRequested: SortOrder
}

input H3Index6VenueRecommendationCountOrderByAggregateInput {
  id: SortOrder
  h3Index6: SortOrder
  venuesProfileIds: SortOrder
  areaId: SortOrder
  keywordSuggestions: SortOrder
  timesRequested: SortOrder
  createdAt: SortOrder
}

input H3Index6VenueRecommendationCreateInput {
  id: String
  h3Index6: String!
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: Int
  createdAt: DateTime
  Area: AreaCreateNestedOneWithoutH3Index6VenueRecommendationInput
  SearchAreaMetrics: SearchAreaMetricsCreateNestedManyWithoutH3Index6VenueRecommendationInput
  Vote: VoteCreateNestedManyWithoutH3Index6VenueRecommendationInput
}

input H3Index6VenueRecommendationCreateManyInput {
  id: String
  h3Index6: String!
  venuesProfileIds: [String!]
  areaId: String
  keywordSuggestions: [Json!]
  timesRequested: Int
  createdAt: DateTime
}

input H3Index6VenueRecommendationCreateNestedOneWithoutAreaInput {
  create: H3Index6VenueRecommendationCreateWithoutAreaInput
  connectOrCreate: H3Index6VenueRecommendationCreateOrConnectWithoutAreaInput
  connect: H3Index6VenueRecommendationWhereUniqueInput
}

input H3Index6VenueRecommendationCreateNestedOneWithoutSearchAreaMetricsInput {
  create: H3Index6VenueRecommendationCreateWithoutSearchAreaMetricsInput
  connectOrCreate: H3Index6VenueRecommendationCreateOrConnectWithoutSearchAreaMetricsInput
  connect: H3Index6VenueRecommendationWhereUniqueInput
}

input H3Index6VenueRecommendationCreateNestedOneWithoutVoteInput {
  create: H3Index6VenueRecommendationCreateWithoutVoteInput
  connectOrCreate: H3Index6VenueRecommendationCreateOrConnectWithoutVoteInput
  connect: H3Index6VenueRecommendationWhereUniqueInput
}

input H3Index6VenueRecommendationCreateOrConnectWithoutAreaInput {
  where: H3Index6VenueRecommendationWhereUniqueInput!
  create: H3Index6VenueRecommendationCreateWithoutAreaInput!
}

input H3Index6VenueRecommendationCreateOrConnectWithoutSearchAreaMetricsInput {
  where: H3Index6VenueRecommendationWhereUniqueInput!
  create: H3Index6VenueRecommendationCreateWithoutSearchAreaMetricsInput!
}

input H3Index6VenueRecommendationCreateOrConnectWithoutVoteInput {
  where: H3Index6VenueRecommendationWhereUniqueInput!
  create: H3Index6VenueRecommendationCreateWithoutVoteInput!
}

input H3Index6VenueRecommendationCreateWithoutAreaInput {
  id: String
  h3Index6: String!
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: Int
  createdAt: DateTime
  SearchAreaMetrics: SearchAreaMetricsCreateNestedManyWithoutH3Index6VenueRecommendationInput
  Vote: VoteCreateNestedManyWithoutH3Index6VenueRecommendationInput
}

input H3Index6VenueRecommendationCreateWithoutSearchAreaMetricsInput {
  id: String
  h3Index6: String!
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: Int
  createdAt: DateTime
  Area: AreaCreateNestedOneWithoutH3Index6VenueRecommendationInput
  Vote: VoteCreateNestedManyWithoutH3Index6VenueRecommendationInput
}

input H3Index6VenueRecommendationCreateWithoutVoteInput {
  id: String
  h3Index6: String!
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: Int
  createdAt: DateTime
  Area: AreaCreateNestedOneWithoutH3Index6VenueRecommendationInput
  SearchAreaMetrics: SearchAreaMetricsCreateNestedManyWithoutH3Index6VenueRecommendationInput
}

input H3Index6VenueRecommendationCreatekeywordSuggestionsInput {
  set: [Json!]!
}

input H3Index6VenueRecommendationCreatevenuesProfileIdsInput {
  set: [String!]!
}

input H3Index6VenueRecommendationMaxOrderByAggregateInput {
  id: SortOrder
  h3Index6: SortOrder
  areaId: SortOrder
  timesRequested: SortOrder
  createdAt: SortOrder
}

input H3Index6VenueRecommendationMinOrderByAggregateInput {
  id: SortOrder
  h3Index6: SortOrder
  areaId: SortOrder
  timesRequested: SortOrder
  createdAt: SortOrder
}

input H3Index6VenueRecommendationOrderByWithAggregationInput {
  id: SortOrder
  h3Index6: SortOrder
  venuesProfileIds: SortOrder
  areaId: SortOrder
  keywordSuggestions: SortOrder
  timesRequested: SortOrder
  createdAt: SortOrder
  _count: H3Index6VenueRecommendationCountOrderByAggregateInput
  _avg: H3Index6VenueRecommendationAvgOrderByAggregateInput
  _max: H3Index6VenueRecommendationMaxOrderByAggregateInput
  _min: H3Index6VenueRecommendationMinOrderByAggregateInput
  _sum: H3Index6VenueRecommendationSumOrderByAggregateInput
}

input H3Index6VenueRecommendationOrderByWithRelationInput {
  id: SortOrder
  h3Index6: SortOrder
  venuesProfileIds: SortOrder
  areaId: SortOrder
  keywordSuggestions: SortOrder
  timesRequested: SortOrder
  createdAt: SortOrder
  Area: AreaOrderByWithRelationInput
  SearchAreaMetrics: SearchAreaMetricsOrderByRelationAggregateInput
  Vote: VoteOrderByRelationAggregateInput
}

input H3Index6VenueRecommendationRelationFilter {
  is: H3Index6VenueRecommendationWhereInput
  isNot: H3Index6VenueRecommendationWhereInput
}

enum H3Index6VenueRecommendationScalarFieldEnum {
  id
  h3Index6
  venuesProfileIds
  areaId
  keywordSuggestions
  timesRequested
  createdAt
}

input H3Index6VenueRecommendationScalarWhereWithAggregatesInput {
  AND: [H3Index6VenueRecommendationScalarWhereWithAggregatesInput!]
  OR: [H3Index6VenueRecommendationScalarWhereWithAggregatesInput!]
  NOT: [H3Index6VenueRecommendationScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  h3Index6: StringWithAggregatesFilter
  venuesProfileIds: StringNullableListFilter
  areaId: StringNullableWithAggregatesFilter
  keywordSuggestions: JsonNullableListFilter
  timesRequested: IntNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
}

input H3Index6VenueRecommendationSumOrderByAggregateInput {
  timesRequested: SortOrder
}

input H3Index6VenueRecommendationUpdateInput {
  id: StringFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Area: AreaUpdateOneWithoutH3Index6VenueRecommendationNestedInput
  SearchAreaMetrics: SearchAreaMetricsUpdateManyWithoutH3Index6VenueRecommendationNestedInput
  Vote: VoteUpdateManyWithoutH3Index6VenueRecommendationNestedInput
}

input H3Index6VenueRecommendationUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}

input H3Index6VenueRecommendationUpdateOneWithoutAreaNestedInput {
  create: H3Index6VenueRecommendationCreateWithoutAreaInput
  connectOrCreate: H3Index6VenueRecommendationCreateOrConnectWithoutAreaInput
  upsert: H3Index6VenueRecommendationUpsertWithoutAreaInput
  disconnect: Boolean
  delete: Boolean
  connect: H3Index6VenueRecommendationWhereUniqueInput
  update: H3Index6VenueRecommendationUpdateWithoutAreaInput
}

input H3Index6VenueRecommendationUpdateOneWithoutSearchAreaMetricsNestedInput {
  create: H3Index6VenueRecommendationCreateWithoutSearchAreaMetricsInput
  connectOrCreate: H3Index6VenueRecommendationCreateOrConnectWithoutSearchAreaMetricsInput
  upsert: H3Index6VenueRecommendationUpsertWithoutSearchAreaMetricsInput
  disconnect: Boolean
  delete: Boolean
  connect: H3Index6VenueRecommendationWhereUniqueInput
  update: H3Index6VenueRecommendationUpdateWithoutSearchAreaMetricsInput
}

input H3Index6VenueRecommendationUpdateOneWithoutVoteNestedInput {
  create: H3Index6VenueRecommendationCreateWithoutVoteInput
  connectOrCreate: H3Index6VenueRecommendationCreateOrConnectWithoutVoteInput
  upsert: H3Index6VenueRecommendationUpsertWithoutVoteInput
  disconnect: Boolean
  delete: Boolean
  connect: H3Index6VenueRecommendationWhereUniqueInput
  update: H3Index6VenueRecommendationUpdateWithoutVoteInput
}

input H3Index6VenueRecommendationUpdateWithoutAreaInput {
  id: StringFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  SearchAreaMetrics: SearchAreaMetricsUpdateManyWithoutH3Index6VenueRecommendationNestedInput
  Vote: VoteUpdateManyWithoutH3Index6VenueRecommendationNestedInput
}

input H3Index6VenueRecommendationUpdateWithoutSearchAreaMetricsInput {
  id: StringFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Area: AreaUpdateOneWithoutH3Index6VenueRecommendationNestedInput
  Vote: VoteUpdateManyWithoutH3Index6VenueRecommendationNestedInput
}

input H3Index6VenueRecommendationUpdateWithoutVoteInput {
  id: StringFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  venuesProfileIds: [String!]
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Area: AreaUpdateOneWithoutH3Index6VenueRecommendationNestedInput
  SearchAreaMetrics: SearchAreaMetricsUpdateManyWithoutH3Index6VenueRecommendationNestedInput
}

input H3Index6VenueRecommendationUpdatekeywordSuggestionsInput {
  set: [Json!]
  push: Json
}

input H3Index6VenueRecommendationUpdatevenuesProfileIdsInput {
  set: [String!]
  push: [String!]
}

input H3Index6VenueRecommendationUpsertWithoutAreaInput {
  update: H3Index6VenueRecommendationUpdateWithoutAreaInput!
  create: H3Index6VenueRecommendationCreateWithoutAreaInput!
}

input H3Index6VenueRecommendationUpsertWithoutSearchAreaMetricsInput {
  update: H3Index6VenueRecommendationUpdateWithoutSearchAreaMetricsInput!
  create: H3Index6VenueRecommendationCreateWithoutSearchAreaMetricsInput!
}

input H3Index6VenueRecommendationUpsertWithoutVoteInput {
  update: H3Index6VenueRecommendationUpdateWithoutVoteInput!
  create: H3Index6VenueRecommendationCreateWithoutVoteInput!
}

input H3Index6VenueRecommendationWhereInput {
  AND: [H3Index6VenueRecommendationWhereInput!]
  OR: [H3Index6VenueRecommendationWhereInput!]
  NOT: [H3Index6VenueRecommendationWhereInput!]
  id: StringFilter
  h3Index6: StringFilter
  venuesProfileIds: StringNullableListFilter
  areaId: StringNullableFilter
  keywordSuggestions: JsonNullableListFilter
  timesRequested: IntNullableFilter
  createdAt: DateTimeFilter
  Area: AreaWhereInput
  SearchAreaMetrics: SearchAreaMetricsListRelationFilter
  Vote: VoteListRelationFilter
}

input H3Index6VenueRecommendationWhereUniqueInput {
  id: String
  h3Index6: String
  areaId: String
}

type IdentifiableInformation {
  id: ID!
  storageId: String
  username: String!
  fullname: String
  firstname: String
  lastname: String
  nickname: String
  surname: String
  birthday: DateTime
  gender: String
  lookfor: String
  hometown: String
  currenttown: String
  createdAt: DateTime!
  updatedAt: DateTime!
  Profile: Profile!
  profileId: String!
}

input IdentifiableInformationCountOrderByAggregateInput {
  id: SortOrder
  storageId: SortOrder
  username: SortOrder
  fullname: SortOrder
  firstname: SortOrder
  lastname: SortOrder
  nickname: SortOrder
  surname: SortOrder
  birthday: SortOrder
  gender: SortOrder
  lookfor: SortOrder
  hometown: SortOrder
  currenttown: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  profileId: SortOrder
}

input IdentifiableInformationCreateInput {
  id: String
  storageId: String
  username: String!
  fullname: String
  firstname: String
  lastname: String
  nickname: String
  surname: String
  birthday: DateTime
  gender: String
  lookfor: String
  hometown: String
  currenttown: String
  createdAt: DateTime
  updatedAt: DateTime
  Profile: ProfileCreateNestedOneWithoutIdentifiableInformationInput!
}

input IdentifiableInformationCreateManyInput {
  id: String
  storageId: String
  username: String!
  fullname: String
  firstname: String
  lastname: String
  nickname: String
  surname: String
  birthday: DateTime
  gender: String
  lookfor: String
  hometown: String
  currenttown: String
  createdAt: DateTime
  updatedAt: DateTime
  profileId: String!
}

input IdentifiableInformationCreateNestedOneWithoutProfileInput {
  create: IdentifiableInformationCreateWithoutProfileInput
  connectOrCreate: IdentifiableInformationCreateOrConnectWithoutProfileInput
  connect: IdentifiableInformationWhereUniqueInput
}

input IdentifiableInformationCreateOrConnectWithoutProfileInput {
  where: IdentifiableInformationWhereUniqueInput!
  create: IdentifiableInformationCreateWithoutProfileInput!
}

input IdentifiableInformationCreateWithoutProfileInput {
  id: String
  storageId: String
  username: String!
  fullname: String
  firstname: String
  lastname: String
  nickname: String
  surname: String
  birthday: DateTime
  gender: String
  lookfor: String
  hometown: String
  currenttown: String
  createdAt: DateTime
  updatedAt: DateTime
}

input IdentifiableInformationMaxOrderByAggregateInput {
  id: SortOrder
  storageId: SortOrder
  username: SortOrder
  fullname: SortOrder
  firstname: SortOrder
  lastname: SortOrder
  nickname: SortOrder
  surname: SortOrder
  birthday: SortOrder
  gender: SortOrder
  lookfor: SortOrder
  hometown: SortOrder
  currenttown: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  profileId: SortOrder
}

input IdentifiableInformationMinOrderByAggregateInput {
  id: SortOrder
  storageId: SortOrder
  username: SortOrder
  fullname: SortOrder
  firstname: SortOrder
  lastname: SortOrder
  nickname: SortOrder
  surname: SortOrder
  birthday: SortOrder
  gender: SortOrder
  lookfor: SortOrder
  hometown: SortOrder
  currenttown: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  profileId: SortOrder
}

input IdentifiableInformationOrderByWithAggregationInput {
  id: SortOrder
  storageId: SortOrder
  username: SortOrder
  fullname: SortOrder
  firstname: SortOrder
  lastname: SortOrder
  nickname: SortOrder
  surname: SortOrder
  birthday: SortOrder
  gender: SortOrder
  lookfor: SortOrder
  hometown: SortOrder
  currenttown: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  profileId: SortOrder
  _count: IdentifiableInformationCountOrderByAggregateInput
  _max: IdentifiableInformationMaxOrderByAggregateInput
  _min: IdentifiableInformationMinOrderByAggregateInput
}

input IdentifiableInformationOrderByWithRelationInput {
  id: SortOrder
  storageId: SortOrder
  username: SortOrder
  fullname: SortOrder
  firstname: SortOrder
  lastname: SortOrder
  nickname: SortOrder
  surname: SortOrder
  birthday: SortOrder
  gender: SortOrder
  lookfor: SortOrder
  hometown: SortOrder
  currenttown: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  profileId: SortOrder
  Profile: ProfileOrderByWithRelationInput
}

input IdentifiableInformationRelationFilter {
  is: IdentifiableInformationWhereInput
  isNot: IdentifiableInformationWhereInput
}

enum IdentifiableInformationScalarFieldEnum {
  id
  storageId
  username
  fullname
  firstname
  lastname
  nickname
  surname
  birthday
  gender
  lookfor
  hometown
  currenttown
  createdAt
  updatedAt
  profileId
}

input IdentifiableInformationScalarWhereWithAggregatesInput {
  AND: [IdentifiableInformationScalarWhereWithAggregatesInput!]
  OR: [IdentifiableInformationScalarWhereWithAggregatesInput!]
  NOT: [IdentifiableInformationScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  storageId: StringNullableWithAggregatesFilter
  username: StringWithAggregatesFilter
  fullname: StringNullableWithAggregatesFilter
  firstname: StringNullableWithAggregatesFilter
  lastname: StringNullableWithAggregatesFilter
  nickname: StringNullableWithAggregatesFilter
  surname: StringNullableWithAggregatesFilter
  birthday: DateTimeNullableWithAggregatesFilter
  gender: StringNullableWithAggregatesFilter
  lookfor: StringNullableWithAggregatesFilter
  hometown: StringNullableWithAggregatesFilter
  currenttown: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  profileId: StringWithAggregatesFilter
}

input IdentifiableInformationUpdateInput {
  id: StringFieldUpdateOperationsInput
  storageId: NullableStringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  firstname: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  nickname: NullableStringFieldUpdateOperationsInput
  surname: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  lookfor: NullableStringFieldUpdateOperationsInput
  hometown: NullableStringFieldUpdateOperationsInput
  currenttown: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutIdentifiableInformationNestedInput
}

input IdentifiableInformationUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  storageId: NullableStringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  firstname: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  nickname: NullableStringFieldUpdateOperationsInput
  surname: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  lookfor: NullableStringFieldUpdateOperationsInput
  hometown: NullableStringFieldUpdateOperationsInput
  currenttown: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IdentifiableInformationUpdateOneWithoutProfileNestedInput {
  create: IdentifiableInformationCreateWithoutProfileInput
  connectOrCreate: IdentifiableInformationCreateOrConnectWithoutProfileInput
  upsert: IdentifiableInformationUpsertWithoutProfileInput
  disconnect: Boolean
  delete: Boolean
  connect: IdentifiableInformationWhereUniqueInput
  update: IdentifiableInformationUpdateWithoutProfileInput
}

input IdentifiableInformationUpdateWithoutProfileInput {
  id: StringFieldUpdateOperationsInput
  storageId: NullableStringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  firstname: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  nickname: NullableStringFieldUpdateOperationsInput
  surname: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  lookfor: NullableStringFieldUpdateOperationsInput
  hometown: NullableStringFieldUpdateOperationsInput
  currenttown: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input IdentifiableInformationUpsertWithoutProfileInput {
  update: IdentifiableInformationUpdateWithoutProfileInput!
  create: IdentifiableInformationCreateWithoutProfileInput!
}

input IdentifiableInformationWhereInput {
  AND: [IdentifiableInformationWhereInput!]
  OR: [IdentifiableInformationWhereInput!]
  NOT: [IdentifiableInformationWhereInput!]
  id: StringFilter
  storageId: StringNullableFilter
  username: StringFilter
  fullname: StringNullableFilter
  firstname: StringNullableFilter
  lastname: StringNullableFilter
  nickname: StringNullableFilter
  surname: StringNullableFilter
  birthday: DateTimeNullableFilter
  gender: StringNullableFilter
  lookfor: StringNullableFilter
  hometown: StringNullableFilter
  currenttown: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  profileId: StringFilter
  Profile: ProfileWhereInput
}

input IdentifiableInformationWhereUniqueInput {
  id: String
  username: String
  profileId: String
}

input IntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input IntNullableWithAggregatesFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _avg: NestedFloatNullableFilter
  _sum: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _max: NestedIntNullableFilter
}

input IntWithAggregatesFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntWithAggregatesFilter
  _count: NestedIntFilter
  _avg: NestedFloatFilter
  _sum: NestedIntFilter
  _min: NestedIntFilter
  _max: NestedIntFilter
}

scalar Json

input JsonNullableListFilter {
  equals: [Json!]
  has: Json
  hasEvery: [Json!]
  hasSome: [Json!]
  isEmpty: Boolean
}

type LegalAgreement {
  id: ID!
  aggreed: Boolean!
  Document: Document!
  documentId: Int!
  Credentials: Credentials
  credentialsId: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input LegalAgreementAvgOrderByAggregateInput {
  documentId: SortOrder
}

input LegalAgreementCountOrderByAggregateInput {
  id: SortOrder
  aggreed: SortOrder
  documentId: SortOrder
  credentialsId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input LegalAgreementCreateInput {
  id: String
  aggreed: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  Document: DocumentCreateNestedOneWithoutLegalAgreementInput!
  Credentials: CredentialsCreateNestedOneWithoutLegalAgreementInput
}

input LegalAgreementCreateManyCredentialsInput {
  id: String
  aggreed: Boolean
  documentId: Int!
  createdAt: DateTime
  updatedAt: DateTime
}

input LegalAgreementCreateManyCredentialsInputEnvelope {
  data: [LegalAgreementCreateManyCredentialsInput!]!
  skipDuplicates: Boolean
}

input LegalAgreementCreateManyDocumentInput {
  id: String
  aggreed: Boolean
  credentialsId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input LegalAgreementCreateManyDocumentInputEnvelope {
  data: [LegalAgreementCreateManyDocumentInput!]!
  skipDuplicates: Boolean
}

input LegalAgreementCreateManyInput {
  id: String
  aggreed: Boolean
  documentId: Int!
  credentialsId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input LegalAgreementCreateNestedManyWithoutCredentialsInput {
  create: LegalAgreementCreateWithoutCredentialsInput
  connectOrCreate: [LegalAgreementCreateOrConnectWithoutCredentialsInput!]
  createMany: LegalAgreementCreateManyCredentialsInputEnvelope
  connect: [LegalAgreementWhereUniqueInput!]
}

input LegalAgreementCreateNestedManyWithoutDocumentInput {
  create: LegalAgreementCreateWithoutDocumentInput
  connectOrCreate: [LegalAgreementCreateOrConnectWithoutDocumentInput!]
  createMany: LegalAgreementCreateManyDocumentInputEnvelope
  connect: [LegalAgreementWhereUniqueInput!]
}

input LegalAgreementCreateOrConnectWithoutCredentialsInput {
  where: LegalAgreementWhereUniqueInput!
  create: LegalAgreementCreateWithoutCredentialsInput!
}

input LegalAgreementCreateOrConnectWithoutDocumentInput {
  where: LegalAgreementWhereUniqueInput!
  create: LegalAgreementCreateWithoutDocumentInput!
}

input LegalAgreementCreateWithoutCredentialsInput {
  id: String
  aggreed: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  Document: DocumentCreateNestedOneWithoutLegalAgreementInput!
}

input LegalAgreementCreateWithoutDocumentInput {
  id: String
  aggreed: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  Credentials: CredentialsCreateNestedOneWithoutLegalAgreementInput
}

input LegalAgreementListRelationFilter {
  every: LegalAgreementWhereInput
  some: LegalAgreementWhereInput
  none: LegalAgreementWhereInput
}

input LegalAgreementMaxOrderByAggregateInput {
  id: SortOrder
  aggreed: SortOrder
  documentId: SortOrder
  credentialsId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input LegalAgreementMinOrderByAggregateInput {
  id: SortOrder
  aggreed: SortOrder
  documentId: SortOrder
  credentialsId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input LegalAgreementOrderByRelationAggregateInput {
  _count: SortOrder
}

input LegalAgreementOrderByWithAggregationInput {
  id: SortOrder
  aggreed: SortOrder
  documentId: SortOrder
  credentialsId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: LegalAgreementCountOrderByAggregateInput
  _avg: LegalAgreementAvgOrderByAggregateInput
  _max: LegalAgreementMaxOrderByAggregateInput
  _min: LegalAgreementMinOrderByAggregateInput
  _sum: LegalAgreementSumOrderByAggregateInput
}

input LegalAgreementOrderByWithRelationInput {
  id: SortOrder
  aggreed: SortOrder
  documentId: SortOrder
  credentialsId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  Document: DocumentOrderByWithRelationInput
  Credentials: CredentialsOrderByWithRelationInput
}

enum LegalAgreementScalarFieldEnum {
  id
  aggreed
  documentId
  credentialsId
  createdAt
  updatedAt
}

input LegalAgreementScalarWhereInput {
  AND: [LegalAgreementScalarWhereInput!]
  OR: [LegalAgreementScalarWhereInput!]
  NOT: [LegalAgreementScalarWhereInput!]
  id: StringFilter
  aggreed: BoolFilter
  documentId: IntFilter
  credentialsId: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input LegalAgreementScalarWhereWithAggregatesInput {
  AND: [LegalAgreementScalarWhereWithAggregatesInput!]
  OR: [LegalAgreementScalarWhereWithAggregatesInput!]
  NOT: [LegalAgreementScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  aggreed: BoolWithAggregatesFilter
  documentId: IntWithAggregatesFilter
  credentialsId: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input LegalAgreementSumOrderByAggregateInput {
  documentId: SortOrder
}

input LegalAgreementUpdateInput {
  id: StringFieldUpdateOperationsInput
  aggreed: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Document: DocumentUpdateOneRequiredWithoutLegalAgreementNestedInput
  Credentials: CredentialsUpdateOneWithoutLegalAgreementNestedInput
}

input LegalAgreementUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  aggreed: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LegalAgreementUpdateManyWithWhereWithoutCredentialsInput {
  where: LegalAgreementScalarWhereInput!
  data: LegalAgreementUpdateManyMutationInput!
}

input LegalAgreementUpdateManyWithWhereWithoutDocumentInput {
  where: LegalAgreementScalarWhereInput!
  data: LegalAgreementUpdateManyMutationInput!
}

input LegalAgreementUpdateManyWithoutCredentialsNestedInput {
  create: LegalAgreementCreateWithoutCredentialsInput
  connectOrCreate: [LegalAgreementCreateOrConnectWithoutCredentialsInput!]
  upsert: [LegalAgreementUpsertWithWhereUniqueWithoutCredentialsInput!]
  createMany: LegalAgreementCreateManyCredentialsInputEnvelope
  set: [LegalAgreementWhereUniqueInput!]
  disconnect: [LegalAgreementWhereUniqueInput!]
  delete: [LegalAgreementWhereUniqueInput!]
  connect: [LegalAgreementWhereUniqueInput!]
  update: [LegalAgreementUpdateWithWhereUniqueWithoutCredentialsInput!]
  updateMany: [LegalAgreementUpdateManyWithWhereWithoutCredentialsInput!]
  deleteMany: [LegalAgreementScalarWhereInput!]
}

input LegalAgreementUpdateManyWithoutDocumentNestedInput {
  create: LegalAgreementCreateWithoutDocumentInput
  connectOrCreate: [LegalAgreementCreateOrConnectWithoutDocumentInput!]
  upsert: [LegalAgreementUpsertWithWhereUniqueWithoutDocumentInput!]
  createMany: LegalAgreementCreateManyDocumentInputEnvelope
  set: [LegalAgreementWhereUniqueInput!]
  disconnect: [LegalAgreementWhereUniqueInput!]
  delete: [LegalAgreementWhereUniqueInput!]
  connect: [LegalAgreementWhereUniqueInput!]
  update: [LegalAgreementUpdateWithWhereUniqueWithoutDocumentInput!]
  updateMany: [LegalAgreementUpdateManyWithWhereWithoutDocumentInput!]
  deleteMany: [LegalAgreementScalarWhereInput!]
}

input LegalAgreementUpdateWithWhereUniqueWithoutCredentialsInput {
  where: LegalAgreementWhereUniqueInput!
  data: LegalAgreementUpdateWithoutCredentialsInput!
}

input LegalAgreementUpdateWithWhereUniqueWithoutDocumentInput {
  where: LegalAgreementWhereUniqueInput!
  data: LegalAgreementUpdateWithoutDocumentInput!
}

input LegalAgreementUpdateWithoutCredentialsInput {
  id: StringFieldUpdateOperationsInput
  aggreed: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Document: DocumentUpdateOneRequiredWithoutLegalAgreementNestedInput
}

input LegalAgreementUpdateWithoutDocumentInput {
  id: StringFieldUpdateOperationsInput
  aggreed: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Credentials: CredentialsUpdateOneWithoutLegalAgreementNestedInput
}

input LegalAgreementUpsertWithWhereUniqueWithoutCredentialsInput {
  where: LegalAgreementWhereUniqueInput!
  update: LegalAgreementUpdateWithoutCredentialsInput!
  create: LegalAgreementCreateWithoutCredentialsInput!
}

input LegalAgreementUpsertWithWhereUniqueWithoutDocumentInput {
  where: LegalAgreementWhereUniqueInput!
  update: LegalAgreementUpdateWithoutDocumentInput!
  create: LegalAgreementCreateWithoutDocumentInput!
}

input LegalAgreementWhereInput {
  AND: [LegalAgreementWhereInput!]
  OR: [LegalAgreementWhereInput!]
  NOT: [LegalAgreementWhereInput!]
  id: StringFilter
  aggreed: BoolFilter
  documentId: IntFilter
  credentialsId: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  Document: DocumentWhereInput
  Credentials: CredentialsWhereInput
}

input LegalAgreementWhereUniqueInput {
  id: String
}

type LiveOutPersonal {
  id: ID!
  Personal: Personal!
  personalId: String!
  Out(where: OutWhereInput, orderBy: [OutOrderByWithRelationInput!], cursor: OutWhereUniqueInput, take: Int, skip: Int, distinct: [OutScalarFieldEnum!]): [Out!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input LiveOutPersonalCountOrderByAggregateInput {
  id: SortOrder
  personalId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input LiveOutPersonalCreateInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutLiveOutPersonalInput!
  Out: OutCreateNestedManyWithoutLiveOutPersonalInput
}

input LiveOutPersonalCreateManyInput {
  id: String
  personalId: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input LiveOutPersonalCreateNestedOneWithoutOutInput {
  create: LiveOutPersonalCreateWithoutOutInput
  connectOrCreate: LiveOutPersonalCreateOrConnectWithoutOutInput
  connect: LiveOutPersonalWhereUniqueInput
}

input LiveOutPersonalCreateNestedOneWithoutPersonalInput {
  create: LiveOutPersonalCreateWithoutPersonalInput
  connectOrCreate: LiveOutPersonalCreateOrConnectWithoutPersonalInput
  connect: LiveOutPersonalWhereUniqueInput
}

input LiveOutPersonalCreateOrConnectWithoutOutInput {
  where: LiveOutPersonalWhereUniqueInput!
  create: LiveOutPersonalCreateWithoutOutInput!
}

input LiveOutPersonalCreateOrConnectWithoutPersonalInput {
  where: LiveOutPersonalWhereUniqueInput!
  create: LiveOutPersonalCreateWithoutPersonalInput!
}

input LiveOutPersonalCreateWithoutOutInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutLiveOutPersonalInput!
}

input LiveOutPersonalCreateWithoutPersonalInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  Out: OutCreateNestedManyWithoutLiveOutPersonalInput
}

input LiveOutPersonalMaxOrderByAggregateInput {
  id: SortOrder
  personalId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input LiveOutPersonalMinOrderByAggregateInput {
  id: SortOrder
  personalId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input LiveOutPersonalOrderByWithAggregationInput {
  id: SortOrder
  personalId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: LiveOutPersonalCountOrderByAggregateInput
  _max: LiveOutPersonalMaxOrderByAggregateInput
  _min: LiveOutPersonalMinOrderByAggregateInput
}

input LiveOutPersonalOrderByWithRelationInput {
  id: SortOrder
  personalId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  Personal: PersonalOrderByWithRelationInput
  Out: OutOrderByRelationAggregateInput
}

input LiveOutPersonalRelationFilter {
  is: LiveOutPersonalWhereInput
  isNot: LiveOutPersonalWhereInput
}

enum LiveOutPersonalScalarFieldEnum {
  id
  personalId
  createdAt
  updatedAt
}

input LiveOutPersonalScalarWhereWithAggregatesInput {
  AND: [LiveOutPersonalScalarWhereWithAggregatesInput!]
  OR: [LiveOutPersonalScalarWhereWithAggregatesInput!]
  NOT: [LiveOutPersonalScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  personalId: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input LiveOutPersonalUpdateInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneRequiredWithoutLiveOutPersonalNestedInput
  Out: OutUpdateManyWithoutLiveOutPersonalNestedInput
}

input LiveOutPersonalUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LiveOutPersonalUpdateOneWithoutOutNestedInput {
  create: LiveOutPersonalCreateWithoutOutInput
  connectOrCreate: LiveOutPersonalCreateOrConnectWithoutOutInput
  upsert: LiveOutPersonalUpsertWithoutOutInput
  disconnect: Boolean
  delete: Boolean
  connect: LiveOutPersonalWhereUniqueInput
  update: LiveOutPersonalUpdateWithoutOutInput
}

input LiveOutPersonalUpdateOneWithoutPersonalNestedInput {
  create: LiveOutPersonalCreateWithoutPersonalInput
  connectOrCreate: LiveOutPersonalCreateOrConnectWithoutPersonalInput
  upsert: LiveOutPersonalUpsertWithoutPersonalInput
  disconnect: Boolean
  delete: Boolean
  connect: LiveOutPersonalWhereUniqueInput
  update: LiveOutPersonalUpdateWithoutPersonalInput
}

input LiveOutPersonalUpdateWithoutOutInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneRequiredWithoutLiveOutPersonalNestedInput
}

input LiveOutPersonalUpdateWithoutPersonalInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Out: OutUpdateManyWithoutLiveOutPersonalNestedInput
}

input LiveOutPersonalUpsertWithoutOutInput {
  update: LiveOutPersonalUpdateWithoutOutInput!
  create: LiveOutPersonalCreateWithoutOutInput!
}

input LiveOutPersonalUpsertWithoutPersonalInput {
  update: LiveOutPersonalUpdateWithoutPersonalInput!
  create: LiveOutPersonalCreateWithoutPersonalInput!
}

input LiveOutPersonalWhereInput {
  AND: [LiveOutPersonalWhereInput!]
  OR: [LiveOutPersonalWhereInput!]
  NOT: [LiveOutPersonalWhereInput!]
  id: StringFilter
  personalId: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  Personal: PersonalWhereInput
  Out: OutListRelationFilter
}

input LiveOutPersonalWhereUniqueInput {
  id: String
  personalId: String
}

type LiveOutVenue {
  id: ID!
  Venue: Venue!
  venueId: String!
  Out(where: OutWhereInput, orderBy: [OutOrderByWithRelationInput!], cursor: OutWhereUniqueInput, take: Int, skip: Int, distinct: [OutScalarFieldEnum!]): [Out!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input LiveOutVenueCountOrderByAggregateInput {
  id: SortOrder
  venueId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input LiveOutVenueCreateInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  Venue: VenueCreateNestedOneWithoutLiveOutVenueInput!
  Out: OutCreateNestedManyWithoutLiveOutVenueInput
}

input LiveOutVenueCreateManyInput {
  id: String
  venueId: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input LiveOutVenueCreateNestedOneWithoutOutInput {
  create: LiveOutVenueCreateWithoutOutInput
  connectOrCreate: LiveOutVenueCreateOrConnectWithoutOutInput
  connect: LiveOutVenueWhereUniqueInput
}

input LiveOutVenueCreateNestedOneWithoutVenueInput {
  create: LiveOutVenueCreateWithoutVenueInput
  connectOrCreate: LiveOutVenueCreateOrConnectWithoutVenueInput
  connect: LiveOutVenueWhereUniqueInput
}

input LiveOutVenueCreateOrConnectWithoutOutInput {
  where: LiveOutVenueWhereUniqueInput!
  create: LiveOutVenueCreateWithoutOutInput!
}

input LiveOutVenueCreateOrConnectWithoutVenueInput {
  where: LiveOutVenueWhereUniqueInput!
  create: LiveOutVenueCreateWithoutVenueInput!
}

input LiveOutVenueCreateWithoutOutInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  Venue: VenueCreateNestedOneWithoutLiveOutVenueInput!
}

input LiveOutVenueCreateWithoutVenueInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  Out: OutCreateNestedManyWithoutLiveOutVenueInput
}

input LiveOutVenueMaxOrderByAggregateInput {
  id: SortOrder
  venueId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input LiveOutVenueMinOrderByAggregateInput {
  id: SortOrder
  venueId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input LiveOutVenueOrderByWithAggregationInput {
  id: SortOrder
  venueId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: LiveOutVenueCountOrderByAggregateInput
  _max: LiveOutVenueMaxOrderByAggregateInput
  _min: LiveOutVenueMinOrderByAggregateInput
}

input LiveOutVenueOrderByWithRelationInput {
  id: SortOrder
  venueId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  Venue: VenueOrderByWithRelationInput
  Out: OutOrderByRelationAggregateInput
}

input LiveOutVenueRelationFilter {
  is: LiveOutVenueWhereInput
  isNot: LiveOutVenueWhereInput
}

enum LiveOutVenueScalarFieldEnum {
  id
  venueId
  createdAt
  updatedAt
}

input LiveOutVenueScalarWhereWithAggregatesInput {
  AND: [LiveOutVenueScalarWhereWithAggregatesInput!]
  OR: [LiveOutVenueScalarWhereWithAggregatesInput!]
  NOT: [LiveOutVenueScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  venueId: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input LiveOutVenueUpdateInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Venue: VenueUpdateOneRequiredWithoutLiveOutVenueNestedInput
  Out: OutUpdateManyWithoutLiveOutVenueNestedInput
}

input LiveOutVenueUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LiveOutVenueUpdateOneWithoutOutNestedInput {
  create: LiveOutVenueCreateWithoutOutInput
  connectOrCreate: LiveOutVenueCreateOrConnectWithoutOutInput
  upsert: LiveOutVenueUpsertWithoutOutInput
  disconnect: Boolean
  delete: Boolean
  connect: LiveOutVenueWhereUniqueInput
  update: LiveOutVenueUpdateWithoutOutInput
}

input LiveOutVenueUpdateOneWithoutVenueNestedInput {
  create: LiveOutVenueCreateWithoutVenueInput
  connectOrCreate: LiveOutVenueCreateOrConnectWithoutVenueInput
  upsert: LiveOutVenueUpsertWithoutVenueInput
  disconnect: Boolean
  delete: Boolean
  connect: LiveOutVenueWhereUniqueInput
  update: LiveOutVenueUpdateWithoutVenueInput
}

input LiveOutVenueUpdateWithoutOutInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Venue: VenueUpdateOneRequiredWithoutLiveOutVenueNestedInput
}

input LiveOutVenueUpdateWithoutVenueInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Out: OutUpdateManyWithoutLiveOutVenueNestedInput
}

input LiveOutVenueUpsertWithoutOutInput {
  update: LiveOutVenueUpdateWithoutOutInput!
  create: LiveOutVenueCreateWithoutOutInput!
}

input LiveOutVenueUpsertWithoutVenueInput {
  update: LiveOutVenueUpdateWithoutVenueInput!
  create: LiveOutVenueCreateWithoutVenueInput!
}

input LiveOutVenueWhereInput {
  AND: [LiveOutVenueWhereInput!]
  OR: [LiveOutVenueWhereInput!]
  NOT: [LiveOutVenueWhereInput!]
  id: StringFilter
  venueId: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  Venue: VenueWhereInput
  Out: OutListRelationFilter
}

input LiveOutVenueWhereUniqueInput {
  id: String
  venueId: String
}

type LiveVenueTotals {
  totaled: [Out!]
  joined: [Out!]
}

type Location {
  id: ID!
  h3Index: String!
  Area: Area
  areaId: String
  plusCode: PluseCode
  pluseCodeId: String
  Address: Address
  addressId: String
  Geometry: Geometry
  geometryId: Int
  Venue: Venue
  venueId: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input LocationAvgOrderByAggregateInput {
  geometryId: SortOrder
}

input LocationCountOrderByAggregateInput {
  id: SortOrder
  h3Index: SortOrder
  areaId: SortOrder
  pluseCodeId: SortOrder
  addressId: SortOrder
  geometryId: SortOrder
  venueId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input LocationCreateInput {
  id: String
  h3Index: String!
  createdAt: DateTime
  updatedAt: DateTime
  Area: AreaCreateNestedOneWithoutLocationInput
  plusCode: PluseCodeCreateNestedOneWithoutLocationInput
  Address: AddressCreateNestedOneWithoutLocationInput
  Geometry: GeometryCreateNestedOneWithoutLocationInput
  Venue: VenueCreateNestedOneWithoutLocationInput
}

input LocationCreateManyAddressInput {
  id: String
  h3Index: String!
  areaId: String
  pluseCodeId: String
  geometryId: Int
  venueId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input LocationCreateManyAddressInputEnvelope {
  data: [LocationCreateManyAddressInput!]!
  skipDuplicates: Boolean
}

input LocationCreateManyInput {
  id: String
  h3Index: String!
  areaId: String
  pluseCodeId: String
  addressId: String
  geometryId: Int
  venueId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input LocationCreateNestedManyWithoutAddressInput {
  create: LocationCreateWithoutAddressInput
  connectOrCreate: [LocationCreateOrConnectWithoutAddressInput!]
  createMany: LocationCreateManyAddressInputEnvelope
  connect: [LocationWhereUniqueInput!]
}

input LocationCreateNestedOneWithoutAreaInput {
  create: LocationCreateWithoutAreaInput
  connectOrCreate: LocationCreateOrConnectWithoutAreaInput
  connect: LocationWhereUniqueInput
}

input LocationCreateNestedOneWithoutGeometryInput {
  create: LocationCreateWithoutGeometryInput
  connectOrCreate: LocationCreateOrConnectWithoutGeometryInput
  connect: LocationWhereUniqueInput
}

input LocationCreateNestedOneWithoutPlusCodeInput {
  create: LocationCreateWithoutPlusCodeInput
  connectOrCreate: LocationCreateOrConnectWithoutPlusCodeInput
  connect: LocationWhereUniqueInput
}

input LocationCreateNestedOneWithoutVenueInput {
  create: LocationCreateWithoutVenueInput
  connectOrCreate: LocationCreateOrConnectWithoutVenueInput
  connect: LocationWhereUniqueInput
}

input LocationCreateOrConnectWithoutAddressInput {
  where: LocationWhereUniqueInput!
  create: LocationCreateWithoutAddressInput!
}

input LocationCreateOrConnectWithoutAreaInput {
  where: LocationWhereUniqueInput!
  create: LocationCreateWithoutAreaInput!
}

input LocationCreateOrConnectWithoutGeometryInput {
  where: LocationWhereUniqueInput!
  create: LocationCreateWithoutGeometryInput!
}

input LocationCreateOrConnectWithoutPlusCodeInput {
  where: LocationWhereUniqueInput!
  create: LocationCreateWithoutPlusCodeInput!
}

input LocationCreateOrConnectWithoutVenueInput {
  where: LocationWhereUniqueInput!
  create: LocationCreateWithoutVenueInput!
}

input LocationCreateWithoutAddressInput {
  id: String
  h3Index: String!
  createdAt: DateTime
  updatedAt: DateTime
  Area: AreaCreateNestedOneWithoutLocationInput
  plusCode: PluseCodeCreateNestedOneWithoutLocationInput
  Geometry: GeometryCreateNestedOneWithoutLocationInput
  Venue: VenueCreateNestedOneWithoutLocationInput
}

input LocationCreateWithoutAreaInput {
  id: String
  h3Index: String!
  createdAt: DateTime
  updatedAt: DateTime
  plusCode: PluseCodeCreateNestedOneWithoutLocationInput
  Address: AddressCreateNestedOneWithoutLocationInput
  Geometry: GeometryCreateNestedOneWithoutLocationInput
  Venue: VenueCreateNestedOneWithoutLocationInput
}

input LocationCreateWithoutGeometryInput {
  id: String
  h3Index: String!
  createdAt: DateTime
  updatedAt: DateTime
  Area: AreaCreateNestedOneWithoutLocationInput
  plusCode: PluseCodeCreateNestedOneWithoutLocationInput
  Address: AddressCreateNestedOneWithoutLocationInput
  Venue: VenueCreateNestedOneWithoutLocationInput
}

input LocationCreateWithoutPlusCodeInput {
  id: String
  h3Index: String!
  createdAt: DateTime
  updatedAt: DateTime
  Area: AreaCreateNestedOneWithoutLocationInput
  Address: AddressCreateNestedOneWithoutLocationInput
  Geometry: GeometryCreateNestedOneWithoutLocationInput
  Venue: VenueCreateNestedOneWithoutLocationInput
}

input LocationCreateWithoutVenueInput {
  id: String
  h3Index: String!
  createdAt: DateTime
  updatedAt: DateTime
  Area: AreaCreateNestedOneWithoutLocationInput
  plusCode: PluseCodeCreateNestedOneWithoutLocationInput
  Address: AddressCreateNestedOneWithoutLocationInput
  Geometry: GeometryCreateNestedOneWithoutLocationInput
}

input LocationListRelationFilter {
  every: LocationWhereInput
  some: LocationWhereInput
  none: LocationWhereInput
}

input LocationMaxOrderByAggregateInput {
  id: SortOrder
  h3Index: SortOrder
  areaId: SortOrder
  pluseCodeId: SortOrder
  addressId: SortOrder
  geometryId: SortOrder
  venueId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input LocationMinOrderByAggregateInput {
  id: SortOrder
  h3Index: SortOrder
  areaId: SortOrder
  pluseCodeId: SortOrder
  addressId: SortOrder
  geometryId: SortOrder
  venueId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input LocationOrderByRelationAggregateInput {
  _count: SortOrder
}

input LocationOrderByWithAggregationInput {
  id: SortOrder
  h3Index: SortOrder
  areaId: SortOrder
  pluseCodeId: SortOrder
  addressId: SortOrder
  geometryId: SortOrder
  venueId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: LocationCountOrderByAggregateInput
  _avg: LocationAvgOrderByAggregateInput
  _max: LocationMaxOrderByAggregateInput
  _min: LocationMinOrderByAggregateInput
  _sum: LocationSumOrderByAggregateInput
}

input LocationOrderByWithRelationInput {
  id: SortOrder
  h3Index: SortOrder
  areaId: SortOrder
  pluseCodeId: SortOrder
  addressId: SortOrder
  geometryId: SortOrder
  venueId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  Area: AreaOrderByWithRelationInput
  plusCode: PluseCodeOrderByWithRelationInput
  Address: AddressOrderByWithRelationInput
  Geometry: GeometryOrderByWithRelationInput
  Venue: VenueOrderByWithRelationInput
}

input LocationRelationFilter {
  is: LocationWhereInput
  isNot: LocationWhereInput
}

enum LocationScalarFieldEnum {
  id
  h3Index
  areaId
  pluseCodeId
  addressId
  geometryId
  venueId
  createdAt
  updatedAt
}

input LocationScalarWhereInput {
  AND: [LocationScalarWhereInput!]
  OR: [LocationScalarWhereInput!]
  NOT: [LocationScalarWhereInput!]
  id: StringFilter
  h3Index: StringFilter
  areaId: StringNullableFilter
  pluseCodeId: StringNullableFilter
  addressId: StringNullableFilter
  geometryId: IntNullableFilter
  venueId: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input LocationScalarWhereWithAggregatesInput {
  AND: [LocationScalarWhereWithAggregatesInput!]
  OR: [LocationScalarWhereWithAggregatesInput!]
  NOT: [LocationScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  h3Index: StringWithAggregatesFilter
  areaId: StringNullableWithAggregatesFilter
  pluseCodeId: StringNullableWithAggregatesFilter
  addressId: StringNullableWithAggregatesFilter
  geometryId: IntNullableWithAggregatesFilter
  venueId: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input LocationSumOrderByAggregateInput {
  geometryId: SortOrder
}

input LocationUpdateInput {
  id: StringFieldUpdateOperationsInput
  h3Index: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Area: AreaUpdateOneWithoutLocationNestedInput
  plusCode: PluseCodeUpdateOneWithoutLocationNestedInput
  Address: AddressUpdateOneWithoutLocationNestedInput
  Geometry: GeometryUpdateOneWithoutLocationNestedInput
  Venue: VenueUpdateOneWithoutLocationNestedInput
}

input LocationUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  h3Index: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LocationUpdateManyWithWhereWithoutAddressInput {
  where: LocationScalarWhereInput!
  data: LocationUpdateManyMutationInput!
}

input LocationUpdateManyWithoutAddressNestedInput {
  create: LocationCreateWithoutAddressInput
  connectOrCreate: [LocationCreateOrConnectWithoutAddressInput!]
  upsert: [LocationUpsertWithWhereUniqueWithoutAddressInput!]
  createMany: LocationCreateManyAddressInputEnvelope
  set: [LocationWhereUniqueInput!]
  disconnect: [LocationWhereUniqueInput!]
  delete: [LocationWhereUniqueInput!]
  connect: [LocationWhereUniqueInput!]
  update: [LocationUpdateWithWhereUniqueWithoutAddressInput!]
  updateMany: [LocationUpdateManyWithWhereWithoutAddressInput!]
  deleteMany: [LocationScalarWhereInput!]
}

input LocationUpdateOneWithoutAreaNestedInput {
  create: LocationCreateWithoutAreaInput
  connectOrCreate: LocationCreateOrConnectWithoutAreaInput
  upsert: LocationUpsertWithoutAreaInput
  disconnect: Boolean
  delete: Boolean
  connect: LocationWhereUniqueInput
  update: LocationUpdateWithoutAreaInput
}

input LocationUpdateOneWithoutGeometryNestedInput {
  create: LocationCreateWithoutGeometryInput
  connectOrCreate: LocationCreateOrConnectWithoutGeometryInput
  upsert: LocationUpsertWithoutGeometryInput
  disconnect: Boolean
  delete: Boolean
  connect: LocationWhereUniqueInput
  update: LocationUpdateWithoutGeometryInput
}

input LocationUpdateOneWithoutPlusCodeNestedInput {
  create: LocationCreateWithoutPlusCodeInput
  connectOrCreate: LocationCreateOrConnectWithoutPlusCodeInput
  upsert: LocationUpsertWithoutPlusCodeInput
  disconnect: Boolean
  delete: Boolean
  connect: LocationWhereUniqueInput
  update: LocationUpdateWithoutPlusCodeInput
}

input LocationUpdateOneWithoutVenueNestedInput {
  create: LocationCreateWithoutVenueInput
  connectOrCreate: LocationCreateOrConnectWithoutVenueInput
  upsert: LocationUpsertWithoutVenueInput
  disconnect: Boolean
  delete: Boolean
  connect: LocationWhereUniqueInput
  update: LocationUpdateWithoutVenueInput
}

input LocationUpdateWithWhereUniqueWithoutAddressInput {
  where: LocationWhereUniqueInput!
  data: LocationUpdateWithoutAddressInput!
}

input LocationUpdateWithoutAddressInput {
  id: StringFieldUpdateOperationsInput
  h3Index: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Area: AreaUpdateOneWithoutLocationNestedInput
  plusCode: PluseCodeUpdateOneWithoutLocationNestedInput
  Geometry: GeometryUpdateOneWithoutLocationNestedInput
  Venue: VenueUpdateOneWithoutLocationNestedInput
}

input LocationUpdateWithoutAreaInput {
  id: StringFieldUpdateOperationsInput
  h3Index: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  plusCode: PluseCodeUpdateOneWithoutLocationNestedInput
  Address: AddressUpdateOneWithoutLocationNestedInput
  Geometry: GeometryUpdateOneWithoutLocationNestedInput
  Venue: VenueUpdateOneWithoutLocationNestedInput
}

input LocationUpdateWithoutGeometryInput {
  id: StringFieldUpdateOperationsInput
  h3Index: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Area: AreaUpdateOneWithoutLocationNestedInput
  plusCode: PluseCodeUpdateOneWithoutLocationNestedInput
  Address: AddressUpdateOneWithoutLocationNestedInput
  Venue: VenueUpdateOneWithoutLocationNestedInput
}

input LocationUpdateWithoutPlusCodeInput {
  id: StringFieldUpdateOperationsInput
  h3Index: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Area: AreaUpdateOneWithoutLocationNestedInput
  Address: AddressUpdateOneWithoutLocationNestedInput
  Geometry: GeometryUpdateOneWithoutLocationNestedInput
  Venue: VenueUpdateOneWithoutLocationNestedInput
}

input LocationUpdateWithoutVenueInput {
  id: StringFieldUpdateOperationsInput
  h3Index: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Area: AreaUpdateOneWithoutLocationNestedInput
  plusCode: PluseCodeUpdateOneWithoutLocationNestedInput
  Address: AddressUpdateOneWithoutLocationNestedInput
  Geometry: GeometryUpdateOneWithoutLocationNestedInput
}

input LocationUpsertWithWhereUniqueWithoutAddressInput {
  where: LocationWhereUniqueInput!
  update: LocationUpdateWithoutAddressInput!
  create: LocationCreateWithoutAddressInput!
}

input LocationUpsertWithoutAreaInput {
  update: LocationUpdateWithoutAreaInput!
  create: LocationCreateWithoutAreaInput!
}

input LocationUpsertWithoutGeometryInput {
  update: LocationUpdateWithoutGeometryInput!
  create: LocationCreateWithoutGeometryInput!
}

input LocationUpsertWithoutPlusCodeInput {
  update: LocationUpdateWithoutPlusCodeInput!
  create: LocationCreateWithoutPlusCodeInput!
}

input LocationUpsertWithoutVenueInput {
  update: LocationUpdateWithoutVenueInput!
  create: LocationCreateWithoutVenueInput!
}

input LocationWhereInput {
  AND: [LocationWhereInput!]
  OR: [LocationWhereInput!]
  NOT: [LocationWhereInput!]
  id: StringFilter
  h3Index: StringFilter
  areaId: StringNullableFilter
  pluseCodeId: StringNullableFilter
  addressId: StringNullableFilter
  geometryId: IntNullableFilter
  venueId: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  Area: AreaWhereInput
  plusCode: PluseCodeWhereInput
  Address: AddressWhereInput
  Geometry: GeometryWhereInput
  Venue: VenueWhereInput
}

input LocationWhereUniqueInput {
  id: String
  areaId: String
  pluseCodeId: String
  geometryId: Int
  venueId: String
}

input MessageCountOrderByAggregateInput {
  id: SortOrder
  message: SortOrder
  chatroomId: SortOrder
  responseId: SortOrder
  senderId: SortOrder
}

input MessageCreateInput {
  id: String
  message: String!
  senderId: String!
  Chatroom: ChatroomCreateNestedOneWithoutMessagesInput
  responses: MessageCreateNestedManyWithoutResponseInput
  response: MessageCreateNestedOneWithoutResponsesInput
}

input MessageCreateManyChatroomInput {
  id: String
  message: String!
  responseId: String
  senderId: String!
}

input MessageCreateManyChatroomInputEnvelope {
  data: [MessageCreateManyChatroomInput!]!
  skipDuplicates: Boolean
}

input MessageCreateManyInput {
  id: String
  message: String!
  chatroomId: String
  responseId: String
  senderId: String!
}

input MessageCreateManyResponseInput {
  id: String
  message: String!
  chatroomId: String
  senderId: String!
}

input MessageCreateManyResponseInputEnvelope {
  data: [MessageCreateManyResponseInput!]!
  skipDuplicates: Boolean
}

input MessageCreateNestedManyWithoutChatroomInput {
  create: MessageCreateWithoutChatroomInput
  connectOrCreate: [MessageCreateOrConnectWithoutChatroomInput!]
  createMany: MessageCreateManyChatroomInputEnvelope
  connect: [MessageWhereUniqueInput!]
}

input MessageCreateNestedManyWithoutResponseInput {
  create: MessageCreateWithoutResponseInput
  connectOrCreate: [MessageCreateOrConnectWithoutResponseInput!]
  createMany: MessageCreateManyResponseInputEnvelope
  connect: [MessageWhereUniqueInput!]
}

input MessageCreateNestedOneWithoutResponsesInput {
  create: MessageCreateWithoutResponsesInput
  connectOrCreate: MessageCreateOrConnectWithoutResponsesInput
  connect: MessageWhereUniqueInput
}

input MessageCreateOrConnectWithoutChatroomInput {
  where: MessageWhereUniqueInput!
  create: MessageCreateWithoutChatroomInput!
}

input MessageCreateOrConnectWithoutResponseInput {
  where: MessageWhereUniqueInput!
  create: MessageCreateWithoutResponseInput!
}

input MessageCreateOrConnectWithoutResponsesInput {
  where: MessageWhereUniqueInput!
  create: MessageCreateWithoutResponsesInput!
}

input MessageCreateWithoutChatroomInput {
  id: String
  message: String!
  senderId: String!
  responses: MessageCreateNestedManyWithoutResponseInput
  response: MessageCreateNestedOneWithoutResponsesInput
}

input MessageCreateWithoutResponseInput {
  id: String
  message: String!
  senderId: String!
  Chatroom: ChatroomCreateNestedOneWithoutMessagesInput
  responses: MessageCreateNestedManyWithoutResponseInput
}

input MessageCreateWithoutResponsesInput {
  id: String
  message: String!
  senderId: String!
  Chatroom: ChatroomCreateNestedOneWithoutMessagesInput
  response: MessageCreateNestedOneWithoutResponsesInput
}

input MessageListRelationFilter {
  every: MessageWhereInput
  some: MessageWhereInput
  none: MessageWhereInput
}

input MessageMaxOrderByAggregateInput {
  id: SortOrder
  message: SortOrder
  chatroomId: SortOrder
  responseId: SortOrder
  senderId: SortOrder
}

input MessageMinOrderByAggregateInput {
  id: SortOrder
  message: SortOrder
  chatroomId: SortOrder
  responseId: SortOrder
  senderId: SortOrder
}

input MessageOrderByRelationAggregateInput {
  _count: SortOrder
}

input MessageOrderByWithAggregationInput {
  id: SortOrder
  message: SortOrder
  chatroomId: SortOrder
  responseId: SortOrder
  senderId: SortOrder
  _count: MessageCountOrderByAggregateInput
  _max: MessageMaxOrderByAggregateInput
  _min: MessageMinOrderByAggregateInput
}

input MessageOrderByWithRelationInput {
  id: SortOrder
  message: SortOrder
  chatroomId: SortOrder
  responseId: SortOrder
  senderId: SortOrder
  Chatroom: ChatroomOrderByWithRelationInput
  responses: MessageOrderByRelationAggregateInput
  response: MessageOrderByWithRelationInput
}

input MessageRelationFilter {
  is: MessageWhereInput
  isNot: MessageWhereInput
}

enum MessageScalarFieldEnum {
  id
  message
  chatroomId
  responseId
  senderId
}

input MessageScalarWhereInput {
  AND: [MessageScalarWhereInput!]
  OR: [MessageScalarWhereInput!]
  NOT: [MessageScalarWhereInput!]
  id: StringFilter
  message: StringFilter
  chatroomId: StringNullableFilter
  responseId: StringNullableFilter
  senderId: StringFilter
}

input MessageScalarWhereWithAggregatesInput {
  AND: [MessageScalarWhereWithAggregatesInput!]
  OR: [MessageScalarWhereWithAggregatesInput!]
  NOT: [MessageScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  message: StringWithAggregatesFilter
  chatroomId: StringNullableWithAggregatesFilter
  responseId: StringNullableWithAggregatesFilter
  senderId: StringWithAggregatesFilter
}

input MessageUpdateInput {
  id: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  senderId: StringFieldUpdateOperationsInput
  Chatroom: ChatroomUpdateOneWithoutMessagesNestedInput
  responses: MessageUpdateManyWithoutResponseNestedInput
  response: MessageUpdateOneWithoutResponsesNestedInput
}

input MessageUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  senderId: StringFieldUpdateOperationsInput
}

input MessageUpdateManyWithWhereWithoutChatroomInput {
  where: MessageScalarWhereInput!
  data: MessageUpdateManyMutationInput!
}

input MessageUpdateManyWithWhereWithoutResponseInput {
  where: MessageScalarWhereInput!
  data: MessageUpdateManyMutationInput!
}

input MessageUpdateManyWithoutChatroomNestedInput {
  create: MessageCreateWithoutChatroomInput
  connectOrCreate: [MessageCreateOrConnectWithoutChatroomInput!]
  upsert: [MessageUpsertWithWhereUniqueWithoutChatroomInput!]
  createMany: MessageCreateManyChatroomInputEnvelope
  set: [MessageWhereUniqueInput!]
  disconnect: [MessageWhereUniqueInput!]
  delete: [MessageWhereUniqueInput!]
  connect: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueWithoutChatroomInput!]
  updateMany: [MessageUpdateManyWithWhereWithoutChatroomInput!]
  deleteMany: [MessageScalarWhereInput!]
}

input MessageUpdateManyWithoutResponseNestedInput {
  create: MessageCreateWithoutResponseInput
  connectOrCreate: [MessageCreateOrConnectWithoutResponseInput!]
  upsert: [MessageUpsertWithWhereUniqueWithoutResponseInput!]
  createMany: MessageCreateManyResponseInputEnvelope
  set: [MessageWhereUniqueInput!]
  disconnect: [MessageWhereUniqueInput!]
  delete: [MessageWhereUniqueInput!]
  connect: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueWithoutResponseInput!]
  updateMany: [MessageUpdateManyWithWhereWithoutResponseInput!]
  deleteMany: [MessageScalarWhereInput!]
}

input MessageUpdateOneWithoutResponsesNestedInput {
  create: MessageCreateWithoutResponsesInput
  connectOrCreate: MessageCreateOrConnectWithoutResponsesInput
  upsert: MessageUpsertWithoutResponsesInput
  disconnect: Boolean
  delete: Boolean
  connect: MessageWhereUniqueInput
  update: MessageUpdateWithoutResponsesInput
}

input MessageUpdateWithWhereUniqueWithoutChatroomInput {
  where: MessageWhereUniqueInput!
  data: MessageUpdateWithoutChatroomInput!
}

input MessageUpdateWithWhereUniqueWithoutResponseInput {
  where: MessageWhereUniqueInput!
  data: MessageUpdateWithoutResponseInput!
}

input MessageUpdateWithoutChatroomInput {
  id: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  senderId: StringFieldUpdateOperationsInput
  responses: MessageUpdateManyWithoutResponseNestedInput
  response: MessageUpdateOneWithoutResponsesNestedInput
}

input MessageUpdateWithoutResponseInput {
  id: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  senderId: StringFieldUpdateOperationsInput
  Chatroom: ChatroomUpdateOneWithoutMessagesNestedInput
  responses: MessageUpdateManyWithoutResponseNestedInput
}

input MessageUpdateWithoutResponsesInput {
  id: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  senderId: StringFieldUpdateOperationsInput
  Chatroom: ChatroomUpdateOneWithoutMessagesNestedInput
  response: MessageUpdateOneWithoutResponsesNestedInput
}

input MessageUpsertWithWhereUniqueWithoutChatroomInput {
  where: MessageWhereUniqueInput!
  update: MessageUpdateWithoutChatroomInput!
  create: MessageCreateWithoutChatroomInput!
}

input MessageUpsertWithWhereUniqueWithoutResponseInput {
  where: MessageWhereUniqueInput!
  update: MessageUpdateWithoutResponseInput!
  create: MessageCreateWithoutResponseInput!
}

input MessageUpsertWithoutResponsesInput {
  update: MessageUpdateWithoutResponsesInput!
  create: MessageCreateWithoutResponsesInput!
}

input MessageWhereInput {
  AND: [MessageWhereInput!]
  OR: [MessageWhereInput!]
  NOT: [MessageWhereInput!]
  id: StringFilter
  message: StringFilter
  chatroomId: StringNullableFilter
  responseId: StringNullableFilter
  senderId: StringFilter
  Chatroom: ChatroomWhereInput
  responses: MessageListRelationFilter
  response: MessageWhereInput
}

input MessageWhereUniqueInput {
  id: String
}

type Mutation {
  checkThePink: Boolean!
  sendAuthenticatorDeviceOwnerCode(where: CustomCodeWhereInput, data: CodeDataInput): CodeResponse!
  sendAuthenticatorForgotPasswordCode(where: CustomCodeWhereInput, data: CodeDataInput): CodeResponse!
  createFriendRequest(senderProfileId: String!, receiversProfileId: [String!]!): Boolean!
  deleteFriendRequest(friendRequestId: String!): Boolean!
  removeFriend(relationshipId: String!): Boolean!
  acceptFriendRequest(venueIdMetAt: String, friendRequestId: String!): Relationship!
  declineFriendRequest(friendRequestId: String!): Boolean!
  qrAddFriend(qrCodeProfileId: String!, dataHash: String!): Relationship!
  addPersonalTotalsVenue(profileIdVenue: String, profileIdPersonal: String): Boolean!
  removePersonalTotalsVenue(profileIdVenue: String, profileIdPersonal: String): Boolean!
  removeAllFromVenue(profileIdVenue: String): Boolean!
  addPersonalJoinsVenue(profileIdVenue: String, profileIdPersonal: String): Profile!
  removePersonalJoinsVenue(outId: String!): Profile!
  upvoteH6ComingArea(comingAreaId: String!): Boolean!
  upvoteH6VenueRemmendation(venueRecommendationId: String!): Boolean!
  createGuestProfile: ProfileResponseUnion!
  createVenueProfile(data: CreateVenueDataInput): ProfileResponseUnion!
  createPersonalProfile(data: CreatePersonalDataInput): ProfileResponseUnion!
  updateProfileIdentifiableInformation(data: IdentifiableInformationUpdateInput!): ProfileResponseUnion!
  updateOneProfile(where: ProfileWhereUniqueInput!, data: ProfileUpdateInput!): Profile
  updateStoryPhotos(storyId: String, photos: PhotoCreateManyProfileInputEnvelope, disconnectId: String): Boolean!
  updateStoryEmojimood(storyId: String, emojimoodId: Int!): Boolean!
  updateThemeManagerSwitchTheme(id: String!, themeId: String!): ProfileTheme!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedBoolNullableWithAggregatesFilter {
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedBoolNullableFilter
  _max: NestedBoolNullableFilter
}

input NestedBoolWithAggregatesFilter {
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedBoolFilter
  _max: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableFilter
}

input NestedDateTimeNullableWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedDateTimeNullableFilter
  _max: NestedDateTimeNullableFilter
}

input NestedDateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedDateTimeFilter
  _max: NestedDateTimeFilter
}

input NestedEnumOutTypeFilter {
  equals: OutType
  in: [OutType!]
  notIn: [OutType!]
  not: OutType
}

input NestedEnumOutTypeWithAggregatesFilter {
  equals: OutType
  in: [OutType!]
  notIn: [OutType!]
  not: OutType
  _count: NestedIntFilter
  _min: NestedEnumOutTypeFilter
  _max: NestedEnumOutTypeFilter
}

input NestedEnumPhotoTypeNullableFilter {
  equals: PhotoType
  in: [PhotoType!]
  notIn: [PhotoType!]
  not: PhotoType
}

input NestedEnumPhotoTypeNullableWithAggregatesFilter {
  equals: PhotoType
  in: [PhotoType!]
  notIn: [PhotoType!]
  not: PhotoType
  _count: NestedIntNullableFilter
  _min: NestedEnumPhotoTypeNullableFilter
  _max: NestedEnumPhotoTypeNullableFilter
}

input NestedEnumProfileTypeFilter {
  equals: ProfileType
  in: [ProfileType!]
  notIn: [ProfileType!]
  not: ProfileType
}

input NestedEnumProfileTypeWithAggregatesFilter {
  equals: ProfileType
  in: [ProfileType!]
  notIn: [ProfileType!]
  not: ProfileType
  _count: NestedIntFilter
  _min: NestedEnumProfileTypeFilter
  _max: NestedEnumProfileTypeFilter
}

input NestedEnumSecureDataTypeFilter {
  equals: SecureDataType
  in: [SecureDataType!]
  notIn: [SecureDataType!]
  not: SecureDataType
}

input NestedEnumSecureDataTypeWithAggregatesFilter {
  equals: SecureDataType
  in: [SecureDataType!]
  notIn: [SecureDataType!]
  not: SecureDataType
  _count: NestedIntFilter
  _min: NestedEnumSecureDataTypeFilter
  _max: NestedEnumSecureDataTypeFilter
}

input NestedEnumTypeOfDocumentFilter {
  equals: TypeOfDocument
  in: [TypeOfDocument!]
  notIn: [TypeOfDocument!]
  not: TypeOfDocument
}

input NestedEnumTypeOfDocumentWithAggregatesFilter {
  equals: TypeOfDocument
  in: [TypeOfDocument!]
  notIn: [TypeOfDocument!]
  not: TypeOfDocument
  _count: NestedIntFilter
  _min: NestedEnumTypeOfDocumentFilter
  _max: NestedEnumTypeOfDocumentFilter
}

input NestedFloatFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatFilter
}

input NestedFloatNullableFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatNullableFilter
}

input NestedFloatWithAggregatesFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatWithAggregatesFilter
  _count: NestedIntFilter
  _avg: NestedFloatFilter
  _sum: NestedFloatFilter
  _min: NestedFloatFilter
  _max: NestedFloatFilter
}

input NestedIntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input NestedIntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input NestedIntNullableWithAggregatesFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _avg: NestedFloatNullableFilter
  _sum: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _max: NestedIntNullableFilter
}

input NestedIntWithAggregatesFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntWithAggregatesFilter
  _count: NestedIntFilter
  _avg: NestedFloatFilter
  _sum: NestedIntFilter
  _min: NestedIntFilter
  _max: NestedIntFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input NestedStringNullableWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedStringNullableFilter
  _max: NestedStringNullableFilter
}

input NestedStringWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedStringFilter
  _max: NestedStringFilter
}

union NotificationFriendRequestStatusResponse = ErrorProfiling | RejectedFriendsResponse | FriendRequest | Relationship

type NotificationResponse {
  friendRequestNotifications: [FriendRequest!]
}

type NotificationStatus {
  id: ID!
  FriendRequest: FriendRequest
  isAccepted: Boolean!
  isChecked: Boolean!
  isAnswered: Boolean!
  isCanceled: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input NotificationStatusCountOrderByAggregateInput {
  id: SortOrder
  isAccepted: SortOrder
  isChecked: SortOrder
  isAnswered: SortOrder
  isCanceled: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input NotificationStatusCreateInput {
  id: String
  isAccepted: Boolean
  isChecked: Boolean
  isAnswered: Boolean
  isCanceled: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  FriendRequest: FriendRequestCreateNestedOneWithoutNotificationStatusInput
}

input NotificationStatusCreateManyInput {
  id: String
  isAccepted: Boolean
  isChecked: Boolean
  isAnswered: Boolean
  isCanceled: Boolean
  createdAt: DateTime
  updatedAt: DateTime
}

input NotificationStatusCreateNestedOneWithoutFriendRequestInput {
  create: NotificationStatusCreateWithoutFriendRequestInput
  connectOrCreate: NotificationStatusCreateOrConnectWithoutFriendRequestInput
  connect: NotificationStatusWhereUniqueInput
}

input NotificationStatusCreateOrConnectWithoutFriendRequestInput {
  where: NotificationStatusWhereUniqueInput!
  create: NotificationStatusCreateWithoutFriendRequestInput!
}

input NotificationStatusCreateWithoutFriendRequestInput {
  id: String
  isAccepted: Boolean
  isChecked: Boolean
  isAnswered: Boolean
  isCanceled: Boolean
  createdAt: DateTime
  updatedAt: DateTime
}

input NotificationStatusMaxOrderByAggregateInput {
  id: SortOrder
  isAccepted: SortOrder
  isChecked: SortOrder
  isAnswered: SortOrder
  isCanceled: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input NotificationStatusMinOrderByAggregateInput {
  id: SortOrder
  isAccepted: SortOrder
  isChecked: SortOrder
  isAnswered: SortOrder
  isCanceled: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input NotificationStatusOrderByWithAggregationInput {
  id: SortOrder
  isAccepted: SortOrder
  isChecked: SortOrder
  isAnswered: SortOrder
  isCanceled: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: NotificationStatusCountOrderByAggregateInput
  _max: NotificationStatusMaxOrderByAggregateInput
  _min: NotificationStatusMinOrderByAggregateInput
}

input NotificationStatusOrderByWithRelationInput {
  id: SortOrder
  isAccepted: SortOrder
  isChecked: SortOrder
  isAnswered: SortOrder
  isCanceled: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  FriendRequest: FriendRequestOrderByWithRelationInput
}

input NotificationStatusRelationFilter {
  is: NotificationStatusWhereInput
  isNot: NotificationStatusWhereInput
}

enum NotificationStatusScalarFieldEnum {
  id
  isAccepted
  isChecked
  isAnswered
  isCanceled
  createdAt
  updatedAt
}

input NotificationStatusScalarWhereWithAggregatesInput {
  AND: [NotificationStatusScalarWhereWithAggregatesInput!]
  OR: [NotificationStatusScalarWhereWithAggregatesInput!]
  NOT: [NotificationStatusScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  isAccepted: BoolWithAggregatesFilter
  isChecked: BoolWithAggregatesFilter
  isAnswered: BoolWithAggregatesFilter
  isCanceled: BoolWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input NotificationStatusUpdateInput {
  id: StringFieldUpdateOperationsInput
  isAccepted: BoolFieldUpdateOperationsInput
  isChecked: BoolFieldUpdateOperationsInput
  isAnswered: BoolFieldUpdateOperationsInput
  isCanceled: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  FriendRequest: FriendRequestUpdateOneWithoutNotificationStatusNestedInput
}

input NotificationStatusUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  isAccepted: BoolFieldUpdateOperationsInput
  isChecked: BoolFieldUpdateOperationsInput
  isAnswered: BoolFieldUpdateOperationsInput
  isCanceled: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input NotificationStatusUpdateOneRequiredWithoutFriendRequestNestedInput {
  create: NotificationStatusCreateWithoutFriendRequestInput
  connectOrCreate: NotificationStatusCreateOrConnectWithoutFriendRequestInput
  upsert: NotificationStatusUpsertWithoutFriendRequestInput
  connect: NotificationStatusWhereUniqueInput
  update: NotificationStatusUpdateWithoutFriendRequestInput
}

input NotificationStatusUpdateWithoutFriendRequestInput {
  id: StringFieldUpdateOperationsInput
  isAccepted: BoolFieldUpdateOperationsInput
  isChecked: BoolFieldUpdateOperationsInput
  isAnswered: BoolFieldUpdateOperationsInput
  isCanceled: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input NotificationStatusUpsertWithoutFriendRequestInput {
  update: NotificationStatusUpdateWithoutFriendRequestInput!
  create: NotificationStatusCreateWithoutFriendRequestInput!
}

input NotificationStatusWhereInput {
  AND: [NotificationStatusWhereInput!]
  OR: [NotificationStatusWhereInput!]
  NOT: [NotificationStatusWhereInput!]
  id: StringFilter
  isAccepted: BoolFilter
  isChecked: BoolFilter
  isAnswered: BoolFilter
  isCanceled: BoolFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  FriendRequest: FriendRequestWhereInput
}

input NotificationStatusWhereUniqueInput {
  id: String
}

type Notifications {
  id: ID!
  Profile: Profile!
  profileId: String!
  FriendRequests(where: FriendRequestWhereInput, orderBy: [FriendRequestOrderByWithRelationInput!], cursor: FriendRequestWhereUniqueInput, take: Int, skip: Int, distinct: [FriendRequestScalarFieldEnum!]): [FriendRequest!]!
}

input NotificationsCountOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
}

input NotificationsCreateInput {
  id: String
  Profile: ProfileCreateNestedOneWithoutNotificationsInput!
  FriendRequests: FriendRequestCreateNestedManyWithoutNotificationsInput
}

input NotificationsCreateManyInput {
  id: String
  profileId: String!
}

input NotificationsCreateNestedManyWithoutFriendRequestsInput {
  create: NotificationsCreateWithoutFriendRequestsInput
  connectOrCreate: [NotificationsCreateOrConnectWithoutFriendRequestsInput!]
  connect: [NotificationsWhereUniqueInput!]
}

input NotificationsCreateNestedOneWithoutProfileInput {
  create: NotificationsCreateWithoutProfileInput
  connectOrCreate: NotificationsCreateOrConnectWithoutProfileInput
  connect: NotificationsWhereUniqueInput
}

input NotificationsCreateOrConnectWithoutFriendRequestsInput {
  where: NotificationsWhereUniqueInput!
  create: NotificationsCreateWithoutFriendRequestsInput!
}

input NotificationsCreateOrConnectWithoutProfileInput {
  where: NotificationsWhereUniqueInput!
  create: NotificationsCreateWithoutProfileInput!
}

input NotificationsCreateWithoutFriendRequestsInput {
  id: String
  Profile: ProfileCreateNestedOneWithoutNotificationsInput!
}

input NotificationsCreateWithoutProfileInput {
  id: String
  FriendRequests: FriendRequestCreateNestedManyWithoutNotificationsInput
}

input NotificationsListRelationFilter {
  every: NotificationsWhereInput
  some: NotificationsWhereInput
  none: NotificationsWhereInput
}

input NotificationsMaxOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
}

input NotificationsMinOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
}

input NotificationsOrderByRelationAggregateInput {
  _count: SortOrder
}

input NotificationsOrderByWithAggregationInput {
  id: SortOrder
  profileId: SortOrder
  _count: NotificationsCountOrderByAggregateInput
  _max: NotificationsMaxOrderByAggregateInput
  _min: NotificationsMinOrderByAggregateInput
}

input NotificationsOrderByWithRelationInput {
  id: SortOrder
  profileId: SortOrder
  Profile: ProfileOrderByWithRelationInput
  FriendRequests: FriendRequestOrderByRelationAggregateInput
}

input NotificationsRelationFilter {
  is: NotificationsWhereInput
  isNot: NotificationsWhereInput
}

enum NotificationsScalarFieldEnum {
  id
  profileId
}

input NotificationsScalarWhereInput {
  AND: [NotificationsScalarWhereInput!]
  OR: [NotificationsScalarWhereInput!]
  NOT: [NotificationsScalarWhereInput!]
  id: StringFilter
  profileId: StringFilter
}

input NotificationsScalarWhereWithAggregatesInput {
  AND: [NotificationsScalarWhereWithAggregatesInput!]
  OR: [NotificationsScalarWhereWithAggregatesInput!]
  NOT: [NotificationsScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  profileId: StringWithAggregatesFilter
}

input NotificationsUpdateInput {
  id: StringFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutNotificationsNestedInput
  FriendRequests: FriendRequestUpdateManyWithoutNotificationsNestedInput
}

input NotificationsUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input NotificationsUpdateManyWithWhereWithoutFriendRequestsInput {
  where: NotificationsScalarWhereInput!
  data: NotificationsUpdateManyMutationInput!
}

input NotificationsUpdateManyWithoutFriendRequestsNestedInput {
  create: NotificationsCreateWithoutFriendRequestsInput
  connectOrCreate: [NotificationsCreateOrConnectWithoutFriendRequestsInput!]
  upsert: [NotificationsUpsertWithWhereUniqueWithoutFriendRequestsInput!]
  set: [NotificationsWhereUniqueInput!]
  disconnect: [NotificationsWhereUniqueInput!]
  delete: [NotificationsWhereUniqueInput!]
  connect: [NotificationsWhereUniqueInput!]
  update: [NotificationsUpdateWithWhereUniqueWithoutFriendRequestsInput!]
  updateMany: [NotificationsUpdateManyWithWhereWithoutFriendRequestsInput!]
  deleteMany: [NotificationsScalarWhereInput!]
}

input NotificationsUpdateOneWithoutProfileNestedInput {
  create: NotificationsCreateWithoutProfileInput
  connectOrCreate: NotificationsCreateOrConnectWithoutProfileInput
  upsert: NotificationsUpsertWithoutProfileInput
  disconnect: Boolean
  delete: Boolean
  connect: NotificationsWhereUniqueInput
  update: NotificationsUpdateWithoutProfileInput
}

input NotificationsUpdateWithWhereUniqueWithoutFriendRequestsInput {
  where: NotificationsWhereUniqueInput!
  data: NotificationsUpdateWithoutFriendRequestsInput!
}

input NotificationsUpdateWithoutFriendRequestsInput {
  id: StringFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutNotificationsNestedInput
}

input NotificationsUpdateWithoutProfileInput {
  id: StringFieldUpdateOperationsInput
  FriendRequests: FriendRequestUpdateManyWithoutNotificationsNestedInput
}

input NotificationsUpsertWithWhereUniqueWithoutFriendRequestsInput {
  where: NotificationsWhereUniqueInput!
  update: NotificationsUpdateWithoutFriendRequestsInput!
  create: NotificationsCreateWithoutFriendRequestsInput!
}

input NotificationsUpsertWithoutProfileInput {
  update: NotificationsUpdateWithoutProfileInput!
  create: NotificationsCreateWithoutProfileInput!
}

input NotificationsWhereInput {
  AND: [NotificationsWhereInput!]
  OR: [NotificationsWhereInput!]
  NOT: [NotificationsWhereInput!]
  id: StringFilter
  profileId: StringFilter
  Profile: ProfileWhereInput
  FriendRequests: FriendRequestListRelationFilter
}

input NotificationsWhereUniqueInput {
  id: String
  profileId: String
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableEnumPhotoTypeFieldUpdateOperationsInput {
  set: PhotoType
}

input NullableIntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Out {
  id: ID!
  type: OutType!
  personalProfileId: String!
  venueProfileId: String!
  VenueStats: VenueStats
  venueStatsId: String
  PersonalStats: PersonalStats
  personalStatsId: String
  LiveOutVenue: LiveOutVenue
  liveOutVenueId: String
  leftAt: DateTime
  LiveOutPersonal: LiveOutPersonal
  liveOutPersonalId: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input OutCountOrderByAggregateInput {
  id: SortOrder
  type: SortOrder
  personalProfileId: SortOrder
  venueProfileId: SortOrder
  venueStatsId: SortOrder
  personalStatsId: SortOrder
  liveOutVenueId: SortOrder
  leftAt: SortOrder
  liveOutPersonalId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input OutCreateInput {
  id: String
  type: OutType!
  personalProfileId: String!
  venueProfileId: String!
  leftAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  VenueStats: VenueStatsCreateNestedOneWithoutOutInput
  PersonalStats: PersonalStatsCreateNestedOneWithoutOutInput
  LiveOutVenue: LiveOutVenueCreateNestedOneWithoutOutInput
  LiveOutPersonal: LiveOutPersonalCreateNestedOneWithoutOutInput
}

input OutCreateManyInput {
  id: String
  type: OutType!
  personalProfileId: String!
  venueProfileId: String!
  venueStatsId: String
  personalStatsId: String
  liveOutVenueId: String
  leftAt: DateTime
  liveOutPersonalId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input OutCreateManyLiveOutPersonalInput {
  id: String
  type: OutType!
  personalProfileId: String!
  venueProfileId: String!
  venueStatsId: String
  personalStatsId: String
  liveOutVenueId: String
  leftAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
}

input OutCreateManyLiveOutPersonalInputEnvelope {
  data: [OutCreateManyLiveOutPersonalInput!]!
  skipDuplicates: Boolean
}

input OutCreateManyLiveOutVenueInput {
  id: String
  type: OutType!
  personalProfileId: String!
  venueProfileId: String!
  venueStatsId: String
  personalStatsId: String
  leftAt: DateTime
  liveOutPersonalId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input OutCreateManyLiveOutVenueInputEnvelope {
  data: [OutCreateManyLiveOutVenueInput!]!
  skipDuplicates: Boolean
}

input OutCreateManyPersonalStatsInput {
  id: String
  type: OutType!
  personalProfileId: String!
  venueProfileId: String!
  venueStatsId: String
  liveOutVenueId: String
  leftAt: DateTime
  liveOutPersonalId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input OutCreateManyPersonalStatsInputEnvelope {
  data: [OutCreateManyPersonalStatsInput!]!
  skipDuplicates: Boolean
}

input OutCreateManyVenueStatsInput {
  id: String
  type: OutType!
  personalProfileId: String!
  venueProfileId: String!
  personalStatsId: String
  liveOutVenueId: String
  leftAt: DateTime
  liveOutPersonalId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input OutCreateManyVenueStatsInputEnvelope {
  data: [OutCreateManyVenueStatsInput!]!
  skipDuplicates: Boolean
}

input OutCreateNestedManyWithoutLiveOutPersonalInput {
  create: OutCreateWithoutLiveOutPersonalInput
  connectOrCreate: [OutCreateOrConnectWithoutLiveOutPersonalInput!]
  createMany: OutCreateManyLiveOutPersonalInputEnvelope
  connect: [OutWhereUniqueInput!]
}

input OutCreateNestedManyWithoutLiveOutVenueInput {
  create: OutCreateWithoutLiveOutVenueInput
  connectOrCreate: [OutCreateOrConnectWithoutLiveOutVenueInput!]
  createMany: OutCreateManyLiveOutVenueInputEnvelope
  connect: [OutWhereUniqueInput!]
}

input OutCreateNestedManyWithoutPersonalStatsInput {
  create: OutCreateWithoutPersonalStatsInput
  connectOrCreate: [OutCreateOrConnectWithoutPersonalStatsInput!]
  createMany: OutCreateManyPersonalStatsInputEnvelope
  connect: [OutWhereUniqueInput!]
}

input OutCreateNestedManyWithoutVenueStatsInput {
  create: OutCreateWithoutVenueStatsInput
  connectOrCreate: [OutCreateOrConnectWithoutVenueStatsInput!]
  createMany: OutCreateManyVenueStatsInputEnvelope
  connect: [OutWhereUniqueInput!]
}

input OutCreateOrConnectWithoutLiveOutPersonalInput {
  where: OutWhereUniqueInput!
  create: OutCreateWithoutLiveOutPersonalInput!
}

input OutCreateOrConnectWithoutLiveOutVenueInput {
  where: OutWhereUniqueInput!
  create: OutCreateWithoutLiveOutVenueInput!
}

input OutCreateOrConnectWithoutPersonalStatsInput {
  where: OutWhereUniqueInput!
  create: OutCreateWithoutPersonalStatsInput!
}

input OutCreateOrConnectWithoutVenueStatsInput {
  where: OutWhereUniqueInput!
  create: OutCreateWithoutVenueStatsInput!
}

input OutCreateWithoutLiveOutPersonalInput {
  id: String
  type: OutType!
  personalProfileId: String!
  venueProfileId: String!
  leftAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  VenueStats: VenueStatsCreateNestedOneWithoutOutInput
  PersonalStats: PersonalStatsCreateNestedOneWithoutOutInput
  LiveOutVenue: LiveOutVenueCreateNestedOneWithoutOutInput
}

input OutCreateWithoutLiveOutVenueInput {
  id: String
  type: OutType!
  personalProfileId: String!
  venueProfileId: String!
  leftAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  VenueStats: VenueStatsCreateNestedOneWithoutOutInput
  PersonalStats: PersonalStatsCreateNestedOneWithoutOutInput
  LiveOutPersonal: LiveOutPersonalCreateNestedOneWithoutOutInput
}

input OutCreateWithoutPersonalStatsInput {
  id: String
  type: OutType!
  personalProfileId: String!
  venueProfileId: String!
  leftAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  VenueStats: VenueStatsCreateNestedOneWithoutOutInput
  LiveOutVenue: LiveOutVenueCreateNestedOneWithoutOutInput
  LiveOutPersonal: LiveOutPersonalCreateNestedOneWithoutOutInput
}

input OutCreateWithoutVenueStatsInput {
  id: String
  type: OutType!
  personalProfileId: String!
  venueProfileId: String!
  leftAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  PersonalStats: PersonalStatsCreateNestedOneWithoutOutInput
  LiveOutVenue: LiveOutVenueCreateNestedOneWithoutOutInput
  LiveOutPersonal: LiveOutPersonalCreateNestedOneWithoutOutInput
}

input OutListRelationFilter {
  every: OutWhereInput
  some: OutWhereInput
  none: OutWhereInput
}

input OutMaxOrderByAggregateInput {
  id: SortOrder
  type: SortOrder
  personalProfileId: SortOrder
  venueProfileId: SortOrder
  venueStatsId: SortOrder
  personalStatsId: SortOrder
  liveOutVenueId: SortOrder
  leftAt: SortOrder
  liveOutPersonalId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input OutMinOrderByAggregateInput {
  id: SortOrder
  type: SortOrder
  personalProfileId: SortOrder
  venueProfileId: SortOrder
  venueStatsId: SortOrder
  personalStatsId: SortOrder
  liveOutVenueId: SortOrder
  leftAt: SortOrder
  liveOutPersonalId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input OutOrderByRelationAggregateInput {
  _count: SortOrder
}

input OutOrderByWithAggregationInput {
  id: SortOrder
  type: SortOrder
  personalProfileId: SortOrder
  venueProfileId: SortOrder
  venueStatsId: SortOrder
  personalStatsId: SortOrder
  liveOutVenueId: SortOrder
  leftAt: SortOrder
  liveOutPersonalId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: OutCountOrderByAggregateInput
  _max: OutMaxOrderByAggregateInput
  _min: OutMinOrderByAggregateInput
}

input OutOrderByWithRelationInput {
  id: SortOrder
  type: SortOrder
  personalProfileId: SortOrder
  venueProfileId: SortOrder
  venueStatsId: SortOrder
  personalStatsId: SortOrder
  liveOutVenueId: SortOrder
  leftAt: SortOrder
  liveOutPersonalId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  VenueStats: VenueStatsOrderByWithRelationInput
  PersonalStats: PersonalStatsOrderByWithRelationInput
  LiveOutVenue: LiveOutVenueOrderByWithRelationInput
  LiveOutPersonal: LiveOutPersonalOrderByWithRelationInput
}

enum OutScalarFieldEnum {
  id
  type
  personalProfileId
  venueProfileId
  venueStatsId
  personalStatsId
  liveOutVenueId
  leftAt
  liveOutPersonalId
  createdAt
  updatedAt
}

input OutScalarWhereInput {
  AND: [OutScalarWhereInput!]
  OR: [OutScalarWhereInput!]
  NOT: [OutScalarWhereInput!]
  id: StringFilter
  type: EnumOutTypeFilter
  personalProfileId: StringFilter
  venueProfileId: StringFilter
  venueStatsId: StringNullableFilter
  personalStatsId: StringNullableFilter
  liveOutVenueId: StringNullableFilter
  leftAt: DateTimeNullableFilter
  liveOutPersonalId: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input OutScalarWhereWithAggregatesInput {
  AND: [OutScalarWhereWithAggregatesInput!]
  OR: [OutScalarWhereWithAggregatesInput!]
  NOT: [OutScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  type: EnumOutTypeWithAggregatesFilter
  personalProfileId: StringWithAggregatesFilter
  venueProfileId: StringWithAggregatesFilter
  venueStatsId: StringNullableWithAggregatesFilter
  personalStatsId: StringNullableWithAggregatesFilter
  liveOutVenueId: StringNullableWithAggregatesFilter
  leftAt: DateTimeNullableWithAggregatesFilter
  liveOutPersonalId: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

enum OutType {
  TOTAL
  JOIN
}

input OutUpdateInput {
  id: StringFieldUpdateOperationsInput
  type: EnumOutTypeFieldUpdateOperationsInput
  personalProfileId: StringFieldUpdateOperationsInput
  venueProfileId: StringFieldUpdateOperationsInput
  leftAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  VenueStats: VenueStatsUpdateOneWithoutOutNestedInput
  PersonalStats: PersonalStatsUpdateOneWithoutOutNestedInput
  LiveOutVenue: LiveOutVenueUpdateOneWithoutOutNestedInput
  LiveOutPersonal: LiveOutPersonalUpdateOneWithoutOutNestedInput
}

input OutUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  type: EnumOutTypeFieldUpdateOperationsInput
  personalProfileId: StringFieldUpdateOperationsInput
  venueProfileId: StringFieldUpdateOperationsInput
  leftAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OutUpdateManyWithWhereWithoutLiveOutPersonalInput {
  where: OutScalarWhereInput!
  data: OutUpdateManyMutationInput!
}

input OutUpdateManyWithWhereWithoutLiveOutVenueInput {
  where: OutScalarWhereInput!
  data: OutUpdateManyMutationInput!
}

input OutUpdateManyWithWhereWithoutPersonalStatsInput {
  where: OutScalarWhereInput!
  data: OutUpdateManyMutationInput!
}

input OutUpdateManyWithWhereWithoutVenueStatsInput {
  where: OutScalarWhereInput!
  data: OutUpdateManyMutationInput!
}

input OutUpdateManyWithoutLiveOutPersonalNestedInput {
  create: OutCreateWithoutLiveOutPersonalInput
  connectOrCreate: [OutCreateOrConnectWithoutLiveOutPersonalInput!]
  upsert: [OutUpsertWithWhereUniqueWithoutLiveOutPersonalInput!]
  createMany: OutCreateManyLiveOutPersonalInputEnvelope
  set: [OutWhereUniqueInput!]
  disconnect: [OutWhereUniqueInput!]
  delete: [OutWhereUniqueInput!]
  connect: [OutWhereUniqueInput!]
  update: [OutUpdateWithWhereUniqueWithoutLiveOutPersonalInput!]
  updateMany: [OutUpdateManyWithWhereWithoutLiveOutPersonalInput!]
  deleteMany: [OutScalarWhereInput!]
}

input OutUpdateManyWithoutLiveOutVenueNestedInput {
  create: OutCreateWithoutLiveOutVenueInput
  connectOrCreate: [OutCreateOrConnectWithoutLiveOutVenueInput!]
  upsert: [OutUpsertWithWhereUniqueWithoutLiveOutVenueInput!]
  createMany: OutCreateManyLiveOutVenueInputEnvelope
  set: [OutWhereUniqueInput!]
  disconnect: [OutWhereUniqueInput!]
  delete: [OutWhereUniqueInput!]
  connect: [OutWhereUniqueInput!]
  update: [OutUpdateWithWhereUniqueWithoutLiveOutVenueInput!]
  updateMany: [OutUpdateManyWithWhereWithoutLiveOutVenueInput!]
  deleteMany: [OutScalarWhereInput!]
}

input OutUpdateManyWithoutPersonalStatsNestedInput {
  create: OutCreateWithoutPersonalStatsInput
  connectOrCreate: [OutCreateOrConnectWithoutPersonalStatsInput!]
  upsert: [OutUpsertWithWhereUniqueWithoutPersonalStatsInput!]
  createMany: OutCreateManyPersonalStatsInputEnvelope
  set: [OutWhereUniqueInput!]
  disconnect: [OutWhereUniqueInput!]
  delete: [OutWhereUniqueInput!]
  connect: [OutWhereUniqueInput!]
  update: [OutUpdateWithWhereUniqueWithoutPersonalStatsInput!]
  updateMany: [OutUpdateManyWithWhereWithoutPersonalStatsInput!]
  deleteMany: [OutScalarWhereInput!]
}

input OutUpdateManyWithoutVenueStatsNestedInput {
  create: OutCreateWithoutVenueStatsInput
  connectOrCreate: [OutCreateOrConnectWithoutVenueStatsInput!]
  upsert: [OutUpsertWithWhereUniqueWithoutVenueStatsInput!]
  createMany: OutCreateManyVenueStatsInputEnvelope
  set: [OutWhereUniqueInput!]
  disconnect: [OutWhereUniqueInput!]
  delete: [OutWhereUniqueInput!]
  connect: [OutWhereUniqueInput!]
  update: [OutUpdateWithWhereUniqueWithoutVenueStatsInput!]
  updateMany: [OutUpdateManyWithWhereWithoutVenueStatsInput!]
  deleteMany: [OutScalarWhereInput!]
}

input OutUpdateWithWhereUniqueWithoutLiveOutPersonalInput {
  where: OutWhereUniqueInput!
  data: OutUpdateWithoutLiveOutPersonalInput!
}

input OutUpdateWithWhereUniqueWithoutLiveOutVenueInput {
  where: OutWhereUniqueInput!
  data: OutUpdateWithoutLiveOutVenueInput!
}

input OutUpdateWithWhereUniqueWithoutPersonalStatsInput {
  where: OutWhereUniqueInput!
  data: OutUpdateWithoutPersonalStatsInput!
}

input OutUpdateWithWhereUniqueWithoutVenueStatsInput {
  where: OutWhereUniqueInput!
  data: OutUpdateWithoutVenueStatsInput!
}

input OutUpdateWithoutLiveOutPersonalInput {
  id: StringFieldUpdateOperationsInput
  type: EnumOutTypeFieldUpdateOperationsInput
  personalProfileId: StringFieldUpdateOperationsInput
  venueProfileId: StringFieldUpdateOperationsInput
  leftAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  VenueStats: VenueStatsUpdateOneWithoutOutNestedInput
  PersonalStats: PersonalStatsUpdateOneWithoutOutNestedInput
  LiveOutVenue: LiveOutVenueUpdateOneWithoutOutNestedInput
}

input OutUpdateWithoutLiveOutVenueInput {
  id: StringFieldUpdateOperationsInput
  type: EnumOutTypeFieldUpdateOperationsInput
  personalProfileId: StringFieldUpdateOperationsInput
  venueProfileId: StringFieldUpdateOperationsInput
  leftAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  VenueStats: VenueStatsUpdateOneWithoutOutNestedInput
  PersonalStats: PersonalStatsUpdateOneWithoutOutNestedInput
  LiveOutPersonal: LiveOutPersonalUpdateOneWithoutOutNestedInput
}

input OutUpdateWithoutPersonalStatsInput {
  id: StringFieldUpdateOperationsInput
  type: EnumOutTypeFieldUpdateOperationsInput
  personalProfileId: StringFieldUpdateOperationsInput
  venueProfileId: StringFieldUpdateOperationsInput
  leftAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  VenueStats: VenueStatsUpdateOneWithoutOutNestedInput
  LiveOutVenue: LiveOutVenueUpdateOneWithoutOutNestedInput
  LiveOutPersonal: LiveOutPersonalUpdateOneWithoutOutNestedInput
}

input OutUpdateWithoutVenueStatsInput {
  id: StringFieldUpdateOperationsInput
  type: EnumOutTypeFieldUpdateOperationsInput
  personalProfileId: StringFieldUpdateOperationsInput
  venueProfileId: StringFieldUpdateOperationsInput
  leftAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  PersonalStats: PersonalStatsUpdateOneWithoutOutNestedInput
  LiveOutVenue: LiveOutVenueUpdateOneWithoutOutNestedInput
  LiveOutPersonal: LiveOutPersonalUpdateOneWithoutOutNestedInput
}

input OutUpsertWithWhereUniqueWithoutLiveOutPersonalInput {
  where: OutWhereUniqueInput!
  update: OutUpdateWithoutLiveOutPersonalInput!
  create: OutCreateWithoutLiveOutPersonalInput!
}

input OutUpsertWithWhereUniqueWithoutLiveOutVenueInput {
  where: OutWhereUniqueInput!
  update: OutUpdateWithoutLiveOutVenueInput!
  create: OutCreateWithoutLiveOutVenueInput!
}

input OutUpsertWithWhereUniqueWithoutPersonalStatsInput {
  where: OutWhereUniqueInput!
  update: OutUpdateWithoutPersonalStatsInput!
  create: OutCreateWithoutPersonalStatsInput!
}

input OutUpsertWithWhereUniqueWithoutVenueStatsInput {
  where: OutWhereUniqueInput!
  update: OutUpdateWithoutVenueStatsInput!
  create: OutCreateWithoutVenueStatsInput!
}

input OutWhereInput {
  AND: [OutWhereInput!]
  OR: [OutWhereInput!]
  NOT: [OutWhereInput!]
  id: StringFilter
  type: EnumOutTypeFilter
  personalProfileId: StringFilter
  venueProfileId: StringFilter
  venueStatsId: StringNullableFilter
  personalStatsId: StringNullableFilter
  liveOutVenueId: StringNullableFilter
  leftAt: DateTimeNullableFilter
  liveOutPersonalId: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  VenueStats: VenueStatsWhereInput
  PersonalStats: PersonalStatsWhereInput
  LiveOutVenue: LiveOutVenueWhereInput
  LiveOutPersonal: LiveOutPersonalWhereInput
}

input OutWhereUniqueInput {
  id: String
}

type Password {
  id: ID!
  password: String!
  AuthenticationProvider: AuthenticationProvider!
  authenitcationProviderId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input PasswordCountOrderByAggregateInput {
  id: SortOrder
  password: SortOrder
  authenitcationProviderId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PasswordCreateInput {
  id: String
  password: String!
  createdAt: DateTime
  updatedAt: DateTime
  AuthenticationProvider: AuthenticationProviderCreateNestedOneWithoutPasswordInput!
}

input PasswordCreateManyInput {
  id: String
  password: String!
  authenitcationProviderId: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input PasswordCreateNestedOneWithoutAuthenticationProviderInput {
  create: PasswordCreateWithoutAuthenticationProviderInput
  connectOrCreate: PasswordCreateOrConnectWithoutAuthenticationProviderInput
  connect: PasswordWhereUniqueInput
}

input PasswordCreateOrConnectWithoutAuthenticationProviderInput {
  where: PasswordWhereUniqueInput!
  create: PasswordCreateWithoutAuthenticationProviderInput!
}

input PasswordCreateWithoutAuthenticationProviderInput {
  id: String
  password: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input PasswordMaxOrderByAggregateInput {
  id: SortOrder
  password: SortOrder
  authenitcationProviderId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PasswordMinOrderByAggregateInput {
  id: SortOrder
  password: SortOrder
  authenitcationProviderId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PasswordOrderByWithAggregationInput {
  id: SortOrder
  password: SortOrder
  authenitcationProviderId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: PasswordCountOrderByAggregateInput
  _max: PasswordMaxOrderByAggregateInput
  _min: PasswordMinOrderByAggregateInput
}

input PasswordOrderByWithRelationInput {
  id: SortOrder
  password: SortOrder
  authenitcationProviderId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  AuthenticationProvider: AuthenticationProviderOrderByWithRelationInput
}

input PasswordRelationFilter {
  is: PasswordWhereInput
  isNot: PasswordWhereInput
}

enum PasswordScalarFieldEnum {
  id
  password
  authenitcationProviderId
  createdAt
  updatedAt
}

input PasswordScalarWhereWithAggregatesInput {
  AND: [PasswordScalarWhereWithAggregatesInput!]
  OR: [PasswordScalarWhereWithAggregatesInput!]
  NOT: [PasswordScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  password: StringWithAggregatesFilter
  authenitcationProviderId: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input PasswordUpdateInput {
  id: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  AuthenticationProvider: AuthenticationProviderUpdateOneRequiredWithoutPasswordNestedInput
}

input PasswordUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PasswordUpdateOneWithoutAuthenticationProviderNestedInput {
  create: PasswordCreateWithoutAuthenticationProviderInput
  connectOrCreate: PasswordCreateOrConnectWithoutAuthenticationProviderInput
  upsert: PasswordUpsertWithoutAuthenticationProviderInput
  disconnect: Boolean
  delete: Boolean
  connect: PasswordWhereUniqueInput
  update: PasswordUpdateWithoutAuthenticationProviderInput
}

input PasswordUpdateWithoutAuthenticationProviderInput {
  id: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PasswordUpsertWithoutAuthenticationProviderInput {
  update: PasswordUpdateWithoutAuthenticationProviderInput!
  create: PasswordCreateWithoutAuthenticationProviderInput!
}

input PasswordWhereInput {
  AND: [PasswordWhereInput!]
  OR: [PasswordWhereInput!]
  NOT: [PasswordWhereInput!]
  id: StringFilter
  password: StringFilter
  authenitcationProviderId: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  AuthenticationProvider: AuthenticationProviderWhereInput
}

input PasswordWhereUniqueInput {
  id: String
  authenitcationProviderId: String
}

input PathAvgOrderByAggregateInput {
  latitude: SortOrder
  longitude: SortOrder
}

input PathCountOrderByAggregateInput {
  id: SortOrder
  TonightPathId: SortOrder
  latitude: SortOrder
  longitude: SortOrder
  createdAt: SortOrder
}

input PathCreateInput {
  id: String
  latitude: Float!
  longitude: Float!
  createdAt: DateTime
  TonightPath: TonightPathCreateNestedOneWithoutPathInput
}

input PathCreateManyInput {
  id: String
  TonightPathId: String
  latitude: Float!
  longitude: Float!
  createdAt: DateTime
}

input PathCreateManyTonightPathInput {
  id: String
  latitude: Float!
  longitude: Float!
  createdAt: DateTime
}

input PathCreateManyTonightPathInputEnvelope {
  data: [PathCreateManyTonightPathInput!]!
  skipDuplicates: Boolean
}

input PathCreateNestedManyWithoutTonightPathInput {
  create: PathCreateWithoutTonightPathInput
  connectOrCreate: [PathCreateOrConnectWithoutTonightPathInput!]
  createMany: PathCreateManyTonightPathInputEnvelope
  connect: [PathWhereUniqueInput!]
}

input PathCreateOrConnectWithoutTonightPathInput {
  where: PathWhereUniqueInput!
  create: PathCreateWithoutTonightPathInput!
}

input PathCreateWithoutTonightPathInput {
  id: String
  latitude: Float!
  longitude: Float!
  createdAt: DateTime
}

input PathListRelationFilter {
  every: PathWhereInput
  some: PathWhereInput
  none: PathWhereInput
}

input PathMaxOrderByAggregateInput {
  id: SortOrder
  TonightPathId: SortOrder
  latitude: SortOrder
  longitude: SortOrder
  createdAt: SortOrder
}

input PathMinOrderByAggregateInput {
  id: SortOrder
  TonightPathId: SortOrder
  latitude: SortOrder
  longitude: SortOrder
  createdAt: SortOrder
}

input PathOrderByRelationAggregateInput {
  _count: SortOrder
}

input PathOrderByWithAggregationInput {
  id: SortOrder
  TonightPathId: SortOrder
  latitude: SortOrder
  longitude: SortOrder
  createdAt: SortOrder
  _count: PathCountOrderByAggregateInput
  _avg: PathAvgOrderByAggregateInput
  _max: PathMaxOrderByAggregateInput
  _min: PathMinOrderByAggregateInput
  _sum: PathSumOrderByAggregateInput
}

input PathOrderByWithRelationInput {
  id: SortOrder
  TonightPathId: SortOrder
  latitude: SortOrder
  longitude: SortOrder
  createdAt: SortOrder
  TonightPath: TonightPathOrderByWithRelationInput
}

enum PathScalarFieldEnum {
  id
  TonightPathId
  latitude
  longitude
  createdAt
}

input PathScalarWhereInput {
  AND: [PathScalarWhereInput!]
  OR: [PathScalarWhereInput!]
  NOT: [PathScalarWhereInput!]
  id: StringFilter
  TonightPathId: StringNullableFilter
  latitude: FloatFilter
  longitude: FloatFilter
  createdAt: DateTimeFilter
}

input PathScalarWhereWithAggregatesInput {
  AND: [PathScalarWhereWithAggregatesInput!]
  OR: [PathScalarWhereWithAggregatesInput!]
  NOT: [PathScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  TonightPathId: StringNullableWithAggregatesFilter
  latitude: FloatWithAggregatesFilter
  longitude: FloatWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
}

input PathSumOrderByAggregateInput {
  latitude: SortOrder
  longitude: SortOrder
}

input PathUpdateInput {
  id: StringFieldUpdateOperationsInput
  latitude: FloatFieldUpdateOperationsInput
  longitude: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  TonightPath: TonightPathUpdateOneWithoutPathNestedInput
}

input PathUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  latitude: FloatFieldUpdateOperationsInput
  longitude: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}

input PathUpdateManyWithWhereWithoutTonightPathInput {
  where: PathScalarWhereInput!
  data: PathUpdateManyMutationInput!
}

input PathUpdateManyWithoutTonightPathNestedInput {
  create: PathCreateWithoutTonightPathInput
  connectOrCreate: [PathCreateOrConnectWithoutTonightPathInput!]
  upsert: [PathUpsertWithWhereUniqueWithoutTonightPathInput!]
  createMany: PathCreateManyTonightPathInputEnvelope
  set: [PathWhereUniqueInput!]
  disconnect: [PathWhereUniqueInput!]
  delete: [PathWhereUniqueInput!]
  connect: [PathWhereUniqueInput!]
  update: [PathUpdateWithWhereUniqueWithoutTonightPathInput!]
  updateMany: [PathUpdateManyWithWhereWithoutTonightPathInput!]
  deleteMany: [PathScalarWhereInput!]
}

input PathUpdateWithWhereUniqueWithoutTonightPathInput {
  where: PathWhereUniqueInput!
  data: PathUpdateWithoutTonightPathInput!
}

input PathUpdateWithoutTonightPathInput {
  id: StringFieldUpdateOperationsInput
  latitude: FloatFieldUpdateOperationsInput
  longitude: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}

input PathUpsertWithWhereUniqueWithoutTonightPathInput {
  where: PathWhereUniqueInput!
  update: PathUpdateWithoutTonightPathInput!
  create: PathCreateWithoutTonightPathInput!
}

input PathWhereInput {
  AND: [PathWhereInput!]
  OR: [PathWhereInput!]
  NOT: [PathWhereInput!]
  id: StringFilter
  TonightPathId: StringNullableFilter
  latitude: FloatFilter
  longitude: FloatFilter
  createdAt: DateTimeFilter
  TonightPath: TonightPathWhereInput
}

input PathWhereUniqueInput {
  id: String
}

enum Permission {
  OWNER
  ADMINISTATOR
  GENERAL
}

type Personal {
  id: ID!
  Profile: Profile!
  profileId: String!
  PersonalStats: PersonalStats
  personalStatsId: String
  LiveOutPersonal: LiveOutPersonal
  createdAt: DateTime!
  updatedAt: DateTime!
}

input PersonalCountOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  personalStatsId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PersonalCreateInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  Profile: ProfileCreateNestedOneWithoutPersonalInput!
  PersonalStats: PersonalStatsCreateNestedOneWithoutPersonalInput
  LiveOutPersonal: LiveOutPersonalCreateNestedOneWithoutPersonalInput
}

input PersonalCreateManyInput {
  id: String
  profileId: String!
  personalStatsId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input PersonalCreateNestedOneWithoutLiveOutPersonalInput {
  create: PersonalCreateWithoutLiveOutPersonalInput
  connectOrCreate: PersonalCreateOrConnectWithoutLiveOutPersonalInput
  connect: PersonalWhereUniqueInput
}

input PersonalCreateNestedOneWithoutPersonalStatsInput {
  create: PersonalCreateWithoutPersonalStatsInput
  connectOrCreate: PersonalCreateOrConnectWithoutPersonalStatsInput
  connect: PersonalWhereUniqueInput
}

input PersonalCreateNestedOneWithoutProfileInput {
  create: PersonalCreateWithoutProfileInput
  connectOrCreate: PersonalCreateOrConnectWithoutProfileInput
  connect: PersonalWhereUniqueInput
}

input PersonalCreateOrConnectWithoutLiveOutPersonalInput {
  where: PersonalWhereUniqueInput!
  create: PersonalCreateWithoutLiveOutPersonalInput!
}

input PersonalCreateOrConnectWithoutPersonalStatsInput {
  where: PersonalWhereUniqueInput!
  create: PersonalCreateWithoutPersonalStatsInput!
}

input PersonalCreateOrConnectWithoutProfileInput {
  where: PersonalWhereUniqueInput!
  create: PersonalCreateWithoutProfileInput!
}

input PersonalCreateWithoutLiveOutPersonalInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  Profile: ProfileCreateNestedOneWithoutPersonalInput!
  PersonalStats: PersonalStatsCreateNestedOneWithoutPersonalInput
}

input PersonalCreateWithoutPersonalStatsInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  Profile: ProfileCreateNestedOneWithoutPersonalInput!
  LiveOutPersonal: LiveOutPersonalCreateNestedOneWithoutPersonalInput
}

input PersonalCreateWithoutProfileInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  PersonalStats: PersonalStatsCreateNestedOneWithoutPersonalInput
  LiveOutPersonal: LiveOutPersonalCreateNestedOneWithoutPersonalInput
}

input PersonalMaxOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  personalStatsId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PersonalMinOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  personalStatsId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PersonalOrderByWithAggregationInput {
  id: SortOrder
  profileId: SortOrder
  personalStatsId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: PersonalCountOrderByAggregateInput
  _max: PersonalMaxOrderByAggregateInput
  _min: PersonalMinOrderByAggregateInput
}

input PersonalOrderByWithRelationInput {
  id: SortOrder
  profileId: SortOrder
  personalStatsId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  Profile: ProfileOrderByWithRelationInput
  PersonalStats: PersonalStatsOrderByWithRelationInput
  LiveOutPersonal: LiveOutPersonalOrderByWithRelationInput
}

input PersonalRelationFilter {
  is: PersonalWhereInput
  isNot: PersonalWhereInput
}

enum PersonalScalarFieldEnum {
  id
  profileId
  personalStatsId
  createdAt
  updatedAt
}

input PersonalScalarWhereWithAggregatesInput {
  AND: [PersonalScalarWhereWithAggregatesInput!]
  OR: [PersonalScalarWhereWithAggregatesInput!]
  NOT: [PersonalScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  personalStatsId: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type PersonalStats {
  id: ID!
  Personal: Personal
  Out(where: OutWhereInput, orderBy: [OutOrderByWithRelationInput!], cursor: OutWhereUniqueInput, take: Int, skip: Int, distinct: [OutScalarFieldEnum!]): [Out!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input PersonalStatsCountOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PersonalStatsCreateInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutPersonalStatsInput
  Out: OutCreateNestedManyWithoutPersonalStatsInput
}

input PersonalStatsCreateManyInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
}

input PersonalStatsCreateNestedOneWithoutOutInput {
  create: PersonalStatsCreateWithoutOutInput
  connectOrCreate: PersonalStatsCreateOrConnectWithoutOutInput
  connect: PersonalStatsWhereUniqueInput
}

input PersonalStatsCreateNestedOneWithoutPersonalInput {
  create: PersonalStatsCreateWithoutPersonalInput
  connectOrCreate: PersonalStatsCreateOrConnectWithoutPersonalInput
  connect: PersonalStatsWhereUniqueInput
}

input PersonalStatsCreateOrConnectWithoutOutInput {
  where: PersonalStatsWhereUniqueInput!
  create: PersonalStatsCreateWithoutOutInput!
}

input PersonalStatsCreateOrConnectWithoutPersonalInput {
  where: PersonalStatsWhereUniqueInput!
  create: PersonalStatsCreateWithoutPersonalInput!
}

input PersonalStatsCreateWithoutOutInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutPersonalStatsInput
}

input PersonalStatsCreateWithoutPersonalInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  Out: OutCreateNestedManyWithoutPersonalStatsInput
}

input PersonalStatsMaxOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PersonalStatsMinOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PersonalStatsOrderByWithAggregationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: PersonalStatsCountOrderByAggregateInput
  _max: PersonalStatsMaxOrderByAggregateInput
  _min: PersonalStatsMinOrderByAggregateInput
}

input PersonalStatsOrderByWithRelationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  Personal: PersonalOrderByWithRelationInput
  Out: OutOrderByRelationAggregateInput
}

input PersonalStatsRelationFilter {
  is: PersonalStatsWhereInput
  isNot: PersonalStatsWhereInput
}

enum PersonalStatsScalarFieldEnum {
  id
  createdAt
  updatedAt
}

input PersonalStatsScalarWhereWithAggregatesInput {
  AND: [PersonalStatsScalarWhereWithAggregatesInput!]
  OR: [PersonalStatsScalarWhereWithAggregatesInput!]
  NOT: [PersonalStatsScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input PersonalStatsUpdateInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutPersonalStatsNestedInput
  Out: OutUpdateManyWithoutPersonalStatsNestedInput
}

input PersonalStatsUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonalStatsUpdateOneWithoutOutNestedInput {
  create: PersonalStatsCreateWithoutOutInput
  connectOrCreate: PersonalStatsCreateOrConnectWithoutOutInput
  upsert: PersonalStatsUpsertWithoutOutInput
  disconnect: Boolean
  delete: Boolean
  connect: PersonalStatsWhereUniqueInput
  update: PersonalStatsUpdateWithoutOutInput
}

input PersonalStatsUpdateOneWithoutPersonalNestedInput {
  create: PersonalStatsCreateWithoutPersonalInput
  connectOrCreate: PersonalStatsCreateOrConnectWithoutPersonalInput
  upsert: PersonalStatsUpsertWithoutPersonalInput
  disconnect: Boolean
  delete: Boolean
  connect: PersonalStatsWhereUniqueInput
  update: PersonalStatsUpdateWithoutPersonalInput
}

input PersonalStatsUpdateWithoutOutInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutPersonalStatsNestedInput
}

input PersonalStatsUpdateWithoutPersonalInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Out: OutUpdateManyWithoutPersonalStatsNestedInput
}

input PersonalStatsUpsertWithoutOutInput {
  update: PersonalStatsUpdateWithoutOutInput!
  create: PersonalStatsCreateWithoutOutInput!
}

input PersonalStatsUpsertWithoutPersonalInput {
  update: PersonalStatsUpdateWithoutPersonalInput!
  create: PersonalStatsCreateWithoutPersonalInput!
}

input PersonalStatsWhereInput {
  AND: [PersonalStatsWhereInput!]
  OR: [PersonalStatsWhereInput!]
  NOT: [PersonalStatsWhereInput!]
  id: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  Personal: PersonalWhereInput
  Out: OutListRelationFilter
}

input PersonalStatsWhereUniqueInput {
  id: String
}

input PersonalUpdateInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutPersonalNestedInput
  PersonalStats: PersonalStatsUpdateOneWithoutPersonalNestedInput
  LiveOutPersonal: LiveOutPersonalUpdateOneWithoutPersonalNestedInput
}

input PersonalUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonalUpdateOneRequiredWithoutLiveOutPersonalNestedInput {
  create: PersonalCreateWithoutLiveOutPersonalInput
  connectOrCreate: PersonalCreateOrConnectWithoutLiveOutPersonalInput
  upsert: PersonalUpsertWithoutLiveOutPersonalInput
  connect: PersonalWhereUniqueInput
  update: PersonalUpdateWithoutLiveOutPersonalInput
}

input PersonalUpdateOneWithoutPersonalStatsNestedInput {
  create: PersonalCreateWithoutPersonalStatsInput
  connectOrCreate: PersonalCreateOrConnectWithoutPersonalStatsInput
  upsert: PersonalUpsertWithoutPersonalStatsInput
  disconnect: Boolean
  delete: Boolean
  connect: PersonalWhereUniqueInput
  update: PersonalUpdateWithoutPersonalStatsInput
}

input PersonalUpdateOneWithoutProfileNestedInput {
  create: PersonalCreateWithoutProfileInput
  connectOrCreate: PersonalCreateOrConnectWithoutProfileInput
  upsert: PersonalUpsertWithoutProfileInput
  disconnect: Boolean
  delete: Boolean
  connect: PersonalWhereUniqueInput
  update: PersonalUpdateWithoutProfileInput
}

input PersonalUpdateWithoutLiveOutPersonalInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutPersonalNestedInput
  PersonalStats: PersonalStatsUpdateOneWithoutPersonalNestedInput
}

input PersonalUpdateWithoutPersonalStatsInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutPersonalNestedInput
  LiveOutPersonal: LiveOutPersonalUpdateOneWithoutPersonalNestedInput
}

input PersonalUpdateWithoutProfileInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  PersonalStats: PersonalStatsUpdateOneWithoutPersonalNestedInput
  LiveOutPersonal: LiveOutPersonalUpdateOneWithoutPersonalNestedInput
}

input PersonalUpsertWithoutLiveOutPersonalInput {
  update: PersonalUpdateWithoutLiveOutPersonalInput!
  create: PersonalCreateWithoutLiveOutPersonalInput!
}

input PersonalUpsertWithoutPersonalStatsInput {
  update: PersonalUpdateWithoutPersonalStatsInput!
  create: PersonalCreateWithoutPersonalStatsInput!
}

input PersonalUpsertWithoutProfileInput {
  update: PersonalUpdateWithoutProfileInput!
  create: PersonalCreateWithoutProfileInput!
}

input PersonalWhereInput {
  AND: [PersonalWhereInput!]
  OR: [PersonalWhereInput!]
  NOT: [PersonalWhereInput!]
  id: StringFilter
  profileId: StringFilter
  personalStatsId: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  Profile: ProfileWhereInput
  PersonalStats: PersonalStatsWhereInput
  LiveOutPersonal: LiveOutPersonalWhereInput
}

input PersonalWhereUniqueInput {
  id: String
  profileId: String
  personalStatsId: String
}

type Phone {
  id: ID!
  number: String!
  completeNumber: String
  countryCode: String
  canUseAsRecovery: Boolean
  countryCallingCode: String
  AuthenticationProvider(where: AuthenticationProviderWhereInput, orderBy: [AuthenticationProviderOrderByWithRelationInput!], cursor: AuthenticationProviderWhereUniqueInput, take: Int, skip: Int, distinct: [AuthenticationProviderScalarFieldEnum!]): [AuthenticationProvider!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input PhoneAvgOrderByAggregateInput {
  id: SortOrder
}

input PhoneCountOrderByAggregateInput {
  id: SortOrder
  number: SortOrder
  completeNumber: SortOrder
  countryCode: SortOrder
  canUseAsRecovery: SortOrder
  countryCallingCode: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PhoneCreateInput {
  number: String!
  completeNumber: String
  countryCode: String
  canUseAsRecovery: Boolean
  countryCallingCode: String
  createdAt: DateTime
  updatedAt: DateTime
  AuthenticationProvider: AuthenticationProviderCreateNestedManyWithoutPhonesInput
}

input PhoneCreateManyInput {
  id: Int
  number: String!
  completeNumber: String
  countryCode: String
  canUseAsRecovery: Boolean
  countryCallingCode: String
  createdAt: DateTime
  updatedAt: DateTime
}

input PhoneCreateNestedManyWithoutAuthenticationProviderInput {
  create: PhoneCreateWithoutAuthenticationProviderInput
  connectOrCreate: [PhoneCreateOrConnectWithoutAuthenticationProviderInput!]
  connect: [PhoneWhereUniqueInput!]
}

input PhoneCreateOrConnectWithoutAuthenticationProviderInput {
  where: PhoneWhereUniqueInput!
  create: PhoneCreateWithoutAuthenticationProviderInput!
}

input PhoneCreateWithoutAuthenticationProviderInput {
  number: String!
  completeNumber: String
  countryCode: String
  canUseAsRecovery: Boolean
  countryCallingCode: String
  createdAt: DateTime
  updatedAt: DateTime
}

input PhoneInput {
  """Accepted phone formats: 5193334444 or +15193334444"""
  number: String
  countryCode: String
  countryCallingCode: String
  completeNumber: String
}

input PhoneListRelationFilter {
  every: PhoneWhereInput
  some: PhoneWhereInput
  none: PhoneWhereInput
}

input PhoneMaxOrderByAggregateInput {
  id: SortOrder
  number: SortOrder
  completeNumber: SortOrder
  countryCode: SortOrder
  canUseAsRecovery: SortOrder
  countryCallingCode: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PhoneMinOrderByAggregateInput {
  id: SortOrder
  number: SortOrder
  completeNumber: SortOrder
  countryCode: SortOrder
  canUseAsRecovery: SortOrder
  countryCallingCode: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PhoneOrderByRelationAggregateInput {
  _count: SortOrder
}

input PhoneOrderByWithAggregationInput {
  id: SortOrder
  number: SortOrder
  completeNumber: SortOrder
  countryCode: SortOrder
  canUseAsRecovery: SortOrder
  countryCallingCode: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: PhoneCountOrderByAggregateInput
  _avg: PhoneAvgOrderByAggregateInput
  _max: PhoneMaxOrderByAggregateInput
  _min: PhoneMinOrderByAggregateInput
  _sum: PhoneSumOrderByAggregateInput
}

input PhoneOrderByWithRelationInput {
  id: SortOrder
  number: SortOrder
  completeNumber: SortOrder
  countryCode: SortOrder
  canUseAsRecovery: SortOrder
  countryCallingCode: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  AuthenticationProvider: AuthenticationProviderOrderByRelationAggregateInput
}

enum PhoneScalarFieldEnum {
  id
  number
  completeNumber
  countryCode
  canUseAsRecovery
  countryCallingCode
  createdAt
  updatedAt
}

input PhoneScalarWhereInput {
  AND: [PhoneScalarWhereInput!]
  OR: [PhoneScalarWhereInput!]
  NOT: [PhoneScalarWhereInput!]
  id: IntFilter
  number: StringFilter
  completeNumber: StringNullableFilter
  countryCode: StringNullableFilter
  canUseAsRecovery: BoolNullableFilter
  countryCallingCode: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input PhoneScalarWhereWithAggregatesInput {
  AND: [PhoneScalarWhereWithAggregatesInput!]
  OR: [PhoneScalarWhereWithAggregatesInput!]
  NOT: [PhoneScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  number: StringWithAggregatesFilter
  completeNumber: StringNullableWithAggregatesFilter
  countryCode: StringNullableWithAggregatesFilter
  canUseAsRecovery: BoolNullableWithAggregatesFilter
  countryCallingCode: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input PhoneSumOrderByAggregateInput {
  id: SortOrder
}

input PhoneUpdateInput {
  number: StringFieldUpdateOperationsInput
  completeNumber: NullableStringFieldUpdateOperationsInput
  countryCode: NullableStringFieldUpdateOperationsInput
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  countryCallingCode: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  AuthenticationProvider: AuthenticationProviderUpdateManyWithoutPhonesNestedInput
}

input PhoneUpdateManyMutationInput {
  number: StringFieldUpdateOperationsInput
  completeNumber: NullableStringFieldUpdateOperationsInput
  countryCode: NullableStringFieldUpdateOperationsInput
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  countryCallingCode: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PhoneUpdateManyWithWhereWithoutAuthenticationProviderInput {
  where: PhoneScalarWhereInput!
  data: PhoneUpdateManyMutationInput!
}

input PhoneUpdateManyWithoutAuthenticationProviderNestedInput {
  create: PhoneCreateWithoutAuthenticationProviderInput
  connectOrCreate: [PhoneCreateOrConnectWithoutAuthenticationProviderInput!]
  upsert: [PhoneUpsertWithWhereUniqueWithoutAuthenticationProviderInput!]
  set: [PhoneWhereUniqueInput!]
  disconnect: [PhoneWhereUniqueInput!]
  delete: [PhoneWhereUniqueInput!]
  connect: [PhoneWhereUniqueInput!]
  update: [PhoneUpdateWithWhereUniqueWithoutAuthenticationProviderInput!]
  updateMany: [PhoneUpdateManyWithWhereWithoutAuthenticationProviderInput!]
  deleteMany: [PhoneScalarWhereInput!]
}

input PhoneUpdateWithWhereUniqueWithoutAuthenticationProviderInput {
  where: PhoneWhereUniqueInput!
  data: PhoneUpdateWithoutAuthenticationProviderInput!
}

input PhoneUpdateWithoutAuthenticationProviderInput {
  number: StringFieldUpdateOperationsInput
  completeNumber: NullableStringFieldUpdateOperationsInput
  countryCode: NullableStringFieldUpdateOperationsInput
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  countryCallingCode: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PhoneUpsertWithWhereUniqueWithoutAuthenticationProviderInput {
  where: PhoneWhereUniqueInput!
  update: PhoneUpdateWithoutAuthenticationProviderInput!
  create: PhoneCreateWithoutAuthenticationProviderInput!
}

input PhoneWhereInput {
  AND: [PhoneWhereInput!]
  OR: [PhoneWhereInput!]
  NOT: [PhoneWhereInput!]
  id: IntFilter
  number: StringFilter
  completeNumber: StringNullableFilter
  countryCode: StringNullableFilter
  canUseAsRecovery: BoolNullableFilter
  countryCallingCode: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  AuthenticationProvider: AuthenticationProviderListRelationFilter
}

input PhoneWhereUniqueInput {
  id: Int
}

type Photo {
  id: ID!
  url: String!
  width: Int
  height: Int
  blurhash: String
  ratio: String
  type: PhotoType
  position: Int
  active: Boolean!
  Story: Story
  storyId: String
  Group: Group
  groupId: String
  Profile: Profile
  profileId: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input PhotoAvgOrderByAggregateInput {
  width: SortOrder
  height: SortOrder
  position: SortOrder
}

input PhotoCountOrderByAggregateInput {
  id: SortOrder
  url: SortOrder
  width: SortOrder
  height: SortOrder
  blurhash: SortOrder
  ratio: SortOrder
  type: SortOrder
  position: SortOrder
  active: SortOrder
  storyId: SortOrder
  groupId: SortOrder
  profileId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PhotoCreateInput {
  id: String
  url: String!
  width: Int
  height: Int
  blurhash: String
  ratio: String
  type: PhotoType
  position: Int
  active: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  Story: StoryCreateNestedOneWithoutPhotosInput
  Group: GroupCreateNestedOneWithoutPhotosInput
  Profile: ProfileCreateNestedOneWithoutPhotosInput
}

input PhotoCreateManyGroupInput {
  id: String
  url: String!
  width: Int
  height: Int
  blurhash: String
  ratio: String
  type: PhotoType
  position: Int
  active: Boolean
  storyId: String
  profileId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input PhotoCreateManyGroupInputEnvelope {
  data: [PhotoCreateManyGroupInput!]!
  skipDuplicates: Boolean
}

input PhotoCreateManyInput {
  id: String
  url: String!
  width: Int
  height: Int
  blurhash: String
  ratio: String
  type: PhotoType
  position: Int
  active: Boolean
  storyId: String
  groupId: String
  profileId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input PhotoCreateManyProfileInput {
  id: String
  url: String!
  width: Int
  height: Int
  blurhash: String
  ratio: String
  type: PhotoType
  position: Int
  active: Boolean
  storyId: String
  groupId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input PhotoCreateManyProfileInputEnvelope {
  data: [PhotoCreateManyProfileInput!]!
  skipDuplicates: Boolean
}

input PhotoCreateManyStoryInput {
  id: String
  url: String!
  width: Int
  height: Int
  blurhash: String
  ratio: String
  type: PhotoType
  position: Int
  active: Boolean
  groupId: String
  profileId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input PhotoCreateManyStoryInputEnvelope {
  data: [PhotoCreateManyStoryInput!]!
  skipDuplicates: Boolean
}

input PhotoCreateNestedManyWithoutGroupInput {
  create: PhotoCreateWithoutGroupInput
  connectOrCreate: [PhotoCreateOrConnectWithoutGroupInput!]
  createMany: PhotoCreateManyGroupInputEnvelope
  connect: [PhotoWhereUniqueInput!]
}

input PhotoCreateNestedManyWithoutProfileInput {
  create: PhotoCreateWithoutProfileInput
  connectOrCreate: [PhotoCreateOrConnectWithoutProfileInput!]
  createMany: PhotoCreateManyProfileInputEnvelope
  connect: [PhotoWhereUniqueInput!]
}

input PhotoCreateNestedManyWithoutStoryInput {
  create: PhotoCreateWithoutStoryInput
  connectOrCreate: [PhotoCreateOrConnectWithoutStoryInput!]
  createMany: PhotoCreateManyStoryInputEnvelope
  connect: [PhotoWhereUniqueInput!]
}

input PhotoCreateOrConnectWithoutGroupInput {
  where: PhotoWhereUniqueInput!
  create: PhotoCreateWithoutGroupInput!
}

input PhotoCreateOrConnectWithoutProfileInput {
  where: PhotoWhereUniqueInput!
  create: PhotoCreateWithoutProfileInput!
}

input PhotoCreateOrConnectWithoutStoryInput {
  where: PhotoWhereUniqueInput!
  create: PhotoCreateWithoutStoryInput!
}

input PhotoCreateWithoutGroupInput {
  id: String
  url: String!
  width: Int
  height: Int
  blurhash: String
  ratio: String
  type: PhotoType
  position: Int
  active: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  Story: StoryCreateNestedOneWithoutPhotosInput
  Profile: ProfileCreateNestedOneWithoutPhotosInput
}

input PhotoCreateWithoutProfileInput {
  id: String
  url: String!
  width: Int
  height: Int
  blurhash: String
  ratio: String
  type: PhotoType
  position: Int
  active: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  Story: StoryCreateNestedOneWithoutPhotosInput
  Group: GroupCreateNestedOneWithoutPhotosInput
}

input PhotoCreateWithoutStoryInput {
  id: String
  url: String!
  width: Int
  height: Int
  blurhash: String
  ratio: String
  type: PhotoType
  position: Int
  active: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  Group: GroupCreateNestedOneWithoutPhotosInput
  Profile: ProfileCreateNestedOneWithoutPhotosInput
}

input PhotoListRelationFilter {
  every: PhotoWhereInput
  some: PhotoWhereInput
  none: PhotoWhereInput
}

input PhotoMaxOrderByAggregateInput {
  id: SortOrder
  url: SortOrder
  width: SortOrder
  height: SortOrder
  blurhash: SortOrder
  ratio: SortOrder
  type: SortOrder
  position: SortOrder
  active: SortOrder
  storyId: SortOrder
  groupId: SortOrder
  profileId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PhotoMinOrderByAggregateInput {
  id: SortOrder
  url: SortOrder
  width: SortOrder
  height: SortOrder
  blurhash: SortOrder
  ratio: SortOrder
  type: SortOrder
  position: SortOrder
  active: SortOrder
  storyId: SortOrder
  groupId: SortOrder
  profileId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input PhotoOrderByRelationAggregateInput {
  _count: SortOrder
}

input PhotoOrderByWithAggregationInput {
  id: SortOrder
  url: SortOrder
  width: SortOrder
  height: SortOrder
  blurhash: SortOrder
  ratio: SortOrder
  type: SortOrder
  position: SortOrder
  active: SortOrder
  storyId: SortOrder
  groupId: SortOrder
  profileId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: PhotoCountOrderByAggregateInput
  _avg: PhotoAvgOrderByAggregateInput
  _max: PhotoMaxOrderByAggregateInput
  _min: PhotoMinOrderByAggregateInput
  _sum: PhotoSumOrderByAggregateInput
}

input PhotoOrderByWithRelationInput {
  id: SortOrder
  url: SortOrder
  width: SortOrder
  height: SortOrder
  blurhash: SortOrder
  ratio: SortOrder
  type: SortOrder
  position: SortOrder
  active: SortOrder
  storyId: SortOrder
  groupId: SortOrder
  profileId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  Story: StoryOrderByWithRelationInput
  Group: GroupOrderByWithRelationInput
  Profile: ProfileOrderByWithRelationInput
}

enum PhotoScalarFieldEnum {
  id
  url
  width
  height
  blurhash
  ratio
  type
  position
  active
  storyId
  groupId
  profileId
  createdAt
  updatedAt
}

input PhotoScalarWhereInput {
  AND: [PhotoScalarWhereInput!]
  OR: [PhotoScalarWhereInput!]
  NOT: [PhotoScalarWhereInput!]
  id: StringFilter
  url: StringFilter
  width: IntNullableFilter
  height: IntNullableFilter
  blurhash: StringNullableFilter
  ratio: StringNullableFilter
  type: EnumPhotoTypeNullableFilter
  position: IntNullableFilter
  active: BoolFilter
  storyId: StringNullableFilter
  groupId: StringNullableFilter
  profileId: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input PhotoScalarWhereWithAggregatesInput {
  AND: [PhotoScalarWhereWithAggregatesInput!]
  OR: [PhotoScalarWhereWithAggregatesInput!]
  NOT: [PhotoScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  url: StringWithAggregatesFilter
  width: IntNullableWithAggregatesFilter
  height: IntNullableWithAggregatesFilter
  blurhash: StringNullableWithAggregatesFilter
  ratio: StringNullableWithAggregatesFilter
  type: EnumPhotoTypeNullableWithAggregatesFilter
  position: IntNullableWithAggregatesFilter
  active: BoolWithAggregatesFilter
  storyId: StringNullableWithAggregatesFilter
  groupId: StringNullableWithAggregatesFilter
  profileId: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input PhotoSumOrderByAggregateInput {
  width: SortOrder
  height: SortOrder
  position: SortOrder
}

enum PhotoType {
  BANNER
  LOGO
}

input PhotoUpdateInput {
  id: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  blurhash: NullableStringFieldUpdateOperationsInput
  ratio: NullableStringFieldUpdateOperationsInput
  type: NullableEnumPhotoTypeFieldUpdateOperationsInput
  position: NullableIntFieldUpdateOperationsInput
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Story: StoryUpdateOneWithoutPhotosNestedInput
  Group: GroupUpdateOneWithoutPhotosNestedInput
  Profile: ProfileUpdateOneWithoutPhotosNestedInput
}

input PhotoUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  blurhash: NullableStringFieldUpdateOperationsInput
  ratio: NullableStringFieldUpdateOperationsInput
  type: NullableEnumPhotoTypeFieldUpdateOperationsInput
  position: NullableIntFieldUpdateOperationsInput
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PhotoUpdateManyWithWhereWithoutGroupInput {
  where: PhotoScalarWhereInput!
  data: PhotoUpdateManyMutationInput!
}

input PhotoUpdateManyWithWhereWithoutProfileInput {
  where: PhotoScalarWhereInput!
  data: PhotoUpdateManyMutationInput!
}

input PhotoUpdateManyWithWhereWithoutStoryInput {
  where: PhotoScalarWhereInput!
  data: PhotoUpdateManyMutationInput!
}

input PhotoUpdateManyWithoutGroupNestedInput {
  create: PhotoCreateWithoutGroupInput
  connectOrCreate: [PhotoCreateOrConnectWithoutGroupInput!]
  upsert: [PhotoUpsertWithWhereUniqueWithoutGroupInput!]
  createMany: PhotoCreateManyGroupInputEnvelope
  set: [PhotoWhereUniqueInput!]
  disconnect: [PhotoWhereUniqueInput!]
  delete: [PhotoWhereUniqueInput!]
  connect: [PhotoWhereUniqueInput!]
  update: [PhotoUpdateWithWhereUniqueWithoutGroupInput!]
  updateMany: [PhotoUpdateManyWithWhereWithoutGroupInput!]
  deleteMany: [PhotoScalarWhereInput!]
}

input PhotoUpdateManyWithoutProfileNestedInput {
  create: PhotoCreateWithoutProfileInput
  connectOrCreate: [PhotoCreateOrConnectWithoutProfileInput!]
  upsert: [PhotoUpsertWithWhereUniqueWithoutProfileInput!]
  createMany: PhotoCreateManyProfileInputEnvelope
  set: [PhotoWhereUniqueInput!]
  disconnect: [PhotoWhereUniqueInput!]
  delete: [PhotoWhereUniqueInput!]
  connect: [PhotoWhereUniqueInput!]
  update: [PhotoUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [PhotoUpdateManyWithWhereWithoutProfileInput!]
  deleteMany: [PhotoScalarWhereInput!]
}

input PhotoUpdateManyWithoutStoryNestedInput {
  create: PhotoCreateWithoutStoryInput
  connectOrCreate: [PhotoCreateOrConnectWithoutStoryInput!]
  upsert: [PhotoUpsertWithWhereUniqueWithoutStoryInput!]
  createMany: PhotoCreateManyStoryInputEnvelope
  set: [PhotoWhereUniqueInput!]
  disconnect: [PhotoWhereUniqueInput!]
  delete: [PhotoWhereUniqueInput!]
  connect: [PhotoWhereUniqueInput!]
  update: [PhotoUpdateWithWhereUniqueWithoutStoryInput!]
  updateMany: [PhotoUpdateManyWithWhereWithoutStoryInput!]
  deleteMany: [PhotoScalarWhereInput!]
}

input PhotoUpdateWithWhereUniqueWithoutGroupInput {
  where: PhotoWhereUniqueInput!
  data: PhotoUpdateWithoutGroupInput!
}

input PhotoUpdateWithWhereUniqueWithoutProfileInput {
  where: PhotoWhereUniqueInput!
  data: PhotoUpdateWithoutProfileInput!
}

input PhotoUpdateWithWhereUniqueWithoutStoryInput {
  where: PhotoWhereUniqueInput!
  data: PhotoUpdateWithoutStoryInput!
}

input PhotoUpdateWithoutGroupInput {
  id: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  blurhash: NullableStringFieldUpdateOperationsInput
  ratio: NullableStringFieldUpdateOperationsInput
  type: NullableEnumPhotoTypeFieldUpdateOperationsInput
  position: NullableIntFieldUpdateOperationsInput
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Story: StoryUpdateOneWithoutPhotosNestedInput
  Profile: ProfileUpdateOneWithoutPhotosNestedInput
}

input PhotoUpdateWithoutProfileInput {
  id: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  blurhash: NullableStringFieldUpdateOperationsInput
  ratio: NullableStringFieldUpdateOperationsInput
  type: NullableEnumPhotoTypeFieldUpdateOperationsInput
  position: NullableIntFieldUpdateOperationsInput
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Story: StoryUpdateOneWithoutPhotosNestedInput
  Group: GroupUpdateOneWithoutPhotosNestedInput
}

input PhotoUpdateWithoutStoryInput {
  id: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  blurhash: NullableStringFieldUpdateOperationsInput
  ratio: NullableStringFieldUpdateOperationsInput
  type: NullableEnumPhotoTypeFieldUpdateOperationsInput
  position: NullableIntFieldUpdateOperationsInput
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Group: GroupUpdateOneWithoutPhotosNestedInput
  Profile: ProfileUpdateOneWithoutPhotosNestedInput
}

input PhotoUpsertWithWhereUniqueWithoutGroupInput {
  where: PhotoWhereUniqueInput!
  update: PhotoUpdateWithoutGroupInput!
  create: PhotoCreateWithoutGroupInput!
}

input PhotoUpsertWithWhereUniqueWithoutProfileInput {
  where: PhotoWhereUniqueInput!
  update: PhotoUpdateWithoutProfileInput!
  create: PhotoCreateWithoutProfileInput!
}

input PhotoUpsertWithWhereUniqueWithoutStoryInput {
  where: PhotoWhereUniqueInput!
  update: PhotoUpdateWithoutStoryInput!
  create: PhotoCreateWithoutStoryInput!
}

input PhotoWhereInput {
  AND: [PhotoWhereInput!]
  OR: [PhotoWhereInput!]
  NOT: [PhotoWhereInput!]
  id: StringFilter
  url: StringFilter
  width: IntNullableFilter
  height: IntNullableFilter
  blurhash: StringNullableFilter
  ratio: StringNullableFilter
  type: EnumPhotoTypeNullableFilter
  position: IntNullableFilter
  active: BoolFilter
  storyId: StringNullableFilter
  groupId: StringNullableFilter
  profileId: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  Story: StoryWhereInput
  Group: GroupWhereInput
  Profile: ProfileWhereInput
}

input PhotoWhereUniqueInput {
  id: String
}

type PlaceType {
  name: String!
  isoCode: String!
  coords: Coords!
}

type PluseCode {
  id: ID!
  globalCode: String!
  compoundCode: String
  Location: Location
}

input PluseCodeCountOrderByAggregateInput {
  id: SortOrder
  globalCode: SortOrder
  compoundCode: SortOrder
}

input PluseCodeCreateInput {
  id: String
  globalCode: String!
  compoundCode: String
  Location: LocationCreateNestedOneWithoutPlusCodeInput
}

input PluseCodeCreateManyInput {
  id: String
  globalCode: String!
  compoundCode: String
}

input PluseCodeCreateNestedOneWithoutLocationInput {
  create: PluseCodeCreateWithoutLocationInput
  connectOrCreate: PluseCodeCreateOrConnectWithoutLocationInput
  connect: PluseCodeWhereUniqueInput
}

input PluseCodeCreateOrConnectWithoutLocationInput {
  where: PluseCodeWhereUniqueInput!
  create: PluseCodeCreateWithoutLocationInput!
}

input PluseCodeCreateWithoutLocationInput {
  id: String
  globalCode: String!
  compoundCode: String
}

input PluseCodeMaxOrderByAggregateInput {
  id: SortOrder
  globalCode: SortOrder
  compoundCode: SortOrder
}

input PluseCodeMinOrderByAggregateInput {
  id: SortOrder
  globalCode: SortOrder
  compoundCode: SortOrder
}

input PluseCodeOrderByWithAggregationInput {
  id: SortOrder
  globalCode: SortOrder
  compoundCode: SortOrder
  _count: PluseCodeCountOrderByAggregateInput
  _max: PluseCodeMaxOrderByAggregateInput
  _min: PluseCodeMinOrderByAggregateInput
}

input PluseCodeOrderByWithRelationInput {
  id: SortOrder
  globalCode: SortOrder
  compoundCode: SortOrder
  Location: LocationOrderByWithRelationInput
}

input PluseCodeRelationFilter {
  is: PluseCodeWhereInput
  isNot: PluseCodeWhereInput
}

enum PluseCodeScalarFieldEnum {
  id
  globalCode
  compoundCode
}

input PluseCodeScalarWhereWithAggregatesInput {
  AND: [PluseCodeScalarWhereWithAggregatesInput!]
  OR: [PluseCodeScalarWhereWithAggregatesInput!]
  NOT: [PluseCodeScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  globalCode: StringWithAggregatesFilter
  compoundCode: StringNullableWithAggregatesFilter
}

input PluseCodeUpdateInput {
  id: StringFieldUpdateOperationsInput
  globalCode: StringFieldUpdateOperationsInput
  compoundCode: NullableStringFieldUpdateOperationsInput
  Location: LocationUpdateOneWithoutPlusCodeNestedInput
}

input PluseCodeUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  globalCode: StringFieldUpdateOperationsInput
  compoundCode: NullableStringFieldUpdateOperationsInput
}

input PluseCodeUpdateOneWithoutLocationNestedInput {
  create: PluseCodeCreateWithoutLocationInput
  connectOrCreate: PluseCodeCreateOrConnectWithoutLocationInput
  upsert: PluseCodeUpsertWithoutLocationInput
  disconnect: Boolean
  delete: Boolean
  connect: PluseCodeWhereUniqueInput
  update: PluseCodeUpdateWithoutLocationInput
}

input PluseCodeUpdateWithoutLocationInput {
  id: StringFieldUpdateOperationsInput
  globalCode: StringFieldUpdateOperationsInput
  compoundCode: NullableStringFieldUpdateOperationsInput
}

input PluseCodeUpsertWithoutLocationInput {
  update: PluseCodeUpdateWithoutLocationInput!
  create: PluseCodeCreateWithoutLocationInput!
}

input PluseCodeWhereInput {
  AND: [PluseCodeWhereInput!]
  OR: [PluseCodeWhereInput!]
  NOT: [PluseCodeWhereInput!]
  id: StringFilter
  globalCode: StringFilter
  compoundCode: StringNullableFilter
  Location: LocationWhereInput
}

input PluseCodeWhereUniqueInput {
  id: String
}

input PopularSearchServiceCountOrderByAggregateInput {
  id: SortOrder
  popularVenues: SortOrder
  popularPersonals: SortOrder
}

input PopularSearchServiceCreateInput {
  id: String
  popularVenues: [Json!]
  popularPersonals: [Json!]
}

input PopularSearchServiceCreateManyInput {
  id: String
  popularVenues: [Json!]
  popularPersonals: [Json!]
}

input PopularSearchServiceCreatepopularPersonalsInput {
  set: [Json!]!
}

input PopularSearchServiceCreatepopularVenuesInput {
  set: [Json!]!
}

input PopularSearchServiceMaxOrderByAggregateInput {
  id: SortOrder
}

input PopularSearchServiceMinOrderByAggregateInput {
  id: SortOrder
}

input PopularSearchServiceOrderByWithAggregationInput {
  id: SortOrder
  popularVenues: SortOrder
  popularPersonals: SortOrder
  _count: PopularSearchServiceCountOrderByAggregateInput
  _max: PopularSearchServiceMaxOrderByAggregateInput
  _min: PopularSearchServiceMinOrderByAggregateInput
}

input PopularSearchServiceOrderByWithRelationInput {
  id: SortOrder
  popularVenues: SortOrder
  popularPersonals: SortOrder
}

enum PopularSearchServiceScalarFieldEnum {
  id
  popularVenues
  popularPersonals
}

input PopularSearchServiceScalarWhereWithAggregatesInput {
  AND: [PopularSearchServiceScalarWhereWithAggregatesInput!]
  OR: [PopularSearchServiceScalarWhereWithAggregatesInput!]
  NOT: [PopularSearchServiceScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  popularVenues: JsonNullableListFilter
  popularPersonals: JsonNullableListFilter
}

input PopularSearchServiceUpdateInput {
  id: StringFieldUpdateOperationsInput
  popularVenues: [Json!]
  popularPersonals: [Json!]
}

input PopularSearchServiceUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  popularVenues: [Json!]
  popularPersonals: [Json!]
}

input PopularSearchServiceUpdatepopularPersonalsInput {
  set: [Json!]
  push: Json
}

input PopularSearchServiceUpdatepopularVenuesInput {
  set: [Json!]
  push: Json
}

input PopularSearchServiceWhereInput {
  AND: [PopularSearchServiceWhereInput!]
  OR: [PopularSearchServiceWhereInput!]
  NOT: [PopularSearchServiceWhereInput!]
  id: StringFilter
  popularVenues: JsonNullableListFilter
  popularPersonals: JsonNullableListFilter
}

input PopularSearchServiceWhereUniqueInput {
  id: String
}

"""
Returns the Profile latest Privacy and Terms of Service documents to the client.
"""
type PrivacyAndTermsDocumentResponse {
  privacy: Document!
  termsofservice: Document!
}

type Profile
  @key(fields: "id")
{
  id: String!
  bfsprofileid: String!
  photos: [Photo!]
  profilePhoto: Photo
  resentSearches: SearchesService
  tonightStory: Story
  Credentials: Credentials!
  Relationships: [Relationship!]!
  Personal: Personal
  Venue: Venue
  IdentifiableInformation: IdentifiableInformation
  DetailInformation: DetailInformation
  ProfileType: ProfileType!
  ThemeManager: ThemeManager
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ProfileCountOrderByAggregateInput {
  id: SortOrder
  bfsprofileid: SortOrder
  DeviceManager: SortOrder
  ProfileType: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input ProfileCreateDeviceManagerInput {
  set: [String!]!
}

input ProfileCreateInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  photos: PhotoCreateNestedManyWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  Groups: GroupCreateNestedManyWithoutProfileInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Chatroom: ChatroomCreateNestedManyWithoutProfilesInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
}

input ProfileCreateManyInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
}

input ProfileCreateNestedManyWithoutChatroomInput {
  create: ProfileCreateWithoutChatroomInput
  connectOrCreate: [ProfileCreateOrConnectWithoutChatroomInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateNestedManyWithoutGroupsInput {
  create: ProfileCreateWithoutGroupsInput
  connectOrCreate: [ProfileCreateOrConnectWithoutGroupsInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateNestedOneWithoutCredentialsInput {
  create: ProfileCreateWithoutCredentialsInput
  connectOrCreate: ProfileCreateOrConnectWithoutCredentialsInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateNestedOneWithoutDetailInformationInput {
  create: ProfileCreateWithoutDetailInformationInput
  connectOrCreate: ProfileCreateOrConnectWithoutDetailInformationInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateNestedOneWithoutIdentifiableInformationInput {
  create: ProfileCreateWithoutIdentifiableInformationInput
  connectOrCreate: ProfileCreateOrConnectWithoutIdentifiableInformationInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateNestedOneWithoutNotificationsInput {
  create: ProfileCreateWithoutNotificationsInput
  connectOrCreate: ProfileCreateOrConnectWithoutNotificationsInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateNestedOneWithoutPersonalInput {
  create: ProfileCreateWithoutPersonalInput
  connectOrCreate: ProfileCreateOrConnectWithoutPersonalInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateNestedOneWithoutPhotosInput {
  create: ProfileCreateWithoutPhotosInput
  connectOrCreate: ProfileCreateOrConnectWithoutPhotosInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateNestedOneWithoutRelationshipsInput {
  create: ProfileCreateWithoutRelationshipsInput
  connectOrCreate: ProfileCreateOrConnectWithoutRelationshipsInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateNestedOneWithoutSearchesServiceInput {
  create: ProfileCreateWithoutSearchesServiceInput
  connectOrCreate: ProfileCreateOrConnectWithoutSearchesServiceInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateNestedOneWithoutSecuredDataKeysInput {
  create: ProfileCreateWithoutSecuredDataKeysInput
  connectOrCreate: ProfileCreateOrConnectWithoutSecuredDataKeysInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateNestedOneWithoutSettingsInput {
  create: ProfileCreateWithoutSettingsInput
  connectOrCreate: ProfileCreateOrConnectWithoutSettingsInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateNestedOneWithoutStorysInput {
  create: ProfileCreateWithoutStorysInput
  connectOrCreate: ProfileCreateOrConnectWithoutStorysInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateNestedOneWithoutThemeManagerInput {
  create: ProfileCreateWithoutThemeManagerInput
  connectOrCreate: ProfileCreateOrConnectWithoutThemeManagerInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateNestedOneWithoutVenueInput {
  create: ProfileCreateWithoutVenueInput
  connectOrCreate: ProfileCreateOrConnectWithoutVenueInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateNestedOneWithoutVoteInput {
  create: ProfileCreateWithoutVoteInput
  connectOrCreate: ProfileCreateOrConnectWithoutVoteInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOrConnectWithoutChatroomInput {
  where: ProfileWhereUniqueInput!
  create: ProfileCreateWithoutChatroomInput!
}

input ProfileCreateOrConnectWithoutCredentialsInput {
  where: ProfileWhereUniqueInput!
  create: ProfileCreateWithoutCredentialsInput!
}

input ProfileCreateOrConnectWithoutDetailInformationInput {
  where: ProfileWhereUniqueInput!
  create: ProfileCreateWithoutDetailInformationInput!
}

input ProfileCreateOrConnectWithoutGroupsInput {
  where: ProfileWhereUniqueInput!
  create: ProfileCreateWithoutGroupsInput!
}

input ProfileCreateOrConnectWithoutIdentifiableInformationInput {
  where: ProfileWhereUniqueInput!
  create: ProfileCreateWithoutIdentifiableInformationInput!
}

input ProfileCreateOrConnectWithoutNotificationsInput {
  where: ProfileWhereUniqueInput!
  create: ProfileCreateWithoutNotificationsInput!
}

input ProfileCreateOrConnectWithoutPersonalInput {
  where: ProfileWhereUniqueInput!
  create: ProfileCreateWithoutPersonalInput!
}

input ProfileCreateOrConnectWithoutPhotosInput {
  where: ProfileWhereUniqueInput!
  create: ProfileCreateWithoutPhotosInput!
}

input ProfileCreateOrConnectWithoutRelationshipsInput {
  where: ProfileWhereUniqueInput!
  create: ProfileCreateWithoutRelationshipsInput!
}

input ProfileCreateOrConnectWithoutSearchesServiceInput {
  where: ProfileWhereUniqueInput!
  create: ProfileCreateWithoutSearchesServiceInput!
}

input ProfileCreateOrConnectWithoutSecuredDataKeysInput {
  where: ProfileWhereUniqueInput!
  create: ProfileCreateWithoutSecuredDataKeysInput!
}

input ProfileCreateOrConnectWithoutSettingsInput {
  where: ProfileWhereUniqueInput!
  create: ProfileCreateWithoutSettingsInput!
}

input ProfileCreateOrConnectWithoutStorysInput {
  where: ProfileWhereUniqueInput!
  create: ProfileCreateWithoutStorysInput!
}

input ProfileCreateOrConnectWithoutThemeManagerInput {
  where: ProfileWhereUniqueInput!
  create: ProfileCreateWithoutThemeManagerInput!
}

input ProfileCreateOrConnectWithoutVenueInput {
  where: ProfileWhereUniqueInput!
  create: ProfileCreateWithoutVenueInput!
}

input ProfileCreateOrConnectWithoutVoteInput {
  where: ProfileWhereUniqueInput!
  create: ProfileCreateWithoutVoteInput!
}

input ProfileCreateWithoutChatroomInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  photos: PhotoCreateNestedManyWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  Groups: GroupCreateNestedManyWithoutProfileInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
}

input ProfileCreateWithoutCredentialsInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  photos: PhotoCreateNestedManyWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  Groups: GroupCreateNestedManyWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Chatroom: ChatroomCreateNestedManyWithoutProfilesInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
}

input ProfileCreateWithoutDetailInformationInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  photos: PhotoCreateNestedManyWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  Groups: GroupCreateNestedManyWithoutProfileInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Chatroom: ChatroomCreateNestedManyWithoutProfilesInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
}

input ProfileCreateWithoutGroupsInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  photos: PhotoCreateNestedManyWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Chatroom: ChatroomCreateNestedManyWithoutProfilesInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
}

input ProfileCreateWithoutIdentifiableInformationInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  photos: PhotoCreateNestedManyWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  Groups: GroupCreateNestedManyWithoutProfileInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Chatroom: ChatroomCreateNestedManyWithoutProfilesInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
}

input ProfileCreateWithoutNotificationsInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  photos: PhotoCreateNestedManyWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  Groups: GroupCreateNestedManyWithoutProfileInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Chatroom: ChatroomCreateNestedManyWithoutProfilesInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
}

input ProfileCreateWithoutPersonalInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
  Venue: VenueCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  photos: PhotoCreateNestedManyWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  Groups: GroupCreateNestedManyWithoutProfileInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Chatroom: ChatroomCreateNestedManyWithoutProfilesInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
}

input ProfileCreateWithoutPhotosInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  Groups: GroupCreateNestedManyWithoutProfileInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Chatroom: ChatroomCreateNestedManyWithoutProfilesInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
}

input ProfileCreateWithoutRelationshipsInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  photos: PhotoCreateNestedManyWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  Groups: GroupCreateNestedManyWithoutProfileInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Chatroom: ChatroomCreateNestedManyWithoutProfilesInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
}

input ProfileCreateWithoutSearchesServiceInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  photos: PhotoCreateNestedManyWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  Groups: GroupCreateNestedManyWithoutProfileInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Chatroom: ChatroomCreateNestedManyWithoutProfilesInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
}

input ProfileCreateWithoutSecuredDataKeysInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  photos: PhotoCreateNestedManyWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  Groups: GroupCreateNestedManyWithoutProfileInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Chatroom: ChatroomCreateNestedManyWithoutProfilesInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
}

input ProfileCreateWithoutSettingsInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  photos: PhotoCreateNestedManyWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  Groups: GroupCreateNestedManyWithoutProfileInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Chatroom: ChatroomCreateNestedManyWithoutProfilesInput
  Vote: VoteCreateNestedManyWithoutProfileInput
}

input ProfileCreateWithoutStorysInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  photos: PhotoCreateNestedManyWithoutProfileInput
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  Groups: GroupCreateNestedManyWithoutProfileInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Chatroom: ChatroomCreateNestedManyWithoutProfilesInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
}

input ProfileCreateWithoutThemeManagerInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  photos: PhotoCreateNestedManyWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  Groups: GroupCreateNestedManyWithoutProfileInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  Chatroom: ChatroomCreateNestedManyWithoutProfilesInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
}

input ProfileCreateWithoutVenueInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  photos: PhotoCreateNestedManyWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  Groups: GroupCreateNestedManyWithoutProfileInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Chatroom: ChatroomCreateNestedManyWithoutProfilesInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
}

input ProfileCreateWithoutVoteInput {
  id: String
  bfsprofileid: String
  DeviceManager: [String!]
  ProfileType: ProfileType
  createdAt: DateTime
  updatedAt: DateTime
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  photos: PhotoCreateNestedManyWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  Groups: GroupCreateNestedManyWithoutProfileInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Chatroom: ChatroomCreateNestedManyWithoutProfilesInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
}

input ProfileListRelationFilter {
  every: ProfileWhereInput
  some: ProfileWhereInput
  none: ProfileWhereInput
}

input ProfileMaxOrderByAggregateInput {
  id: SortOrder
  bfsprofileid: SortOrder
  ProfileType: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input ProfileMinOrderByAggregateInput {
  id: SortOrder
  bfsprofileid: SortOrder
  ProfileType: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input ProfileOrderByRelationAggregateInput {
  _count: SortOrder
}

input ProfileOrderByWithAggregationInput {
  id: SortOrder
  bfsprofileid: SortOrder
  DeviceManager: SortOrder
  ProfileType: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: ProfileCountOrderByAggregateInput
  _max: ProfileMaxOrderByAggregateInput
  _min: ProfileMinOrderByAggregateInput
}

input ProfileOrderByWithRelationInput {
  id: SortOrder
  bfsprofileid: SortOrder
  DeviceManager: SortOrder
  ProfileType: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  Personal: PersonalOrderByWithRelationInput
  Venue: VenueOrderByWithRelationInput
  DetailInformation: DetailInformationOrderByWithRelationInput
  IdentifiableInformation: IdentifiableInformationOrderByWithRelationInput
  Notifications: NotificationsOrderByWithRelationInput
  photos: PhotoOrderByRelationAggregateInput
  Storys: StoryOrderByRelationAggregateInput
  Relationships: RelationshipOrderByRelationAggregateInput
  Groups: GroupOrderByRelationAggregateInput
  Credentials: CredentialsOrderByWithRelationInput
  SecuredDataKeys: SecuredDataKeysOrderByRelationAggregateInput
  SearchesService: SearchesServiceOrderByWithRelationInput
  ThemeManager: ThemeManagerOrderByWithRelationInput
  Chatroom: ChatroomOrderByRelationAggregateInput
  Settings: SettingsOrderByWithRelationInput
  Vote: VoteOrderByRelationAggregateInput
}

input ProfileRelationFilter {
  is: ProfileWhereInput
  isNot: ProfileWhereInput
}

union ProfileResponseUnion = Profile | ErrorProfiling

enum ProfileScalarFieldEnum {
  id
  bfsprofileid
  DeviceManager
  ProfileType
  createdAt
  updatedAt
}

input ProfileScalarWhereInput {
  AND: [ProfileScalarWhereInput!]
  OR: [ProfileScalarWhereInput!]
  NOT: [ProfileScalarWhereInput!]
  id: StringFilter
  bfsprofileid: StringFilter
  DeviceManager: StringNullableListFilter
  ProfileType: EnumProfileTypeFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input ProfileScalarWhereWithAggregatesInput {
  AND: [ProfileScalarWhereWithAggregatesInput!]
  OR: [ProfileScalarWhereWithAggregatesInput!]
  NOT: [ProfileScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  bfsprofileid: StringWithAggregatesFilter
  DeviceManager: StringNullableListFilter
  ProfileType: EnumProfileTypeWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type ProfileTheme {
  id: ID!
  Theme: Theme!
  themeId: String!
  themeManagerId: String
  isActive: Boolean!
  ThemeManager: ThemeManager!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ProfileThemeCountOrderByAggregateInput {
  id: SortOrder
  isActive: SortOrder
  themeId: SortOrder
  themeManagerId: SortOrder
  updatedAt: SortOrder
  createdAt: SortOrder
}

input ProfileThemeCreateInput {
  id: String
  isActive: Boolean!
  updatedAt: DateTime
  createdAt: DateTime
  Theme: ThemeCreateNestedOneWithoutProfileThemeInput!
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileThemeInput
}

input ProfileThemeCreateManyInput {
  id: String
  isActive: Boolean!
  themeId: String!
  themeManagerId: String
  updatedAt: DateTime
  createdAt: DateTime
}

input ProfileThemeCreateManyThemeInput {
  id: String
  isActive: Boolean!
  themeManagerId: String
  updatedAt: DateTime
  createdAt: DateTime
}

input ProfileThemeCreateManyThemeInputEnvelope {
  data: [ProfileThemeCreateManyThemeInput!]!
  skipDuplicates: Boolean
}

input ProfileThemeCreateManyThemeManagerInput {
  id: String
  isActive: Boolean!
  themeId: String!
  updatedAt: DateTime
  createdAt: DateTime
}

input ProfileThemeCreateManyThemeManagerInputEnvelope {
  data: [ProfileThemeCreateManyThemeManagerInput!]!
  skipDuplicates: Boolean
}

input ProfileThemeCreateNestedManyWithoutThemeInput {
  create: ProfileThemeCreateWithoutThemeInput
  connectOrCreate: [ProfileThemeCreateOrConnectWithoutThemeInput!]
  createMany: ProfileThemeCreateManyThemeInputEnvelope
  connect: [ProfileThemeWhereUniqueInput!]
}

input ProfileThemeCreateNestedManyWithoutThemeManagerInput {
  create: ProfileThemeCreateWithoutThemeManagerInput
  connectOrCreate: [ProfileThemeCreateOrConnectWithoutThemeManagerInput!]
  createMany: ProfileThemeCreateManyThemeManagerInputEnvelope
  connect: [ProfileThemeWhereUniqueInput!]
}

input ProfileThemeCreateOrConnectWithoutThemeInput {
  where: ProfileThemeWhereUniqueInput!
  create: ProfileThemeCreateWithoutThemeInput!
}

input ProfileThemeCreateOrConnectWithoutThemeManagerInput {
  where: ProfileThemeWhereUniqueInput!
  create: ProfileThemeCreateWithoutThemeManagerInput!
}

input ProfileThemeCreateWithoutThemeInput {
  id: String
  isActive: Boolean!
  updatedAt: DateTime
  createdAt: DateTime
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileThemeInput
}

input ProfileThemeCreateWithoutThemeManagerInput {
  id: String
  isActive: Boolean!
  updatedAt: DateTime
  createdAt: DateTime
  Theme: ThemeCreateNestedOneWithoutProfileThemeInput!
}

input ProfileThemeListRelationFilter {
  every: ProfileThemeWhereInput
  some: ProfileThemeWhereInput
  none: ProfileThemeWhereInput
}

input ProfileThemeMaxOrderByAggregateInput {
  id: SortOrder
  isActive: SortOrder
  themeId: SortOrder
  themeManagerId: SortOrder
  updatedAt: SortOrder
  createdAt: SortOrder
}

input ProfileThemeMinOrderByAggregateInput {
  id: SortOrder
  isActive: SortOrder
  themeId: SortOrder
  themeManagerId: SortOrder
  updatedAt: SortOrder
  createdAt: SortOrder
}

input ProfileThemeOrderByRelationAggregateInput {
  _count: SortOrder
}

input ProfileThemeOrderByWithAggregationInput {
  id: SortOrder
  isActive: SortOrder
  themeId: SortOrder
  themeManagerId: SortOrder
  updatedAt: SortOrder
  createdAt: SortOrder
  _count: ProfileThemeCountOrderByAggregateInput
  _max: ProfileThemeMaxOrderByAggregateInput
  _min: ProfileThemeMinOrderByAggregateInput
}

input ProfileThemeOrderByWithRelationInput {
  id: SortOrder
  isActive: SortOrder
  themeId: SortOrder
  themeManagerId: SortOrder
  updatedAt: SortOrder
  createdAt: SortOrder
  Theme: ThemeOrderByWithRelationInput
  ThemeManager: ThemeManagerOrderByWithRelationInput
}

enum ProfileThemeScalarFieldEnum {
  id
  isActive
  themeId
  themeManagerId
  updatedAt
  createdAt
}

input ProfileThemeScalarWhereInput {
  AND: [ProfileThemeScalarWhereInput!]
  OR: [ProfileThemeScalarWhereInput!]
  NOT: [ProfileThemeScalarWhereInput!]
  id: StringFilter
  isActive: BoolFilter
  themeId: StringFilter
  themeManagerId: StringNullableFilter
  updatedAt: DateTimeFilter
  createdAt: DateTimeFilter
}

input ProfileThemeScalarWhereWithAggregatesInput {
  AND: [ProfileThemeScalarWhereWithAggregatesInput!]
  OR: [ProfileThemeScalarWhereWithAggregatesInput!]
  NOT: [ProfileThemeScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  isActive: BoolWithAggregatesFilter
  themeId: StringWithAggregatesFilter
  themeManagerId: StringNullableWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
}

input ProfileThemeUpdateInput {
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Theme: ThemeUpdateOneRequiredWithoutProfileThemeNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileThemeNestedInput
}

input ProfileThemeUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}

input ProfileThemeUpdateManyWithWhereWithoutThemeInput {
  where: ProfileThemeScalarWhereInput!
  data: ProfileThemeUpdateManyMutationInput!
}

input ProfileThemeUpdateManyWithWhereWithoutThemeManagerInput {
  where: ProfileThemeScalarWhereInput!
  data: ProfileThemeUpdateManyMutationInput!
}

input ProfileThemeUpdateManyWithoutThemeManagerNestedInput {
  create: ProfileThemeCreateWithoutThemeManagerInput
  connectOrCreate: [ProfileThemeCreateOrConnectWithoutThemeManagerInput!]
  upsert: [ProfileThemeUpsertWithWhereUniqueWithoutThemeManagerInput!]
  createMany: ProfileThemeCreateManyThemeManagerInputEnvelope
  set: [ProfileThemeWhereUniqueInput!]
  disconnect: [ProfileThemeWhereUniqueInput!]
  delete: [ProfileThemeWhereUniqueInput!]
  connect: [ProfileThemeWhereUniqueInput!]
  update: [ProfileThemeUpdateWithWhereUniqueWithoutThemeManagerInput!]
  updateMany: [ProfileThemeUpdateManyWithWhereWithoutThemeManagerInput!]
  deleteMany: [ProfileThemeScalarWhereInput!]
}

input ProfileThemeUpdateManyWithoutThemeNestedInput {
  create: ProfileThemeCreateWithoutThemeInput
  connectOrCreate: [ProfileThemeCreateOrConnectWithoutThemeInput!]
  upsert: [ProfileThemeUpsertWithWhereUniqueWithoutThemeInput!]
  createMany: ProfileThemeCreateManyThemeInputEnvelope
  set: [ProfileThemeWhereUniqueInput!]
  disconnect: [ProfileThemeWhereUniqueInput!]
  delete: [ProfileThemeWhereUniqueInput!]
  connect: [ProfileThemeWhereUniqueInput!]
  update: [ProfileThemeUpdateWithWhereUniqueWithoutThemeInput!]
  updateMany: [ProfileThemeUpdateManyWithWhereWithoutThemeInput!]
  deleteMany: [ProfileThemeScalarWhereInput!]
}

input ProfileThemeUpdateWithWhereUniqueWithoutThemeInput {
  where: ProfileThemeWhereUniqueInput!
  data: ProfileThemeUpdateWithoutThemeInput!
}

input ProfileThemeUpdateWithWhereUniqueWithoutThemeManagerInput {
  where: ProfileThemeWhereUniqueInput!
  data: ProfileThemeUpdateWithoutThemeManagerInput!
}

input ProfileThemeUpdateWithoutThemeInput {
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileThemeNestedInput
}

input ProfileThemeUpdateWithoutThemeManagerInput {
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Theme: ThemeUpdateOneRequiredWithoutProfileThemeNestedInput
}

input ProfileThemeUpsertWithWhereUniqueWithoutThemeInput {
  where: ProfileThemeWhereUniqueInput!
  update: ProfileThemeUpdateWithoutThemeInput!
  create: ProfileThemeCreateWithoutThemeInput!
}

input ProfileThemeUpsertWithWhereUniqueWithoutThemeManagerInput {
  where: ProfileThemeWhereUniqueInput!
  update: ProfileThemeUpdateWithoutThemeManagerInput!
  create: ProfileThemeCreateWithoutThemeManagerInput!
}

input ProfileThemeWhereInput {
  AND: [ProfileThemeWhereInput!]
  OR: [ProfileThemeWhereInput!]
  NOT: [ProfileThemeWhereInput!]
  id: StringFilter
  isActive: BoolFilter
  themeId: StringFilter
  themeManagerId: StringNullableFilter
  updatedAt: DateTimeFilter
  createdAt: DateTimeFilter
  Theme: ThemeWhereInput
  ThemeManager: ThemeManagerWhereInput
}

input ProfileThemeWhereUniqueInput {
  id: String
}

enum ProfileType {
  PERSONAL
  VENUE
  GUEST
}

input ProfileUpdateDeviceManagerInput {
  set: [String!]
  push: [String!]
}

input ProfileUpdateInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  photos: PhotoUpdateManyWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  Groups: GroupUpdateManyWithoutProfileNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Chatroom: ChatroomUpdateManyWithoutProfilesNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
}

input ProfileUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateManyWithWhereWithoutChatroomInput {
  where: ProfileScalarWhereInput!
  data: ProfileUpdateManyMutationInput!
}

input ProfileUpdateManyWithWhereWithoutGroupsInput {
  where: ProfileScalarWhereInput!
  data: ProfileUpdateManyMutationInput!
}

input ProfileUpdateManyWithoutChatroomNestedInput {
  create: ProfileCreateWithoutChatroomInput
  connectOrCreate: [ProfileCreateOrConnectWithoutChatroomInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutChatroomInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  connect: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutChatroomInput!]
  updateMany: [ProfileUpdateManyWithWhereWithoutChatroomInput!]
  deleteMany: [ProfileScalarWhereInput!]
}

input ProfileUpdateManyWithoutGroupsNestedInput {
  create: ProfileCreateWithoutGroupsInput
  connectOrCreate: [ProfileCreateOrConnectWithoutGroupsInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutGroupsInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  connect: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutGroupsInput!]
  updateMany: [ProfileUpdateManyWithWhereWithoutGroupsInput!]
  deleteMany: [ProfileScalarWhereInput!]
}

input ProfileUpdateOneRequiredWithoutCredentialsNestedInput {
  create: ProfileCreateWithoutCredentialsInput
  connectOrCreate: ProfileCreateOrConnectWithoutCredentialsInput
  upsert: ProfileUpsertWithoutCredentialsInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutCredentialsInput
}

input ProfileUpdateOneRequiredWithoutDetailInformationNestedInput {
  create: ProfileCreateWithoutDetailInformationInput
  connectOrCreate: ProfileCreateOrConnectWithoutDetailInformationInput
  upsert: ProfileUpsertWithoutDetailInformationInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutDetailInformationInput
}

input ProfileUpdateOneRequiredWithoutIdentifiableInformationNestedInput {
  create: ProfileCreateWithoutIdentifiableInformationInput
  connectOrCreate: ProfileCreateOrConnectWithoutIdentifiableInformationInput
  upsert: ProfileUpsertWithoutIdentifiableInformationInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutIdentifiableInformationInput
}

input ProfileUpdateOneRequiredWithoutNotificationsNestedInput {
  create: ProfileCreateWithoutNotificationsInput
  connectOrCreate: ProfileCreateOrConnectWithoutNotificationsInput
  upsert: ProfileUpsertWithoutNotificationsInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutNotificationsInput
}

input ProfileUpdateOneRequiredWithoutPersonalNestedInput {
  create: ProfileCreateWithoutPersonalInput
  connectOrCreate: ProfileCreateOrConnectWithoutPersonalInput
  upsert: ProfileUpsertWithoutPersonalInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutPersonalInput
}

input ProfileUpdateOneRequiredWithoutSearchesServiceNestedInput {
  create: ProfileCreateWithoutSearchesServiceInput
  connectOrCreate: ProfileCreateOrConnectWithoutSearchesServiceInput
  upsert: ProfileUpsertWithoutSearchesServiceInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutSearchesServiceInput
}

input ProfileUpdateOneRequiredWithoutSecuredDataKeysNestedInput {
  create: ProfileCreateWithoutSecuredDataKeysInput
  connectOrCreate: ProfileCreateOrConnectWithoutSecuredDataKeysInput
  upsert: ProfileUpsertWithoutSecuredDataKeysInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutSecuredDataKeysInput
}

input ProfileUpdateOneRequiredWithoutSettingsNestedInput {
  create: ProfileCreateWithoutSettingsInput
  connectOrCreate: ProfileCreateOrConnectWithoutSettingsInput
  upsert: ProfileUpsertWithoutSettingsInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutSettingsInput
}

input ProfileUpdateOneRequiredWithoutThemeManagerNestedInput {
  create: ProfileCreateWithoutThemeManagerInput
  connectOrCreate: ProfileCreateOrConnectWithoutThemeManagerInput
  upsert: ProfileUpsertWithoutThemeManagerInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutThemeManagerInput
}

input ProfileUpdateOneRequiredWithoutVenueNestedInput {
  create: ProfileCreateWithoutVenueInput
  connectOrCreate: ProfileCreateOrConnectWithoutVenueInput
  upsert: ProfileUpsertWithoutVenueInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutVenueInput
}

input ProfileUpdateOneRequiredWithoutVoteNestedInput {
  create: ProfileCreateWithoutVoteInput
  connectOrCreate: ProfileCreateOrConnectWithoutVoteInput
  upsert: ProfileUpsertWithoutVoteInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutVoteInput
}

input ProfileUpdateOneWithoutPhotosNestedInput {
  create: ProfileCreateWithoutPhotosInput
  connectOrCreate: ProfileCreateOrConnectWithoutPhotosInput
  upsert: ProfileUpsertWithoutPhotosInput
  disconnect: Boolean
  delete: Boolean
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutPhotosInput
}

input ProfileUpdateOneWithoutRelationshipsNestedInput {
  create: ProfileCreateWithoutRelationshipsInput
  connectOrCreate: ProfileCreateOrConnectWithoutRelationshipsInput
  upsert: ProfileUpsertWithoutRelationshipsInput
  disconnect: Boolean
  delete: Boolean
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutRelationshipsInput
}

input ProfileUpdateOneWithoutStorysNestedInput {
  create: ProfileCreateWithoutStorysInput
  connectOrCreate: ProfileCreateOrConnectWithoutStorysInput
  upsert: ProfileUpsertWithoutStorysInput
  disconnect: Boolean
  delete: Boolean
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutStorysInput
}

input ProfileUpdateWithWhereUniqueWithoutChatroomInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutChatroomInput!
}

input ProfileUpdateWithWhereUniqueWithoutGroupsInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutGroupsInput!
}

input ProfileUpdateWithoutChatroomInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  photos: PhotoUpdateManyWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  Groups: GroupUpdateManyWithoutProfileNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
}

input ProfileUpdateWithoutCredentialsInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  photos: PhotoUpdateManyWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  Groups: GroupUpdateManyWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Chatroom: ChatroomUpdateManyWithoutProfilesNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
}

input ProfileUpdateWithoutDetailInformationInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  photos: PhotoUpdateManyWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  Groups: GroupUpdateManyWithoutProfileNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Chatroom: ChatroomUpdateManyWithoutProfilesNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
}

input ProfileUpdateWithoutGroupsInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  photos: PhotoUpdateManyWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Chatroom: ChatroomUpdateManyWithoutProfilesNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
}

input ProfileUpdateWithoutIdentifiableInformationInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  photos: PhotoUpdateManyWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  Groups: GroupUpdateManyWithoutProfileNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Chatroom: ChatroomUpdateManyWithoutProfilesNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
}

input ProfileUpdateWithoutNotificationsInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  photos: PhotoUpdateManyWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  Groups: GroupUpdateManyWithoutProfileNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Chatroom: ChatroomUpdateManyWithoutProfilesNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
}

input ProfileUpdateWithoutPersonalInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  photos: PhotoUpdateManyWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  Groups: GroupUpdateManyWithoutProfileNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Chatroom: ChatroomUpdateManyWithoutProfilesNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
}

input ProfileUpdateWithoutPhotosInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  Groups: GroupUpdateManyWithoutProfileNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Chatroom: ChatroomUpdateManyWithoutProfilesNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
}

input ProfileUpdateWithoutRelationshipsInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  photos: PhotoUpdateManyWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  Groups: GroupUpdateManyWithoutProfileNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Chatroom: ChatroomUpdateManyWithoutProfilesNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
}

input ProfileUpdateWithoutSearchesServiceInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  photos: PhotoUpdateManyWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  Groups: GroupUpdateManyWithoutProfileNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Chatroom: ChatroomUpdateManyWithoutProfilesNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
}

input ProfileUpdateWithoutSecuredDataKeysInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  photos: PhotoUpdateManyWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  Groups: GroupUpdateManyWithoutProfileNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Chatroom: ChatroomUpdateManyWithoutProfilesNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
}

input ProfileUpdateWithoutSettingsInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  photos: PhotoUpdateManyWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  Groups: GroupUpdateManyWithoutProfileNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Chatroom: ChatroomUpdateManyWithoutProfilesNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
}

input ProfileUpdateWithoutStorysInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  photos: PhotoUpdateManyWithoutProfileNestedInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  Groups: GroupUpdateManyWithoutProfileNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Chatroom: ChatroomUpdateManyWithoutProfilesNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
}

input ProfileUpdateWithoutThemeManagerInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  photos: PhotoUpdateManyWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  Groups: GroupUpdateManyWithoutProfileNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  Chatroom: ChatroomUpdateManyWithoutProfilesNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
}

input ProfileUpdateWithoutVenueInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  photos: PhotoUpdateManyWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  Groups: GroupUpdateManyWithoutProfileNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Chatroom: ChatroomUpdateManyWithoutProfilesNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
}

input ProfileUpdateWithoutVoteInput {
  id: StringFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  photos: PhotoUpdateManyWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  Groups: GroupUpdateManyWithoutProfileNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Chatroom: ChatroomUpdateManyWithoutProfilesNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
}

input ProfileUpsertWithWhereUniqueWithoutChatroomInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutChatroomInput!
  create: ProfileCreateWithoutChatroomInput!
}

input ProfileUpsertWithWhereUniqueWithoutGroupsInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutGroupsInput!
  create: ProfileCreateWithoutGroupsInput!
}

input ProfileUpsertWithoutCredentialsInput {
  update: ProfileUpdateWithoutCredentialsInput!
  create: ProfileCreateWithoutCredentialsInput!
}

input ProfileUpsertWithoutDetailInformationInput {
  update: ProfileUpdateWithoutDetailInformationInput!
  create: ProfileCreateWithoutDetailInformationInput!
}

input ProfileUpsertWithoutIdentifiableInformationInput {
  update: ProfileUpdateWithoutIdentifiableInformationInput!
  create: ProfileCreateWithoutIdentifiableInformationInput!
}

input ProfileUpsertWithoutNotificationsInput {
  update: ProfileUpdateWithoutNotificationsInput!
  create: ProfileCreateWithoutNotificationsInput!
}

input ProfileUpsertWithoutPersonalInput {
  update: ProfileUpdateWithoutPersonalInput!
  create: ProfileCreateWithoutPersonalInput!
}

input ProfileUpsertWithoutPhotosInput {
  update: ProfileUpdateWithoutPhotosInput!
  create: ProfileCreateWithoutPhotosInput!
}

input ProfileUpsertWithoutRelationshipsInput {
  update: ProfileUpdateWithoutRelationshipsInput!
  create: ProfileCreateWithoutRelationshipsInput!
}

input ProfileUpsertWithoutSearchesServiceInput {
  update: ProfileUpdateWithoutSearchesServiceInput!
  create: ProfileCreateWithoutSearchesServiceInput!
}

input ProfileUpsertWithoutSecuredDataKeysInput {
  update: ProfileUpdateWithoutSecuredDataKeysInput!
  create: ProfileCreateWithoutSecuredDataKeysInput!
}

input ProfileUpsertWithoutSettingsInput {
  update: ProfileUpdateWithoutSettingsInput!
  create: ProfileCreateWithoutSettingsInput!
}

input ProfileUpsertWithoutStorysInput {
  update: ProfileUpdateWithoutStorysInput!
  create: ProfileCreateWithoutStorysInput!
}

input ProfileUpsertWithoutThemeManagerInput {
  update: ProfileUpdateWithoutThemeManagerInput!
  create: ProfileCreateWithoutThemeManagerInput!
}

input ProfileUpsertWithoutVenueInput {
  update: ProfileUpdateWithoutVenueInput!
  create: ProfileCreateWithoutVenueInput!
}

input ProfileUpsertWithoutVoteInput {
  update: ProfileUpdateWithoutVoteInput!
  create: ProfileCreateWithoutVoteInput!
}

type ProfileVenue {
  id: String!
  distanceInM: Int
  bfsprofileid: String!
  photos: [Photo!]!
  profilePhoto: Photo
  tonightStory: Story
  Credentials: Credentials!
  Relationships: [Relationship!]!
  Venue: Venue
  IdentifiableInformation: IdentifiableInformation
  DetailInformation: DetailInformation
  ProfileType: ProfileType!
  ThemeManager: ThemeManager
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ProfileWhereInput {
  AND: [ProfileWhereInput!]
  OR: [ProfileWhereInput!]
  NOT: [ProfileWhereInput!]
  id: StringFilter
  bfsprofileid: StringFilter
  DeviceManager: StringNullableListFilter
  ProfileType: EnumProfileTypeFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  Personal: PersonalWhereInput
  Venue: VenueWhereInput
  DetailInformation: DetailInformationWhereInput
  IdentifiableInformation: IdentifiableInformationWhereInput
  Notifications: NotificationsWhereInput
  photos: PhotoListRelationFilter
  Storys: StoryListRelationFilter
  Relationships: RelationshipListRelationFilter
  Groups: GroupListRelationFilter
  Credentials: CredentialsWhereInput
  SecuredDataKeys: SecuredDataKeysListRelationFilter
  SearchesService: SearchesServiceWhereInput
  ThemeManager: ThemeManagerWhereInput
  Chatroom: ChatroomListRelationFilter
  Settings: SettingsWhereInput
  Vote: VoteListRelationFilter
}

input ProfileWhereUniqueInput {
  id: String
  bfsprofileid: String
}

type ProfilesResponse {
  username: [Profile!]!
  phone: [Profile!]!
  email: [Profile!]!
}

type Query {
  authorizedProfiles(where: AuthorizedProfilesWhereInput!): AuthorizedProfilesResponseUnion
  checkUsername(username: String!): Boolean!
  privacyTermsDocuments: PrivacyAndTermsDocumentResponse!
  sendAuthenticatorDeviceOwnerCode: Boolean!
  loginPassword(username: String!, password: String!): Boolean!
  getNotifications: NotificationResponse!
  getRelationshipFriendRequestStatus(profileId: String!): NotificationFriendRequestStatusResponse!
  getSecureFriendQRCodeData: String!
  getAllInterrests: [Json!]!
  getLiveVenueTotals(profileIdVenue: String): LiveVenueTotals!
  H3IndexLatLng(cell: String!): [Float!]!
  H3IndexGrid(cell: String!, ringSize: Int! = 1): [String!]!
  venuesNearby(searchAreaCoords: CoordsInput!, currentLocationCoords: CoordsInput, countryIsoCode: String!, stateIsoCode: String!, kRing: Int = 1): RecommendationResponseUnion!
  friendsFromContacts(contact: [ContactInput!]!): String!
  venues(where: VenueWhereInput, orderBy: [VenueOrderByWithRelationInput!], cursor: VenueWhereUniqueInput, take: Int, skip: Int, distinct: [VenueScalarFieldEnum!]): [Venue!]!
  venue(where: VenueWhereInput, orderBy: [VenueOrderByWithRelationInput!], cursor: VenueWhereUniqueInput, take: Int, skip: Int, distinct: [VenueScalarFieldEnum!]): Venue
  profiles(where: ProfileWhereInput, orderBy: [ProfileOrderByWithRelationInput!], cursor: ProfileWhereUniqueInput, take: Int, skip: Int, distinct: [ProfileScalarFieldEnum!]): [Profile!]!
  profile(where: ProfileWhereInput, orderBy: [ProfileOrderByWithRelationInput!], cursor: ProfileWhereUniqueInput, take: Int, skip: Int, distinct: [ProfileScalarFieldEnum!]): Profile
  currentVenue(where: ProfileWhereInput, orderBy: [ProfileOrderByWithRelationInput!], cursor: ProfileWhereUniqueInput, take: Int, skip: Int, distinct: [ProfileScalarFieldEnum!], currentLocationCoords: CoordsInput): ProfileVenue
  getAllCountries: [CountryResponseObject!]!
  getAllStatesByCountry(countryIsoCode: String!): [StateResponseObject!]!
  getAllCitiesByState(countryIsoCode: String!, stateIsoCode: String!): [CityResponseObject!]!
  exploreSearch(search: String!): ExploreResponse!
  emojimoods(where: EmojimoodWhereInput, orderBy: [EmojimoodOrderByWithRelationInput!], cursor: EmojimoodWhereUniqueInput, take: Int, skip: Int, distinct: [EmojimoodScalarFieldEnum!]): [Emojimood!]!
  emojimood(where: EmojimoodWhereUniqueInput!): Emojimood
  getAllThemes: [Theme!]!
}

enum QueryMode {
  default
  insensitive
}

union RecommendationResponseUnion = VenuesNearbyResponse | ComingAreaResponse | ErrorProfiling

type RejectedFriendsResponse {
  friends: Boolean!
}

type Relationship {
  id: ID!
  Profile: Profile
  profileId: String
  friendProfileId: String!
  RelationshipStatus: [RelationshipStatus!]!
  venueMetAt: String
  createdAt: DateTime!
  updatedAt: DateTime!
  friendProfile: Profile
}

input RelationshipCountOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  friendProfileId: SortOrder
  RelationshipStatus: SortOrder
  venueMetAt: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input RelationshipCreateInput {
  id: String
  friendProfileId: String!
  RelationshipStatus: [RelationshipStatus!]
  venueMetAt: String
  createdAt: DateTime
  updatedAt: DateTime
  Profile: ProfileCreateNestedOneWithoutRelationshipsInput
}

input RelationshipCreateManyInput {
  id: String
  profileId: String
  friendProfileId: String!
  RelationshipStatus: [RelationshipStatus!]
  venueMetAt: String
  createdAt: DateTime
  updatedAt: DateTime
}

input RelationshipCreateManyProfileInput {
  id: String
  friendProfileId: String!
  RelationshipStatus: [RelationshipStatus!]
  venueMetAt: String
  createdAt: DateTime
  updatedAt: DateTime
}

input RelationshipCreateManyProfileInputEnvelope {
  data: [RelationshipCreateManyProfileInput!]!
  skipDuplicates: Boolean
}

input RelationshipCreateNestedManyWithoutProfileInput {
  create: RelationshipCreateWithoutProfileInput
  connectOrCreate: [RelationshipCreateOrConnectWithoutProfileInput!]
  createMany: RelationshipCreateManyProfileInputEnvelope
  connect: [RelationshipWhereUniqueInput!]
}

input RelationshipCreateOrConnectWithoutProfileInput {
  where: RelationshipWhereUniqueInput!
  create: RelationshipCreateWithoutProfileInput!
}

input RelationshipCreateRelationshipStatusInput {
  set: [RelationshipStatus!]!
}

input RelationshipCreateWithoutProfileInput {
  id: String
  friendProfileId: String!
  RelationshipStatus: [RelationshipStatus!]
  venueMetAt: String
  createdAt: DateTime
  updatedAt: DateTime
}

input RelationshipListRelationFilter {
  every: RelationshipWhereInput
  some: RelationshipWhereInput
  none: RelationshipWhereInput
}

input RelationshipMaxOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  friendProfileId: SortOrder
  venueMetAt: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input RelationshipMinOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  friendProfileId: SortOrder
  venueMetAt: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input RelationshipOrderByRelationAggregateInput {
  _count: SortOrder
}

input RelationshipOrderByWithAggregationInput {
  id: SortOrder
  profileId: SortOrder
  friendProfileId: SortOrder
  RelationshipStatus: SortOrder
  venueMetAt: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: RelationshipCountOrderByAggregateInput
  _max: RelationshipMaxOrderByAggregateInput
  _min: RelationshipMinOrderByAggregateInput
}

input RelationshipOrderByWithRelationInput {
  id: SortOrder
  profileId: SortOrder
  friendProfileId: SortOrder
  RelationshipStatus: SortOrder
  venueMetAt: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  Profile: ProfileOrderByWithRelationInput
}

enum RelationshipScalarFieldEnum {
  id
  profileId
  friendProfileId
  RelationshipStatus
  venueMetAt
  createdAt
  updatedAt
}

input RelationshipScalarWhereInput {
  AND: [RelationshipScalarWhereInput!]
  OR: [RelationshipScalarWhereInput!]
  NOT: [RelationshipScalarWhereInput!]
  id: StringFilter
  profileId: StringNullableFilter
  friendProfileId: StringFilter
  RelationshipStatus: EnumRelationshipStatusNullableListFilter
  venueMetAt: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input RelationshipScalarWhereWithAggregatesInput {
  AND: [RelationshipScalarWhereWithAggregatesInput!]
  OR: [RelationshipScalarWhereWithAggregatesInput!]
  NOT: [RelationshipScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  profileId: StringNullableWithAggregatesFilter
  friendProfileId: StringWithAggregatesFilter
  RelationshipStatus: EnumRelationshipStatusNullableListFilter
  venueMetAt: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

enum RelationshipStatus {
  FRIENDS
  DATING
}

input RelationshipUpdateInput {
  id: StringFieldUpdateOperationsInput
  friendProfileId: StringFieldUpdateOperationsInput
  RelationshipStatus: [RelationshipStatus!]
  venueMetAt: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneWithoutRelationshipsNestedInput
}

input RelationshipUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  friendProfileId: StringFieldUpdateOperationsInput
  RelationshipStatus: [RelationshipStatus!]
  venueMetAt: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RelationshipUpdateManyWithWhereWithoutProfileInput {
  where: RelationshipScalarWhereInput!
  data: RelationshipUpdateManyMutationInput!
}

input RelationshipUpdateManyWithoutProfileNestedInput {
  create: RelationshipCreateWithoutProfileInput
  connectOrCreate: [RelationshipCreateOrConnectWithoutProfileInput!]
  upsert: [RelationshipUpsertWithWhereUniqueWithoutProfileInput!]
  createMany: RelationshipCreateManyProfileInputEnvelope
  set: [RelationshipWhereUniqueInput!]
  disconnect: [RelationshipWhereUniqueInput!]
  delete: [RelationshipWhereUniqueInput!]
  connect: [RelationshipWhereUniqueInput!]
  update: [RelationshipUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [RelationshipUpdateManyWithWhereWithoutProfileInput!]
  deleteMany: [RelationshipScalarWhereInput!]
}

input RelationshipUpdateRelationshipStatusInput {
  set: [RelationshipStatus!]
  push: [RelationshipStatus!]
}

input RelationshipUpdateWithWhereUniqueWithoutProfileInput {
  where: RelationshipWhereUniqueInput!
  data: RelationshipUpdateWithoutProfileInput!
}

input RelationshipUpdateWithoutProfileInput {
  id: StringFieldUpdateOperationsInput
  friendProfileId: StringFieldUpdateOperationsInput
  RelationshipStatus: [RelationshipStatus!]
  venueMetAt: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RelationshipUpsertWithWhereUniqueWithoutProfileInput {
  where: RelationshipWhereUniqueInput!
  update: RelationshipUpdateWithoutProfileInput!
  create: RelationshipCreateWithoutProfileInput!
}

input RelationshipWhereInput {
  AND: [RelationshipWhereInput!]
  OR: [RelationshipWhereInput!]
  NOT: [RelationshipWhereInput!]
  id: StringFilter
  profileId: StringNullableFilter
  friendProfileId: StringFilter
  RelationshipStatus: EnumRelationshipStatusNullableListFilter
  venueMetAt: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  Profile: ProfileWhereInput
}

input RelationshipWhereUniqueInput {
  id: String
}

type SearchAreaMetrics {
  id: ID!
  h3Index15: String
  timesSearched: Int!
  H3Index6VenueRecommendation: H3Index6VenueRecommendation
  h3Index6VenueRecommendationId: String
  SearchesService: SearchesService
  searchesServiceId: String
  createdAt: DateTime!
  H3Index5VenueRecommendation: H3Index5VenueRecommendation
  h3Index5VenueRecommendationId: String
}

input SearchAreaMetricsAvgOrderByAggregateInput {
  id: SortOrder
  timesSearched: SortOrder
}

input SearchAreaMetricsCountOrderByAggregateInput {
  id: SortOrder
  h3Index15: SortOrder
  timesSearched: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  searchesServiceId: SortOrder
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
}

input SearchAreaMetricsCreateInput {
  h3Index15: String
  timesSearched: Int
  createdAt: DateTime
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutSearchAreaMetricsInput
  SearchesService: SearchesServiceCreateNestedOneWithoutSearchAreaMetricsInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutSearchAreaMetricsInput
}

input SearchAreaMetricsCreateManyH3Index5VenueRecommendationInput {
  id: Int
  h3Index15: String
  timesSearched: Int
  h3Index6VenueRecommendationId: String
  searchesServiceId: String
  createdAt: DateTime
}

input SearchAreaMetricsCreateManyH3Index5VenueRecommendationInputEnvelope {
  data: [SearchAreaMetricsCreateManyH3Index5VenueRecommendationInput!]!
  skipDuplicates: Boolean
}

input SearchAreaMetricsCreateManyH3Index6VenueRecommendationInput {
  id: Int
  h3Index15: String
  timesSearched: Int
  searchesServiceId: String
  createdAt: DateTime
  h3Index5VenueRecommendationId: String
}

input SearchAreaMetricsCreateManyH3Index6VenueRecommendationInputEnvelope {
  data: [SearchAreaMetricsCreateManyH3Index6VenueRecommendationInput!]!
  skipDuplicates: Boolean
}

input SearchAreaMetricsCreateManyInput {
  id: Int
  h3Index15: String
  timesSearched: Int
  h3Index6VenueRecommendationId: String
  searchesServiceId: String
  createdAt: DateTime
  h3Index5VenueRecommendationId: String
}

input SearchAreaMetricsCreateManySearchesServiceInput {
  id: Int
  h3Index15: String
  timesSearched: Int
  h3Index6VenueRecommendationId: String
  createdAt: DateTime
  h3Index5VenueRecommendationId: String
}

input SearchAreaMetricsCreateManySearchesServiceInputEnvelope {
  data: [SearchAreaMetricsCreateManySearchesServiceInput!]!
  skipDuplicates: Boolean
}

input SearchAreaMetricsCreateNestedManyWithoutH3Index5VenueRecommendationInput {
  create: SearchAreaMetricsCreateWithoutH3Index5VenueRecommendationInput
  connectOrCreate: [SearchAreaMetricsCreateOrConnectWithoutH3Index5VenueRecommendationInput!]
  createMany: SearchAreaMetricsCreateManyH3Index5VenueRecommendationInputEnvelope
  connect: [SearchAreaMetricsWhereUniqueInput!]
}

input SearchAreaMetricsCreateNestedManyWithoutH3Index6VenueRecommendationInput {
  create: SearchAreaMetricsCreateWithoutH3Index6VenueRecommendationInput
  connectOrCreate: [SearchAreaMetricsCreateOrConnectWithoutH3Index6VenueRecommendationInput!]
  createMany: SearchAreaMetricsCreateManyH3Index6VenueRecommendationInputEnvelope
  connect: [SearchAreaMetricsWhereUniqueInput!]
}

input SearchAreaMetricsCreateNestedManyWithoutSearchesServiceInput {
  create: SearchAreaMetricsCreateWithoutSearchesServiceInput
  connectOrCreate: [SearchAreaMetricsCreateOrConnectWithoutSearchesServiceInput!]
  createMany: SearchAreaMetricsCreateManySearchesServiceInputEnvelope
  connect: [SearchAreaMetricsWhereUniqueInput!]
}

input SearchAreaMetricsCreateOrConnectWithoutH3Index5VenueRecommendationInput {
  where: SearchAreaMetricsWhereUniqueInput!
  create: SearchAreaMetricsCreateWithoutH3Index5VenueRecommendationInput!
}

input SearchAreaMetricsCreateOrConnectWithoutH3Index6VenueRecommendationInput {
  where: SearchAreaMetricsWhereUniqueInput!
  create: SearchAreaMetricsCreateWithoutH3Index6VenueRecommendationInput!
}

input SearchAreaMetricsCreateOrConnectWithoutSearchesServiceInput {
  where: SearchAreaMetricsWhereUniqueInput!
  create: SearchAreaMetricsCreateWithoutSearchesServiceInput!
}

input SearchAreaMetricsCreateWithoutH3Index5VenueRecommendationInput {
  h3Index15: String
  timesSearched: Int
  createdAt: DateTime
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutSearchAreaMetricsInput
  SearchesService: SearchesServiceCreateNestedOneWithoutSearchAreaMetricsInput
}

input SearchAreaMetricsCreateWithoutH3Index6VenueRecommendationInput {
  h3Index15: String
  timesSearched: Int
  createdAt: DateTime
  SearchesService: SearchesServiceCreateNestedOneWithoutSearchAreaMetricsInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutSearchAreaMetricsInput
}

input SearchAreaMetricsCreateWithoutSearchesServiceInput {
  h3Index15: String
  timesSearched: Int
  createdAt: DateTime
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutSearchAreaMetricsInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutSearchAreaMetricsInput
}

input SearchAreaMetricsListRelationFilter {
  every: SearchAreaMetricsWhereInput
  some: SearchAreaMetricsWhereInput
  none: SearchAreaMetricsWhereInput
}

input SearchAreaMetricsMaxOrderByAggregateInput {
  id: SortOrder
  h3Index15: SortOrder
  timesSearched: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  searchesServiceId: SortOrder
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
}

input SearchAreaMetricsMinOrderByAggregateInput {
  id: SortOrder
  h3Index15: SortOrder
  timesSearched: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  searchesServiceId: SortOrder
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
}

input SearchAreaMetricsOrderByRelationAggregateInput {
  _count: SortOrder
}

input SearchAreaMetricsOrderByWithAggregationInput {
  id: SortOrder
  h3Index15: SortOrder
  timesSearched: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  searchesServiceId: SortOrder
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
  _count: SearchAreaMetricsCountOrderByAggregateInput
  _avg: SearchAreaMetricsAvgOrderByAggregateInput
  _max: SearchAreaMetricsMaxOrderByAggregateInput
  _min: SearchAreaMetricsMinOrderByAggregateInput
  _sum: SearchAreaMetricsSumOrderByAggregateInput
}

input SearchAreaMetricsOrderByWithRelationInput {
  id: SortOrder
  h3Index15: SortOrder
  timesSearched: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  searchesServiceId: SortOrder
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
  H3Index6VenueRecommendation: H3Index6VenueRecommendationOrderByWithRelationInput
  SearchesService: SearchesServiceOrderByWithRelationInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationOrderByWithRelationInput
}

enum SearchAreaMetricsScalarFieldEnum {
  id
  h3Index15
  timesSearched
  h3Index6VenueRecommendationId
  searchesServiceId
  createdAt
  h3Index5VenueRecommendationId
}

input SearchAreaMetricsScalarWhereInput {
  AND: [SearchAreaMetricsScalarWhereInput!]
  OR: [SearchAreaMetricsScalarWhereInput!]
  NOT: [SearchAreaMetricsScalarWhereInput!]
  id: IntFilter
  h3Index15: StringNullableFilter
  timesSearched: IntFilter
  h3Index6VenueRecommendationId: StringNullableFilter
  searchesServiceId: StringNullableFilter
  createdAt: DateTimeFilter
  h3Index5VenueRecommendationId: StringNullableFilter
}

input SearchAreaMetricsScalarWhereWithAggregatesInput {
  AND: [SearchAreaMetricsScalarWhereWithAggregatesInput!]
  OR: [SearchAreaMetricsScalarWhereWithAggregatesInput!]
  NOT: [SearchAreaMetricsScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  h3Index15: StringNullableWithAggregatesFilter
  timesSearched: IntWithAggregatesFilter
  h3Index6VenueRecommendationId: StringNullableWithAggregatesFilter
  searchesServiceId: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  h3Index5VenueRecommendationId: StringNullableWithAggregatesFilter
}

input SearchAreaMetricsSumOrderByAggregateInput {
  id: SortOrder
  timesSearched: SortOrder
}

input SearchAreaMetricsUpdateInput {
  h3Index15: NullableStringFieldUpdateOperationsInput
  timesSearched: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutSearchAreaMetricsNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutSearchAreaMetricsNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutSearchAreaMetricsNestedInput
}

input SearchAreaMetricsUpdateManyMutationInput {
  h3Index15: NullableStringFieldUpdateOperationsInput
  timesSearched: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}

input SearchAreaMetricsUpdateManyWithWhereWithoutH3Index5VenueRecommendationInput {
  where: SearchAreaMetricsScalarWhereInput!
  data: SearchAreaMetricsUpdateManyMutationInput!
}

input SearchAreaMetricsUpdateManyWithWhereWithoutH3Index6VenueRecommendationInput {
  where: SearchAreaMetricsScalarWhereInput!
  data: SearchAreaMetricsUpdateManyMutationInput!
}

input SearchAreaMetricsUpdateManyWithWhereWithoutSearchesServiceInput {
  where: SearchAreaMetricsScalarWhereInput!
  data: SearchAreaMetricsUpdateManyMutationInput!
}

input SearchAreaMetricsUpdateManyWithoutH3Index5VenueRecommendationNestedInput {
  create: SearchAreaMetricsCreateWithoutH3Index5VenueRecommendationInput
  connectOrCreate: [SearchAreaMetricsCreateOrConnectWithoutH3Index5VenueRecommendationInput!]
  upsert: [SearchAreaMetricsUpsertWithWhereUniqueWithoutH3Index5VenueRecommendationInput!]
  createMany: SearchAreaMetricsCreateManyH3Index5VenueRecommendationInputEnvelope
  set: [SearchAreaMetricsWhereUniqueInput!]
  disconnect: [SearchAreaMetricsWhereUniqueInput!]
  delete: [SearchAreaMetricsWhereUniqueInput!]
  connect: [SearchAreaMetricsWhereUniqueInput!]
  update: [SearchAreaMetricsUpdateWithWhereUniqueWithoutH3Index5VenueRecommendationInput!]
  updateMany: [SearchAreaMetricsUpdateManyWithWhereWithoutH3Index5VenueRecommendationInput!]
  deleteMany: [SearchAreaMetricsScalarWhereInput!]
}

input SearchAreaMetricsUpdateManyWithoutH3Index6VenueRecommendationNestedInput {
  create: SearchAreaMetricsCreateWithoutH3Index6VenueRecommendationInput
  connectOrCreate: [SearchAreaMetricsCreateOrConnectWithoutH3Index6VenueRecommendationInput!]
  upsert: [SearchAreaMetricsUpsertWithWhereUniqueWithoutH3Index6VenueRecommendationInput!]
  createMany: SearchAreaMetricsCreateManyH3Index6VenueRecommendationInputEnvelope
  set: [SearchAreaMetricsWhereUniqueInput!]
  disconnect: [SearchAreaMetricsWhereUniqueInput!]
  delete: [SearchAreaMetricsWhereUniqueInput!]
  connect: [SearchAreaMetricsWhereUniqueInput!]
  update: [SearchAreaMetricsUpdateWithWhereUniqueWithoutH3Index6VenueRecommendationInput!]
  updateMany: [SearchAreaMetricsUpdateManyWithWhereWithoutH3Index6VenueRecommendationInput!]
  deleteMany: [SearchAreaMetricsScalarWhereInput!]
}

input SearchAreaMetricsUpdateManyWithoutSearchesServiceNestedInput {
  create: SearchAreaMetricsCreateWithoutSearchesServiceInput
  connectOrCreate: [SearchAreaMetricsCreateOrConnectWithoutSearchesServiceInput!]
  upsert: [SearchAreaMetricsUpsertWithWhereUniqueWithoutSearchesServiceInput!]
  createMany: SearchAreaMetricsCreateManySearchesServiceInputEnvelope
  set: [SearchAreaMetricsWhereUniqueInput!]
  disconnect: [SearchAreaMetricsWhereUniqueInput!]
  delete: [SearchAreaMetricsWhereUniqueInput!]
  connect: [SearchAreaMetricsWhereUniqueInput!]
  update: [SearchAreaMetricsUpdateWithWhereUniqueWithoutSearchesServiceInput!]
  updateMany: [SearchAreaMetricsUpdateManyWithWhereWithoutSearchesServiceInput!]
  deleteMany: [SearchAreaMetricsScalarWhereInput!]
}

input SearchAreaMetricsUpdateWithWhereUniqueWithoutH3Index5VenueRecommendationInput {
  where: SearchAreaMetricsWhereUniqueInput!
  data: SearchAreaMetricsUpdateWithoutH3Index5VenueRecommendationInput!
}

input SearchAreaMetricsUpdateWithWhereUniqueWithoutH3Index6VenueRecommendationInput {
  where: SearchAreaMetricsWhereUniqueInput!
  data: SearchAreaMetricsUpdateWithoutH3Index6VenueRecommendationInput!
}

input SearchAreaMetricsUpdateWithWhereUniqueWithoutSearchesServiceInput {
  where: SearchAreaMetricsWhereUniqueInput!
  data: SearchAreaMetricsUpdateWithoutSearchesServiceInput!
}

input SearchAreaMetricsUpdateWithoutH3Index5VenueRecommendationInput {
  h3Index15: NullableStringFieldUpdateOperationsInput
  timesSearched: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutSearchAreaMetricsNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutSearchAreaMetricsNestedInput
}

input SearchAreaMetricsUpdateWithoutH3Index6VenueRecommendationInput {
  h3Index15: NullableStringFieldUpdateOperationsInput
  timesSearched: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  SearchesService: SearchesServiceUpdateOneWithoutSearchAreaMetricsNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutSearchAreaMetricsNestedInput
}

input SearchAreaMetricsUpdateWithoutSearchesServiceInput {
  h3Index15: NullableStringFieldUpdateOperationsInput
  timesSearched: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutSearchAreaMetricsNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutSearchAreaMetricsNestedInput
}

input SearchAreaMetricsUpsertWithWhereUniqueWithoutH3Index5VenueRecommendationInput {
  where: SearchAreaMetricsWhereUniqueInput!
  update: SearchAreaMetricsUpdateWithoutH3Index5VenueRecommendationInput!
  create: SearchAreaMetricsCreateWithoutH3Index5VenueRecommendationInput!
}

input SearchAreaMetricsUpsertWithWhereUniqueWithoutH3Index6VenueRecommendationInput {
  where: SearchAreaMetricsWhereUniqueInput!
  update: SearchAreaMetricsUpdateWithoutH3Index6VenueRecommendationInput!
  create: SearchAreaMetricsCreateWithoutH3Index6VenueRecommendationInput!
}

input SearchAreaMetricsUpsertWithWhereUniqueWithoutSearchesServiceInput {
  where: SearchAreaMetricsWhereUniqueInput!
  update: SearchAreaMetricsUpdateWithoutSearchesServiceInput!
  create: SearchAreaMetricsCreateWithoutSearchesServiceInput!
}

input SearchAreaMetricsWhereInput {
  AND: [SearchAreaMetricsWhereInput!]
  OR: [SearchAreaMetricsWhereInput!]
  NOT: [SearchAreaMetricsWhereInput!]
  id: IntFilter
  h3Index15: StringNullableFilter
  timesSearched: IntFilter
  h3Index6VenueRecommendationId: StringNullableFilter
  searchesServiceId: StringNullableFilter
  createdAt: DateTimeFilter
  h3Index5VenueRecommendationId: StringNullableFilter
  H3Index6VenueRecommendation: H3Index6VenueRecommendationWhereInput
  SearchesService: SearchesServiceWhereInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationWhereInput
}

input SearchAreaMetricsWhereUniqueInput {
  id: Int
}

type SearchesService {
  id: ID!
  Profile: Profile!
  profileId: String!
  searches: [Json!]!
  SearchAreaMetrics(where: SearchAreaMetricsWhereInput, orderBy: [SearchAreaMetricsOrderByWithRelationInput!], cursor: SearchAreaMetricsWhereUniqueInput, take: Int, skip: Int, distinct: [SearchAreaMetricsScalarFieldEnum!]): [SearchAreaMetrics!]!
  createdAt: DateTime!
}

input SearchesServiceCountOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  searches: SortOrder
  createdAt: SortOrder
}

input SearchesServiceCreateInput {
  id: String
  searches: [Json!]
  createdAt: DateTime
  Profile: ProfileCreateNestedOneWithoutSearchesServiceInput!
  SearchAreaMetrics: SearchAreaMetricsCreateNestedManyWithoutSearchesServiceInput
}

input SearchesServiceCreateManyInput {
  id: String
  profileId: String!
  searches: [Json!]
  createdAt: DateTime
}

input SearchesServiceCreateNestedOneWithoutProfileInput {
  create: SearchesServiceCreateWithoutProfileInput
  connectOrCreate: SearchesServiceCreateOrConnectWithoutProfileInput
  connect: SearchesServiceWhereUniqueInput
}

input SearchesServiceCreateNestedOneWithoutSearchAreaMetricsInput {
  create: SearchesServiceCreateWithoutSearchAreaMetricsInput
  connectOrCreate: SearchesServiceCreateOrConnectWithoutSearchAreaMetricsInput
  connect: SearchesServiceWhereUniqueInput
}

input SearchesServiceCreateOrConnectWithoutProfileInput {
  where: SearchesServiceWhereUniqueInput!
  create: SearchesServiceCreateWithoutProfileInput!
}

input SearchesServiceCreateOrConnectWithoutSearchAreaMetricsInput {
  where: SearchesServiceWhereUniqueInput!
  create: SearchesServiceCreateWithoutSearchAreaMetricsInput!
}

input SearchesServiceCreateWithoutProfileInput {
  id: String
  searches: [Json!]
  createdAt: DateTime
  SearchAreaMetrics: SearchAreaMetricsCreateNestedManyWithoutSearchesServiceInput
}

input SearchesServiceCreateWithoutSearchAreaMetricsInput {
  id: String
  searches: [Json!]
  createdAt: DateTime
  Profile: ProfileCreateNestedOneWithoutSearchesServiceInput!
}

input SearchesServiceCreatesearchesInput {
  set: [Json!]!
}

input SearchesServiceMaxOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  createdAt: SortOrder
}

input SearchesServiceMinOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  createdAt: SortOrder
}

input SearchesServiceOrderByWithAggregationInput {
  id: SortOrder
  profileId: SortOrder
  searches: SortOrder
  createdAt: SortOrder
  _count: SearchesServiceCountOrderByAggregateInput
  _max: SearchesServiceMaxOrderByAggregateInput
  _min: SearchesServiceMinOrderByAggregateInput
}

input SearchesServiceOrderByWithRelationInput {
  id: SortOrder
  profileId: SortOrder
  searches: SortOrder
  createdAt: SortOrder
  Profile: ProfileOrderByWithRelationInput
  SearchAreaMetrics: SearchAreaMetricsOrderByRelationAggregateInput
}

input SearchesServiceRelationFilter {
  is: SearchesServiceWhereInput
  isNot: SearchesServiceWhereInput
}

enum SearchesServiceScalarFieldEnum {
  id
  profileId
  searches
  createdAt
}

input SearchesServiceScalarWhereWithAggregatesInput {
  AND: [SearchesServiceScalarWhereWithAggregatesInput!]
  OR: [SearchesServiceScalarWhereWithAggregatesInput!]
  NOT: [SearchesServiceScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  searches: JsonNullableListFilter
  createdAt: DateTimeWithAggregatesFilter
}

input SearchesServiceUpdateInput {
  id: StringFieldUpdateOperationsInput
  searches: [Json!]
  createdAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutSearchesServiceNestedInput
  SearchAreaMetrics: SearchAreaMetricsUpdateManyWithoutSearchesServiceNestedInput
}

input SearchesServiceUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  searches: [Json!]
  createdAt: DateTimeFieldUpdateOperationsInput
}

input SearchesServiceUpdateOneWithoutProfileNestedInput {
  create: SearchesServiceCreateWithoutProfileInput
  connectOrCreate: SearchesServiceCreateOrConnectWithoutProfileInput
  upsert: SearchesServiceUpsertWithoutProfileInput
  disconnect: Boolean
  delete: Boolean
  connect: SearchesServiceWhereUniqueInput
  update: SearchesServiceUpdateWithoutProfileInput
}

input SearchesServiceUpdateOneWithoutSearchAreaMetricsNestedInput {
  create: SearchesServiceCreateWithoutSearchAreaMetricsInput
  connectOrCreate: SearchesServiceCreateOrConnectWithoutSearchAreaMetricsInput
  upsert: SearchesServiceUpsertWithoutSearchAreaMetricsInput
  disconnect: Boolean
  delete: Boolean
  connect: SearchesServiceWhereUniqueInput
  update: SearchesServiceUpdateWithoutSearchAreaMetricsInput
}

input SearchesServiceUpdateWithoutProfileInput {
  id: StringFieldUpdateOperationsInput
  searches: [Json!]
  createdAt: DateTimeFieldUpdateOperationsInput
  SearchAreaMetrics: SearchAreaMetricsUpdateManyWithoutSearchesServiceNestedInput
}

input SearchesServiceUpdateWithoutSearchAreaMetricsInput {
  id: StringFieldUpdateOperationsInput
  searches: [Json!]
  createdAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutSearchesServiceNestedInput
}

input SearchesServiceUpdatesearchesInput {
  set: [Json!]
  push: Json
}

input SearchesServiceUpsertWithoutProfileInput {
  update: SearchesServiceUpdateWithoutProfileInput!
  create: SearchesServiceCreateWithoutProfileInput!
}

input SearchesServiceUpsertWithoutSearchAreaMetricsInput {
  update: SearchesServiceUpdateWithoutSearchAreaMetricsInput!
  create: SearchesServiceCreateWithoutSearchAreaMetricsInput!
}

input SearchesServiceWhereInput {
  AND: [SearchesServiceWhereInput!]
  OR: [SearchesServiceWhereInput!]
  NOT: [SearchesServiceWhereInput!]
  id: StringFilter
  profileId: StringFilter
  searches: JsonNullableListFilter
  createdAt: DateTimeFilter
  Profile: ProfileWhereInput
  SearchAreaMetrics: SearchAreaMetricsListRelationFilter
}

input SearchesServiceWhereUniqueInput {
  id: String
  profileId: String
}

enum SecureDataType {
  FRIENDING
  JOINING
}

input SecuredDataKeysAvgOrderByAggregateInput {
  used: SortOrder
}

input SecuredDataKeysCountOrderByAggregateInput {
  id: SortOrder
  SecureDataType: SortOrder
  key: SortOrder
  used: SortOrder
  profileId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input SecuredDataKeysCreateInput {
  id: String
  SecureDataType: SecureDataType!
  key: String!
  used: Int
  createdAt: DateTime
  updatedAt: DateTime
  Profile: ProfileCreateNestedOneWithoutSecuredDataKeysInput!
}

input SecuredDataKeysCreateManyInput {
  id: String
  SecureDataType: SecureDataType!
  key: String!
  used: Int
  profileId: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input SecuredDataKeysCreateManyProfileInput {
  id: String
  SecureDataType: SecureDataType!
  key: String!
  used: Int
  createdAt: DateTime
  updatedAt: DateTime
}

input SecuredDataKeysCreateManyProfileInputEnvelope {
  data: [SecuredDataKeysCreateManyProfileInput!]!
  skipDuplicates: Boolean
}

input SecuredDataKeysCreateNestedManyWithoutProfileInput {
  create: SecuredDataKeysCreateWithoutProfileInput
  connectOrCreate: [SecuredDataKeysCreateOrConnectWithoutProfileInput!]
  createMany: SecuredDataKeysCreateManyProfileInputEnvelope
  connect: [SecuredDataKeysWhereUniqueInput!]
}

input SecuredDataKeysCreateOrConnectWithoutProfileInput {
  where: SecuredDataKeysWhereUniqueInput!
  create: SecuredDataKeysCreateWithoutProfileInput!
}

input SecuredDataKeysCreateWithoutProfileInput {
  id: String
  SecureDataType: SecureDataType!
  key: String!
  used: Int
  createdAt: DateTime
  updatedAt: DateTime
}

input SecuredDataKeysListRelationFilter {
  every: SecuredDataKeysWhereInput
  some: SecuredDataKeysWhereInput
  none: SecuredDataKeysWhereInput
}

input SecuredDataKeysMaxOrderByAggregateInput {
  id: SortOrder
  SecureDataType: SortOrder
  key: SortOrder
  used: SortOrder
  profileId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input SecuredDataKeysMinOrderByAggregateInput {
  id: SortOrder
  SecureDataType: SortOrder
  key: SortOrder
  used: SortOrder
  profileId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input SecuredDataKeysOrderByRelationAggregateInput {
  _count: SortOrder
}

input SecuredDataKeysOrderByWithAggregationInput {
  id: SortOrder
  SecureDataType: SortOrder
  key: SortOrder
  used: SortOrder
  profileId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: SecuredDataKeysCountOrderByAggregateInput
  _avg: SecuredDataKeysAvgOrderByAggregateInput
  _max: SecuredDataKeysMaxOrderByAggregateInput
  _min: SecuredDataKeysMinOrderByAggregateInput
  _sum: SecuredDataKeysSumOrderByAggregateInput
}

input SecuredDataKeysOrderByWithRelationInput {
  id: SortOrder
  SecureDataType: SortOrder
  key: SortOrder
  used: SortOrder
  profileId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  Profile: ProfileOrderByWithRelationInput
}

enum SecuredDataKeysScalarFieldEnum {
  id
  SecureDataType
  key
  used
  profileId
  createdAt
  updatedAt
}

input SecuredDataKeysScalarWhereInput {
  AND: [SecuredDataKeysScalarWhereInput!]
  OR: [SecuredDataKeysScalarWhereInput!]
  NOT: [SecuredDataKeysScalarWhereInput!]
  id: StringFilter
  SecureDataType: EnumSecureDataTypeFilter
  key: StringFilter
  used: IntFilter
  profileId: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input SecuredDataKeysScalarWhereWithAggregatesInput {
  AND: [SecuredDataKeysScalarWhereWithAggregatesInput!]
  OR: [SecuredDataKeysScalarWhereWithAggregatesInput!]
  NOT: [SecuredDataKeysScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  SecureDataType: EnumSecureDataTypeWithAggregatesFilter
  key: StringWithAggregatesFilter
  used: IntWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input SecuredDataKeysSumOrderByAggregateInput {
  used: SortOrder
}

input SecuredDataKeysUpdateInput {
  id: StringFieldUpdateOperationsInput
  SecureDataType: EnumSecureDataTypeFieldUpdateOperationsInput
  key: StringFieldUpdateOperationsInput
  used: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutSecuredDataKeysNestedInput
}

input SecuredDataKeysUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  SecureDataType: EnumSecureDataTypeFieldUpdateOperationsInput
  key: StringFieldUpdateOperationsInput
  used: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SecuredDataKeysUpdateManyWithWhereWithoutProfileInput {
  where: SecuredDataKeysScalarWhereInput!
  data: SecuredDataKeysUpdateManyMutationInput!
}

input SecuredDataKeysUpdateManyWithoutProfileNestedInput {
  create: SecuredDataKeysCreateWithoutProfileInput
  connectOrCreate: [SecuredDataKeysCreateOrConnectWithoutProfileInput!]
  upsert: [SecuredDataKeysUpsertWithWhereUniqueWithoutProfileInput!]
  createMany: SecuredDataKeysCreateManyProfileInputEnvelope
  set: [SecuredDataKeysWhereUniqueInput!]
  disconnect: [SecuredDataKeysWhereUniqueInput!]
  delete: [SecuredDataKeysWhereUniqueInput!]
  connect: [SecuredDataKeysWhereUniqueInput!]
  update: [SecuredDataKeysUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [SecuredDataKeysUpdateManyWithWhereWithoutProfileInput!]
  deleteMany: [SecuredDataKeysScalarWhereInput!]
}

input SecuredDataKeysUpdateWithWhereUniqueWithoutProfileInput {
  where: SecuredDataKeysWhereUniqueInput!
  data: SecuredDataKeysUpdateWithoutProfileInput!
}

input SecuredDataKeysUpdateWithoutProfileInput {
  id: StringFieldUpdateOperationsInput
  SecureDataType: EnumSecureDataTypeFieldUpdateOperationsInput
  key: StringFieldUpdateOperationsInput
  used: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SecuredDataKeysUpsertWithWhereUniqueWithoutProfileInput {
  where: SecuredDataKeysWhereUniqueInput!
  update: SecuredDataKeysUpdateWithoutProfileInput!
  create: SecuredDataKeysCreateWithoutProfileInput!
}

input SecuredDataKeysWhereInput {
  AND: [SecuredDataKeysWhereInput!]
  OR: [SecuredDataKeysWhereInput!]
  NOT: [SecuredDataKeysWhereInput!]
  id: StringFilter
  SecureDataType: EnumSecureDataTypeFilter
  key: StringFilter
  used: IntFilter
  profileId: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  Profile: ProfileWhereInput
}

input SecuredDataKeysWhereUniqueInput {
  id: String
  key: String
}

input SettingsCountOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  messagePushNotifications: SortOrder
  eventPushNotifications: SortOrder
  PushNotifications: SortOrder
}

input SettingsCreateInput {
  id: String
  messagePushNotifications: Boolean!
  eventPushNotifications: Boolean!
  PushNotifications: Boolean!
  Profile: ProfileCreateNestedOneWithoutSettingsInput!
}

input SettingsCreateManyInput {
  id: String
  profileId: String!
  messagePushNotifications: Boolean!
  eventPushNotifications: Boolean!
  PushNotifications: Boolean!
}

input SettingsCreateNestedOneWithoutProfileInput {
  create: SettingsCreateWithoutProfileInput
  connectOrCreate: SettingsCreateOrConnectWithoutProfileInput
  connect: SettingsWhereUniqueInput
}

input SettingsCreateOrConnectWithoutProfileInput {
  where: SettingsWhereUniqueInput!
  create: SettingsCreateWithoutProfileInput!
}

input SettingsCreateWithoutProfileInput {
  id: String
  messagePushNotifications: Boolean!
  eventPushNotifications: Boolean!
  PushNotifications: Boolean!
}

input SettingsMaxOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  messagePushNotifications: SortOrder
  eventPushNotifications: SortOrder
  PushNotifications: SortOrder
}

input SettingsMinOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  messagePushNotifications: SortOrder
  eventPushNotifications: SortOrder
  PushNotifications: SortOrder
}

input SettingsOrderByWithAggregationInput {
  id: SortOrder
  profileId: SortOrder
  messagePushNotifications: SortOrder
  eventPushNotifications: SortOrder
  PushNotifications: SortOrder
  _count: SettingsCountOrderByAggregateInput
  _max: SettingsMaxOrderByAggregateInput
  _min: SettingsMinOrderByAggregateInput
}

input SettingsOrderByWithRelationInput {
  id: SortOrder
  profileId: SortOrder
  messagePushNotifications: SortOrder
  eventPushNotifications: SortOrder
  PushNotifications: SortOrder
  Profile: ProfileOrderByWithRelationInput
}

input SettingsRelationFilter {
  is: SettingsWhereInput
  isNot: SettingsWhereInput
}

enum SettingsScalarFieldEnum {
  id
  profileId
  messagePushNotifications
  eventPushNotifications
  PushNotifications
}

input SettingsScalarWhereWithAggregatesInput {
  AND: [SettingsScalarWhereWithAggregatesInput!]
  OR: [SettingsScalarWhereWithAggregatesInput!]
  NOT: [SettingsScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  messagePushNotifications: BoolWithAggregatesFilter
  eventPushNotifications: BoolWithAggregatesFilter
  PushNotifications: BoolWithAggregatesFilter
}

input SettingsUpdateInput {
  id: StringFieldUpdateOperationsInput
  messagePushNotifications: BoolFieldUpdateOperationsInput
  eventPushNotifications: BoolFieldUpdateOperationsInput
  PushNotifications: BoolFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutSettingsNestedInput
}

input SettingsUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  messagePushNotifications: BoolFieldUpdateOperationsInput
  eventPushNotifications: BoolFieldUpdateOperationsInput
  PushNotifications: BoolFieldUpdateOperationsInput
}

input SettingsUpdateOneWithoutProfileNestedInput {
  create: SettingsCreateWithoutProfileInput
  connectOrCreate: SettingsCreateOrConnectWithoutProfileInput
  upsert: SettingsUpsertWithoutProfileInput
  disconnect: Boolean
  delete: Boolean
  connect: SettingsWhereUniqueInput
  update: SettingsUpdateWithoutProfileInput
}

input SettingsUpdateWithoutProfileInput {
  id: StringFieldUpdateOperationsInput
  messagePushNotifications: BoolFieldUpdateOperationsInput
  eventPushNotifications: BoolFieldUpdateOperationsInput
  PushNotifications: BoolFieldUpdateOperationsInput
}

input SettingsUpsertWithoutProfileInput {
  update: SettingsUpdateWithoutProfileInput!
  create: SettingsCreateWithoutProfileInput!
}

input SettingsWhereInput {
  AND: [SettingsWhereInput!]
  OR: [SettingsWhereInput!]
  NOT: [SettingsWhereInput!]
  id: StringFilter
  profileId: StringFilter
  messagePushNotifications: BoolFilter
  eventPushNotifications: BoolFilter
  PushNotifications: BoolFilter
  Profile: ProfileWhereInput
}

input SettingsWhereUniqueInput {
  id: String
  profileId: String
}

enum SortOrder {
  asc
  desc
}

type State {
  id: ID!
  name: String!
  isoCode: String!
  Geometry: Geometry!
  geometryId: Int!
  Area(where: AreaWhereInput, orderBy: [AreaOrderByWithRelationInput!], cursor: AreaWhereUniqueInput, take: Int, skip: Int, distinct: [AreaScalarFieldEnum!]): [Area!]!
}

input StateAvgOrderByAggregateInput {
  geometryId: SortOrder
}

input StateCountOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  isoCode: SortOrder
  geometryId: SortOrder
}

input StateCreateInput {
  id: String
  name: String!
  isoCode: String!
  Geometry: GeometryCreateNestedOneWithoutStateInput!
  Area: AreaCreateNestedManyWithoutStateInput
}

input StateCreateManyInput {
  id: String
  name: String!
  isoCode: String!
  geometryId: Int!
}

input StateCreateNestedOneWithoutAreaInput {
  create: StateCreateWithoutAreaInput
  connectOrCreate: StateCreateOrConnectWithoutAreaInput
  connect: StateWhereUniqueInput
}

input StateCreateNestedOneWithoutGeometryInput {
  create: StateCreateWithoutGeometryInput
  connectOrCreate: StateCreateOrConnectWithoutGeometryInput
  connect: StateWhereUniqueInput
}

input StateCreateOrConnectWithoutAreaInput {
  where: StateWhereUniqueInput!
  create: StateCreateWithoutAreaInput!
}

input StateCreateOrConnectWithoutGeometryInput {
  where: StateWhereUniqueInput!
  create: StateCreateWithoutGeometryInput!
}

input StateCreateWithoutAreaInput {
  id: String
  name: String!
  isoCode: String!
  Geometry: GeometryCreateNestedOneWithoutStateInput!
}

input StateCreateWithoutGeometryInput {
  id: String
  name: String!
  isoCode: String!
  Area: AreaCreateNestedManyWithoutStateInput
}

input StateMaxOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  isoCode: SortOrder
  geometryId: SortOrder
}

input StateMinOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  isoCode: SortOrder
  geometryId: SortOrder
}

input StateOrderByWithAggregationInput {
  id: SortOrder
  name: SortOrder
  isoCode: SortOrder
  geometryId: SortOrder
  _count: StateCountOrderByAggregateInput
  _avg: StateAvgOrderByAggregateInput
  _max: StateMaxOrderByAggregateInput
  _min: StateMinOrderByAggregateInput
  _sum: StateSumOrderByAggregateInput
}

input StateOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  isoCode: SortOrder
  geometryId: SortOrder
  Geometry: GeometryOrderByWithRelationInput
  Area: AreaOrderByRelationAggregateInput
}

input StateRelationFilter {
  is: StateWhereInput
  isNot: StateWhereInput
}

type StateResponseObject {
  name: String!
  isoCode: String!
  countryCode: String!
  latitude: String
  longitude: String
}

enum StateScalarFieldEnum {
  id
  name
  isoCode
  geometryId
}

input StateScalarWhereWithAggregatesInput {
  AND: [StateScalarWhereWithAggregatesInput!]
  OR: [StateScalarWhereWithAggregatesInput!]
  NOT: [StateScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
  isoCode: StringWithAggregatesFilter
  geometryId: IntWithAggregatesFilter
}

input StateSumOrderByAggregateInput {
  geometryId: SortOrder
}

input StateUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  isoCode: StringFieldUpdateOperationsInput
  Geometry: GeometryUpdateOneRequiredWithoutStateNestedInput
  Area: AreaUpdateManyWithoutStateNestedInput
}

input StateUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  isoCode: StringFieldUpdateOperationsInput
}

input StateUpdateOneRequiredWithoutAreaNestedInput {
  create: StateCreateWithoutAreaInput
  connectOrCreate: StateCreateOrConnectWithoutAreaInput
  upsert: StateUpsertWithoutAreaInput
  connect: StateWhereUniqueInput
  update: StateUpdateWithoutAreaInput
}

input StateUpdateOneWithoutGeometryNestedInput {
  create: StateCreateWithoutGeometryInput
  connectOrCreate: StateCreateOrConnectWithoutGeometryInput
  upsert: StateUpsertWithoutGeometryInput
  disconnect: Boolean
  delete: Boolean
  connect: StateWhereUniqueInput
  update: StateUpdateWithoutGeometryInput
}

input StateUpdateWithoutAreaInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  isoCode: StringFieldUpdateOperationsInput
  Geometry: GeometryUpdateOneRequiredWithoutStateNestedInput
}

input StateUpdateWithoutGeometryInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  isoCode: StringFieldUpdateOperationsInput
  Area: AreaUpdateManyWithoutStateNestedInput
}

input StateUpsertWithoutAreaInput {
  update: StateUpdateWithoutAreaInput!
  create: StateCreateWithoutAreaInput!
}

input StateUpsertWithoutGeometryInput {
  update: StateUpdateWithoutGeometryInput!
  create: StateCreateWithoutGeometryInput!
}

input StateWhereInput {
  AND: [StateWhereInput!]
  OR: [StateWhereInput!]
  NOT: [StateWhereInput!]
  id: StringFilter
  name: StringFilter
  isoCode: StringFilter
  geometryId: IntFilter
  Geometry: GeometryWhereInput
  Area: AreaListRelationFilter
}

input StateWhereUniqueInput {
  id: String
  name: String
  isoCode: String
  geometryId: Int
}

type Story {
  id: ID!
  date: DateTime!
  Profile: Profile!
  emojimood: [Emojimood!]!
  photos: [Photo!]!
  startDate: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime
}

input StoryCountOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  date: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input StoryCreateInput {
  id: String
  date: DateTime!
  createdAt: DateTime
  updatedAt: DateTime
  photos: PhotoCreateNestedManyWithoutStoryInput
  emojimood: EmojimoodCreateNestedManyWithoutStoryInput
  Profile: ProfileCreateNestedOneWithoutStorysInput
}

input StoryCreateManyInput {
  id: String
  profileId: String
  date: DateTime!
  createdAt: DateTime
  updatedAt: DateTime
}

input StoryCreateManyProfileInput {
  id: String
  date: DateTime!
  createdAt: DateTime
  updatedAt: DateTime
}

input StoryCreateManyProfileInputEnvelope {
  data: [StoryCreateManyProfileInput!]!
  skipDuplicates: Boolean
}

input StoryCreateNestedManyWithoutEmojimoodInput {
  create: StoryCreateWithoutEmojimoodInput
  connectOrCreate: [StoryCreateOrConnectWithoutEmojimoodInput!]
  connect: [StoryWhereUniqueInput!]
}

input StoryCreateNestedManyWithoutProfileInput {
  create: StoryCreateWithoutProfileInput
  connectOrCreate: [StoryCreateOrConnectWithoutProfileInput!]
  createMany: StoryCreateManyProfileInputEnvelope
  connect: [StoryWhereUniqueInput!]
}

input StoryCreateNestedOneWithoutPhotosInput {
  create: StoryCreateWithoutPhotosInput
  connectOrCreate: StoryCreateOrConnectWithoutPhotosInput
  connect: StoryWhereUniqueInput
}

input StoryCreateOrConnectWithoutEmojimoodInput {
  where: StoryWhereUniqueInput!
  create: StoryCreateWithoutEmojimoodInput!
}

input StoryCreateOrConnectWithoutPhotosInput {
  where: StoryWhereUniqueInput!
  create: StoryCreateWithoutPhotosInput!
}

input StoryCreateOrConnectWithoutProfileInput {
  where: StoryWhereUniqueInput!
  create: StoryCreateWithoutProfileInput!
}

input StoryCreateWithoutEmojimoodInput {
  id: String
  date: DateTime!
  createdAt: DateTime
  updatedAt: DateTime
  photos: PhotoCreateNestedManyWithoutStoryInput
  Profile: ProfileCreateNestedOneWithoutStorysInput
}

input StoryCreateWithoutPhotosInput {
  id: String
  date: DateTime!
  createdAt: DateTime
  updatedAt: DateTime
  emojimood: EmojimoodCreateNestedManyWithoutStoryInput
  Profile: ProfileCreateNestedOneWithoutStorysInput
}

input StoryCreateWithoutProfileInput {
  id: String
  date: DateTime!
  createdAt: DateTime
  updatedAt: DateTime
  photos: PhotoCreateNestedManyWithoutStoryInput
  emojimood: EmojimoodCreateNestedManyWithoutStoryInput
}

input StoryListRelationFilter {
  every: StoryWhereInput
  some: StoryWhereInput
  none: StoryWhereInput
}

input StoryMaxOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  date: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input StoryMinOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  date: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input StoryOrderByRelationAggregateInput {
  _count: SortOrder
}

input StoryOrderByWithAggregationInput {
  id: SortOrder
  profileId: SortOrder
  date: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: StoryCountOrderByAggregateInput
  _max: StoryMaxOrderByAggregateInput
  _min: StoryMinOrderByAggregateInput
}

input StoryOrderByWithRelationInput {
  id: SortOrder
  profileId: SortOrder
  date: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  photos: PhotoOrderByRelationAggregateInput
  emojimood: EmojimoodOrderByRelationAggregateInput
  Profile: ProfileOrderByWithRelationInput
}

input StoryRelationFilter {
  is: StoryWhereInput
  isNot: StoryWhereInput
}

enum StoryScalarFieldEnum {
  id
  profileId
  date
  createdAt
  updatedAt
}

input StoryScalarWhereInput {
  AND: [StoryScalarWhereInput!]
  OR: [StoryScalarWhereInput!]
  NOT: [StoryScalarWhereInput!]
  id: StringFilter
  profileId: StringNullableFilter
  date: DateTimeFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input StoryScalarWhereWithAggregatesInput {
  AND: [StoryScalarWhereWithAggregatesInput!]
  OR: [StoryScalarWhereWithAggregatesInput!]
  NOT: [StoryScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  profileId: StringNullableWithAggregatesFilter
  date: DateTimeWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input StoryUpdateInput {
  id: StringFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  photos: PhotoUpdateManyWithoutStoryNestedInput
  emojimood: EmojimoodUpdateManyWithoutStoryNestedInput
  Profile: ProfileUpdateOneWithoutStorysNestedInput
}

input StoryUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StoryUpdateManyWithWhereWithoutEmojimoodInput {
  where: StoryScalarWhereInput!
  data: StoryUpdateManyMutationInput!
}

input StoryUpdateManyWithWhereWithoutProfileInput {
  where: StoryScalarWhereInput!
  data: StoryUpdateManyMutationInput!
}

input StoryUpdateManyWithoutEmojimoodNestedInput {
  create: StoryCreateWithoutEmojimoodInput
  connectOrCreate: [StoryCreateOrConnectWithoutEmojimoodInput!]
  upsert: [StoryUpsertWithWhereUniqueWithoutEmojimoodInput!]
  set: [StoryWhereUniqueInput!]
  disconnect: [StoryWhereUniqueInput!]
  delete: [StoryWhereUniqueInput!]
  connect: [StoryWhereUniqueInput!]
  update: [StoryUpdateWithWhereUniqueWithoutEmojimoodInput!]
  updateMany: [StoryUpdateManyWithWhereWithoutEmojimoodInput!]
  deleteMany: [StoryScalarWhereInput!]
}

input StoryUpdateManyWithoutProfileNestedInput {
  create: StoryCreateWithoutProfileInput
  connectOrCreate: [StoryCreateOrConnectWithoutProfileInput!]
  upsert: [StoryUpsertWithWhereUniqueWithoutProfileInput!]
  createMany: StoryCreateManyProfileInputEnvelope
  set: [StoryWhereUniqueInput!]
  disconnect: [StoryWhereUniqueInput!]
  delete: [StoryWhereUniqueInput!]
  connect: [StoryWhereUniqueInput!]
  update: [StoryUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [StoryUpdateManyWithWhereWithoutProfileInput!]
  deleteMany: [StoryScalarWhereInput!]
}

input StoryUpdateOneWithoutPhotosNestedInput {
  create: StoryCreateWithoutPhotosInput
  connectOrCreate: StoryCreateOrConnectWithoutPhotosInput
  upsert: StoryUpsertWithoutPhotosInput
  disconnect: Boolean
  delete: Boolean
  connect: StoryWhereUniqueInput
  update: StoryUpdateWithoutPhotosInput
}

input StoryUpdateWithWhereUniqueWithoutEmojimoodInput {
  where: StoryWhereUniqueInput!
  data: StoryUpdateWithoutEmojimoodInput!
}

input StoryUpdateWithWhereUniqueWithoutProfileInput {
  where: StoryWhereUniqueInput!
  data: StoryUpdateWithoutProfileInput!
}

input StoryUpdateWithoutEmojimoodInput {
  id: StringFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  photos: PhotoUpdateManyWithoutStoryNestedInput
  Profile: ProfileUpdateOneWithoutStorysNestedInput
}

input StoryUpdateWithoutPhotosInput {
  id: StringFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  emojimood: EmojimoodUpdateManyWithoutStoryNestedInput
  Profile: ProfileUpdateOneWithoutStorysNestedInput
}

input StoryUpdateWithoutProfileInput {
  id: StringFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  photos: PhotoUpdateManyWithoutStoryNestedInput
  emojimood: EmojimoodUpdateManyWithoutStoryNestedInput
}

input StoryUpsertWithWhereUniqueWithoutEmojimoodInput {
  where: StoryWhereUniqueInput!
  update: StoryUpdateWithoutEmojimoodInput!
  create: StoryCreateWithoutEmojimoodInput!
}

input StoryUpsertWithWhereUniqueWithoutProfileInput {
  where: StoryWhereUniqueInput!
  update: StoryUpdateWithoutProfileInput!
  create: StoryCreateWithoutProfileInput!
}

input StoryUpsertWithoutPhotosInput {
  update: StoryUpdateWithoutPhotosInput!
  create: StoryCreateWithoutPhotosInput!
}

input StoryWhereInput {
  AND: [StoryWhereInput!]
  OR: [StoryWhereInput!]
  NOT: [StoryWhereInput!]
  id: StringFilter
  profileId: StringNullableFilter
  date: DateTimeFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  photos: PhotoListRelationFilter
  emojimood: EmojimoodListRelationFilter
  Profile: ProfileWhereInput
}

input StoryWhereUniqueInput {
  id: String
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringNullableFilter
}

input StringNullableListFilter {
  equals: [String!]
  has: String
  hasEvery: [String!]
  hasSome: [String!]
  isEmpty: Boolean
}

input StringNullableWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedStringNullableFilter
  _max: NestedStringNullableFilter
}

input StringWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedStringFilter
  _max: NestedStringFilter
}

type Tag {
  id: ID!
  name: String!
  emoji: String
  DetailInformation(where: DetailInformationWhereInput, orderBy: [DetailInformationOrderByWithRelationInput!], cursor: DetailInformationWhereUniqueInput, take: Int, skip: Int, distinct: [DetailInformationScalarFieldEnum!]): [DetailInformation!]!
  Category: Category
  categoryId: String
}

input TagAvgOrderByAggregateInput {
  id: SortOrder
}

input TagCountOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  emoji: SortOrder
  categoryId: SortOrder
}

input TagCreateInput {
  name: String!
  emoji: String
  DetailInformation: DetailInformationCreateNestedManyWithoutTagsInput
  Category: CategoryCreateNestedOneWithoutTagsInput
}

input TagCreateManyCategoryInput {
  id: Int
  name: String!
  emoji: String
}

input TagCreateManyCategoryInputEnvelope {
  data: [TagCreateManyCategoryInput!]!
  skipDuplicates: Boolean
}

input TagCreateManyInput {
  id: Int
  name: String!
  emoji: String
  categoryId: String
}

input TagCreateNestedManyWithoutCategoryInput {
  create: TagCreateWithoutCategoryInput
  connectOrCreate: [TagCreateOrConnectWithoutCategoryInput!]
  createMany: TagCreateManyCategoryInputEnvelope
  connect: [TagWhereUniqueInput!]
}

input TagCreateNestedManyWithoutDetailInformationInput {
  create: TagCreateWithoutDetailInformationInput
  connectOrCreate: [TagCreateOrConnectWithoutDetailInformationInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateOrConnectWithoutCategoryInput {
  where: TagWhereUniqueInput!
  create: TagCreateWithoutCategoryInput!
}

input TagCreateOrConnectWithoutDetailInformationInput {
  where: TagWhereUniqueInput!
  create: TagCreateWithoutDetailInformationInput!
}

input TagCreateWithoutCategoryInput {
  name: String!
  emoji: String
  DetailInformation: DetailInformationCreateNestedManyWithoutTagsInput
}

input TagCreateWithoutDetailInformationInput {
  name: String!
  emoji: String
  Category: CategoryCreateNestedOneWithoutTagsInput
}

input TagListRelationFilter {
  every: TagWhereInput
  some: TagWhereInput
  none: TagWhereInput
}

input TagMaxOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  emoji: SortOrder
  categoryId: SortOrder
}

input TagMinOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  emoji: SortOrder
  categoryId: SortOrder
}

input TagOrderByRelationAggregateInput {
  _count: SortOrder
}

input TagOrderByWithAggregationInput {
  id: SortOrder
  name: SortOrder
  emoji: SortOrder
  categoryId: SortOrder
  _count: TagCountOrderByAggregateInput
  _avg: TagAvgOrderByAggregateInput
  _max: TagMaxOrderByAggregateInput
  _min: TagMinOrderByAggregateInput
  _sum: TagSumOrderByAggregateInput
}

input TagOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  emoji: SortOrder
  categoryId: SortOrder
  DetailInformation: DetailInformationOrderByRelationAggregateInput
  Category: CategoryOrderByWithRelationInput
}

enum TagScalarFieldEnum {
  id
  name
  emoji
  categoryId
}

input TagScalarWhereInput {
  AND: [TagScalarWhereInput!]
  OR: [TagScalarWhereInput!]
  NOT: [TagScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  emoji: StringNullableFilter
  categoryId: StringNullableFilter
}

input TagScalarWhereWithAggregatesInput {
  AND: [TagScalarWhereWithAggregatesInput!]
  OR: [TagScalarWhereWithAggregatesInput!]
  NOT: [TagScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  emoji: StringNullableWithAggregatesFilter
  categoryId: StringNullableWithAggregatesFilter
}

input TagSumOrderByAggregateInput {
  id: SortOrder
}

input TagUpdateInput {
  name: StringFieldUpdateOperationsInput
  emoji: NullableStringFieldUpdateOperationsInput
  DetailInformation: DetailInformationUpdateManyWithoutTagsNestedInput
  Category: CategoryUpdateOneWithoutTagsNestedInput
}

input TagUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  emoji: NullableStringFieldUpdateOperationsInput
}

input TagUpdateManyWithWhereWithoutCategoryInput {
  where: TagScalarWhereInput!
  data: TagUpdateManyMutationInput!
}

input TagUpdateManyWithWhereWithoutDetailInformationInput {
  where: TagScalarWhereInput!
  data: TagUpdateManyMutationInput!
}

input TagUpdateManyWithoutCategoryNestedInput {
  create: TagCreateWithoutCategoryInput
  connectOrCreate: [TagCreateOrConnectWithoutCategoryInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutCategoryInput!]
  createMany: TagCreateManyCategoryInputEnvelope
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  connect: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutCategoryInput!]
  updateMany: [TagUpdateManyWithWhereWithoutCategoryInput!]
  deleteMany: [TagScalarWhereInput!]
}

input TagUpdateManyWithoutDetailInformationNestedInput {
  create: TagCreateWithoutDetailInformationInput
  connectOrCreate: [TagCreateOrConnectWithoutDetailInformationInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutDetailInformationInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  connect: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutDetailInformationInput!]
  updateMany: [TagUpdateManyWithWhereWithoutDetailInformationInput!]
  deleteMany: [TagScalarWhereInput!]
}

input TagUpdateWithWhereUniqueWithoutCategoryInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutCategoryInput!
}

input TagUpdateWithWhereUniqueWithoutDetailInformationInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutDetailInformationInput!
}

input TagUpdateWithoutCategoryInput {
  name: StringFieldUpdateOperationsInput
  emoji: NullableStringFieldUpdateOperationsInput
  DetailInformation: DetailInformationUpdateManyWithoutTagsNestedInput
}

input TagUpdateWithoutDetailInformationInput {
  name: StringFieldUpdateOperationsInput
  emoji: NullableStringFieldUpdateOperationsInput
  Category: CategoryUpdateOneWithoutTagsNestedInput
}

input TagUpsertWithWhereUniqueWithoutCategoryInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutCategoryInput!
  create: TagCreateWithoutCategoryInput!
}

input TagUpsertWithWhereUniqueWithoutDetailInformationInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutDetailInformationInput!
  create: TagCreateWithoutDetailInformationInput!
}

input TagWhereInput {
  AND: [TagWhereInput!]
  OR: [TagWhereInput!]
  NOT: [TagWhereInput!]
  id: IntFilter
  name: StringFilter
  emoji: StringNullableFilter
  categoryId: StringNullableFilter
  DetailInformation: DetailInformationListRelationFilter
  Category: CategoryWhereInput
}

input TagWhereUniqueInput {
  id: Int
}

type Theme {
  id: ID!
  name: String!
  ProfileTheme: [ProfileTheme!]!
  mobile: Json!
  web: Json!
  mobileVersions: [String!]!
  webVersions: [String!]!
  startDate: DateTime
  endDate: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ThemeCountOrderByAggregateInput {
  id: SortOrder
  mobileVersions: SortOrder
  webVersions: SortOrder
  name: SortOrder
  mobile: SortOrder
  web: SortOrder
  startDate: SortOrder
  endDate: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input ThemeCreateInput {
  id: String
  mobileVersions: [String!]
  webVersions: [String!]
  name: String!
  mobile: [Json!]
  web: [Json!]
  startDate: DateTime
  endDate: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  ProfileTheme: ProfileThemeCreateNestedManyWithoutThemeInput
}

input ThemeCreateManyInput {
  id: String
  mobileVersions: [String!]
  webVersions: [String!]
  name: String!
  mobile: [Json!]
  web: [Json!]
  startDate: DateTime
  endDate: DateTime
  createdAt: DateTime
  updatedAt: DateTime
}

input ThemeCreateNestedOneWithoutProfileThemeInput {
  create: ThemeCreateWithoutProfileThemeInput
  connectOrCreate: ThemeCreateOrConnectWithoutProfileThemeInput
  connect: ThemeWhereUniqueInput
}

input ThemeCreateOrConnectWithoutProfileThemeInput {
  where: ThemeWhereUniqueInput!
  create: ThemeCreateWithoutProfileThemeInput!
}

input ThemeCreateWithoutProfileThemeInput {
  id: String
  mobileVersions: [String!]
  webVersions: [String!]
  name: String!
  mobile: [Json!]
  web: [Json!]
  startDate: DateTime
  endDate: DateTime
  createdAt: DateTime
  updatedAt: DateTime
}

input ThemeCreatemobileInput {
  set: [Json!]!
}

input ThemeCreatemobileVersionsInput {
  set: [String!]!
}

input ThemeCreatewebInput {
  set: [Json!]!
}

input ThemeCreatewebVersionsInput {
  set: [String!]!
}

type ThemeManager {
  id: ID!
  ProfileTheme: [ProfileTheme!]!
  Profile: Profile!
  profileId: String!
}

input ThemeManagerCountOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  createdAt: SortOrder
}

input ThemeManagerCreateInput {
  id: String
  updatedAt: DateTime
  createdAt: DateTime
  ProfileTheme: ProfileThemeCreateNestedManyWithoutThemeManagerInput
  Profile: ProfileCreateNestedOneWithoutThemeManagerInput!
}

input ThemeManagerCreateManyInput {
  id: String
  profileId: String!
  updatedAt: DateTime
  createdAt: DateTime
}

input ThemeManagerCreateNestedOneWithoutProfileInput {
  create: ThemeManagerCreateWithoutProfileInput
  connectOrCreate: ThemeManagerCreateOrConnectWithoutProfileInput
  connect: ThemeManagerWhereUniqueInput
}

input ThemeManagerCreateNestedOneWithoutProfileThemeInput {
  create: ThemeManagerCreateWithoutProfileThemeInput
  connectOrCreate: ThemeManagerCreateOrConnectWithoutProfileThemeInput
  connect: ThemeManagerWhereUniqueInput
}

input ThemeManagerCreateOrConnectWithoutProfileInput {
  where: ThemeManagerWhereUniqueInput!
  create: ThemeManagerCreateWithoutProfileInput!
}

input ThemeManagerCreateOrConnectWithoutProfileThemeInput {
  where: ThemeManagerWhereUniqueInput!
  create: ThemeManagerCreateWithoutProfileThemeInput!
}

input ThemeManagerCreateWithoutProfileInput {
  id: String
  updatedAt: DateTime
  createdAt: DateTime
  ProfileTheme: ProfileThemeCreateNestedManyWithoutThemeManagerInput
}

input ThemeManagerCreateWithoutProfileThemeInput {
  id: String
  updatedAt: DateTime
  createdAt: DateTime
  Profile: ProfileCreateNestedOneWithoutThemeManagerInput!
}

input ThemeManagerMaxOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  createdAt: SortOrder
}

input ThemeManagerMinOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  createdAt: SortOrder
}

input ThemeManagerOrderByWithAggregationInput {
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  createdAt: SortOrder
  _count: ThemeManagerCountOrderByAggregateInput
  _max: ThemeManagerMaxOrderByAggregateInput
  _min: ThemeManagerMinOrderByAggregateInput
}

input ThemeManagerOrderByWithRelationInput {
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  createdAt: SortOrder
  ProfileTheme: ProfileThemeOrderByRelationAggregateInput
  Profile: ProfileOrderByWithRelationInput
}

input ThemeManagerRelationFilter {
  is: ThemeManagerWhereInput
  isNot: ThemeManagerWhereInput
}

enum ThemeManagerScalarFieldEnum {
  id
  profileId
  updatedAt
  createdAt
}

input ThemeManagerScalarWhereWithAggregatesInput {
  AND: [ThemeManagerScalarWhereWithAggregatesInput!]
  OR: [ThemeManagerScalarWhereWithAggregatesInput!]
  NOT: [ThemeManagerScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
}

input ThemeManagerUpdateInput {
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  ProfileTheme: ProfileThemeUpdateManyWithoutThemeManagerNestedInput
  Profile: ProfileUpdateOneRequiredWithoutThemeManagerNestedInput
}

input ThemeManagerUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}

input ThemeManagerUpdateOneWithoutProfileNestedInput {
  create: ThemeManagerCreateWithoutProfileInput
  connectOrCreate: ThemeManagerCreateOrConnectWithoutProfileInput
  upsert: ThemeManagerUpsertWithoutProfileInput
  disconnect: Boolean
  delete: Boolean
  connect: ThemeManagerWhereUniqueInput
  update: ThemeManagerUpdateWithoutProfileInput
}

input ThemeManagerUpdateOneWithoutProfileThemeNestedInput {
  create: ThemeManagerCreateWithoutProfileThemeInput
  connectOrCreate: ThemeManagerCreateOrConnectWithoutProfileThemeInput
  upsert: ThemeManagerUpsertWithoutProfileThemeInput
  disconnect: Boolean
  delete: Boolean
  connect: ThemeManagerWhereUniqueInput
  update: ThemeManagerUpdateWithoutProfileThemeInput
}

input ThemeManagerUpdateWithoutProfileInput {
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  ProfileTheme: ProfileThemeUpdateManyWithoutThemeManagerNestedInput
}

input ThemeManagerUpdateWithoutProfileThemeInput {
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutThemeManagerNestedInput
}

input ThemeManagerUpsertWithoutProfileInput {
  update: ThemeManagerUpdateWithoutProfileInput!
  create: ThemeManagerCreateWithoutProfileInput!
}

input ThemeManagerUpsertWithoutProfileThemeInput {
  update: ThemeManagerUpdateWithoutProfileThemeInput!
  create: ThemeManagerCreateWithoutProfileThemeInput!
}

input ThemeManagerWhereInput {
  AND: [ThemeManagerWhereInput!]
  OR: [ThemeManagerWhereInput!]
  NOT: [ThemeManagerWhereInput!]
  id: StringFilter
  profileId: StringFilter
  updatedAt: DateTimeFilter
  createdAt: DateTimeFilter
  ProfileTheme: ProfileThemeListRelationFilter
  Profile: ProfileWhereInput
}

input ThemeManagerWhereUniqueInput {
  id: String
  profileId: String
}

input ThemeMaxOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  startDate: SortOrder
  endDate: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input ThemeMinOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  startDate: SortOrder
  endDate: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input ThemeOrderByWithAggregationInput {
  id: SortOrder
  mobileVersions: SortOrder
  webVersions: SortOrder
  name: SortOrder
  mobile: SortOrder
  web: SortOrder
  startDate: SortOrder
  endDate: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: ThemeCountOrderByAggregateInput
  _max: ThemeMaxOrderByAggregateInput
  _min: ThemeMinOrderByAggregateInput
}

input ThemeOrderByWithRelationInput {
  id: SortOrder
  mobileVersions: SortOrder
  webVersions: SortOrder
  name: SortOrder
  mobile: SortOrder
  web: SortOrder
  startDate: SortOrder
  endDate: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  ProfileTheme: ProfileThemeOrderByRelationAggregateInput
}

input ThemeRelationFilter {
  is: ThemeWhereInput
  isNot: ThemeWhereInput
}

enum ThemeScalarFieldEnum {
  id
  mobileVersions
  webVersions
  name
  mobile
  web
  startDate
  endDate
  createdAt
  updatedAt
}

input ThemeScalarWhereWithAggregatesInput {
  AND: [ThemeScalarWhereWithAggregatesInput!]
  OR: [ThemeScalarWhereWithAggregatesInput!]
  NOT: [ThemeScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  mobileVersions: StringNullableListFilter
  webVersions: StringNullableListFilter
  name: StringWithAggregatesFilter
  mobile: JsonNullableListFilter
  web: JsonNullableListFilter
  startDate: DateTimeNullableWithAggregatesFilter
  endDate: DateTimeNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input ThemeUpdateInput {
  id: StringFieldUpdateOperationsInput
  mobileVersions: [String!]
  webVersions: [String!]
  name: StringFieldUpdateOperationsInput
  mobile: [Json!]
  web: [Json!]
  startDate: NullableDateTimeFieldUpdateOperationsInput
  endDate: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  ProfileTheme: ProfileThemeUpdateManyWithoutThemeNestedInput
}

input ThemeUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  mobileVersions: [String!]
  webVersions: [String!]
  name: StringFieldUpdateOperationsInput
  mobile: [Json!]
  web: [Json!]
  startDate: NullableDateTimeFieldUpdateOperationsInput
  endDate: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ThemeUpdateOneRequiredWithoutProfileThemeNestedInput {
  create: ThemeCreateWithoutProfileThemeInput
  connectOrCreate: ThemeCreateOrConnectWithoutProfileThemeInput
  upsert: ThemeUpsertWithoutProfileThemeInput
  connect: ThemeWhereUniqueInput
  update: ThemeUpdateWithoutProfileThemeInput
}

input ThemeUpdateWithoutProfileThemeInput {
  id: StringFieldUpdateOperationsInput
  mobileVersions: [String!]
  webVersions: [String!]
  name: StringFieldUpdateOperationsInput
  mobile: [Json!]
  web: [Json!]
  startDate: NullableDateTimeFieldUpdateOperationsInput
  endDate: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ThemeUpdatemobileInput {
  set: [Json!]
  push: Json
}

input ThemeUpdatemobileVersionsInput {
  set: [String!]
  push: [String!]
}

input ThemeUpdatewebInput {
  set: [Json!]
  push: Json
}

input ThemeUpdatewebVersionsInput {
  set: [String!]
  push: [String!]
}

input ThemeUpsertWithoutProfileThemeInput {
  update: ThemeUpdateWithoutProfileThemeInput!
  create: ThemeCreateWithoutProfileThemeInput!
}

input ThemeWhereInput {
  AND: [ThemeWhereInput!]
  OR: [ThemeWhereInput!]
  NOT: [ThemeWhereInput!]
  id: StringFilter
  mobileVersions: StringNullableListFilter
  webVersions: StringNullableListFilter
  name: StringFilter
  mobile: JsonNullableListFilter
  web: JsonNullableListFilter
  startDate: DateTimeNullableFilter
  endDate: DateTimeNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  ProfileTheme: ProfileThemeListRelationFilter
}

input ThemeWhereUniqueInput {
  id: String
}

input TonightPathCountOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input TonightPathCreateInput {
  id: String
  profileId: String!
  createdAt: DateTime
  updatedAt: DateTime
  Path: PathCreateNestedManyWithoutTonightPathInput
}

input TonightPathCreateManyInput {
  id: String
  profileId: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input TonightPathCreateNestedOneWithoutPathInput {
  create: TonightPathCreateWithoutPathInput
  connectOrCreate: TonightPathCreateOrConnectWithoutPathInput
  connect: TonightPathWhereUniqueInput
}

input TonightPathCreateOrConnectWithoutPathInput {
  where: TonightPathWhereUniqueInput!
  create: TonightPathCreateWithoutPathInput!
}

input TonightPathCreateWithoutPathInput {
  id: String
  profileId: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input TonightPathMaxOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input TonightPathMinOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input TonightPathOrderByWithAggregationInput {
  id: SortOrder
  profileId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: TonightPathCountOrderByAggregateInput
  _max: TonightPathMaxOrderByAggregateInput
  _min: TonightPathMinOrderByAggregateInput
}

input TonightPathOrderByWithRelationInput {
  id: SortOrder
  profileId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  Path: PathOrderByRelationAggregateInput
}

input TonightPathRelationFilter {
  is: TonightPathWhereInput
  isNot: TonightPathWhereInput
}

enum TonightPathScalarFieldEnum {
  id
  profileId
  createdAt
  updatedAt
}

input TonightPathScalarWhereWithAggregatesInput {
  AND: [TonightPathScalarWhereWithAggregatesInput!]
  OR: [TonightPathScalarWhereWithAggregatesInput!]
  NOT: [TonightPathScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input TonightPathUpdateInput {
  id: StringFieldUpdateOperationsInput
  profileId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Path: PathUpdateManyWithoutTonightPathNestedInput
}

input TonightPathUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  profileId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TonightPathUpdateOneWithoutPathNestedInput {
  create: TonightPathCreateWithoutPathInput
  connectOrCreate: TonightPathCreateOrConnectWithoutPathInput
  upsert: TonightPathUpsertWithoutPathInput
  disconnect: Boolean
  delete: Boolean
  connect: TonightPathWhereUniqueInput
  update: TonightPathUpdateWithoutPathInput
}

input TonightPathUpdateWithoutPathInput {
  id: StringFieldUpdateOperationsInput
  profileId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TonightPathUpsertWithoutPathInput {
  update: TonightPathUpdateWithoutPathInput!
  create: TonightPathCreateWithoutPathInput!
}

input TonightPathWhereInput {
  AND: [TonightPathWhereInput!]
  OR: [TonightPathWhereInput!]
  NOT: [TonightPathWhereInput!]
  id: StringFilter
  profileId: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  Path: PathListRelationFilter
}

input TonightPathWhereUniqueInput {
  id: String
}

enum TransactionIsolationLevel {
  ReadUncommitted
  ReadCommitted
  RepeatableRead
  Serializable
}

enum TypeOfDocument {
  PROFILE_PRIVACY_POLICY
  PROFILE_TERMS_OF_SERVICE
}

input UpdateManyNotificationStatusInput {
  """List of the NotificationStatus IDs to update"""
  notificationStatusIds: [UpdateNotificationStatusInput!]!
}

union UpdateManyNotificationStatusUnionResponse = UpdateNotificationResponse | ErrorProfiling

type UpdateNotificationResponse {
  count: Int!
}

input UpdateNotificationStatusInput {
  """A NotificationStatus ID"""
  id: String!
}

type Venue {
  id: ID!
  Profile: Profile!
  profileId: String!
  name: String
  Location: Location
  LiveOutVenue: LiveOutVenue
  VenueStats: VenueStats!
  venueStatsId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input VenueContactInput {
  type: String
  value: String!
}

input VenueCountOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  name: SortOrder
  venueStatsId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input VenueCreateInput {
  id: String
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  Profile: ProfileCreateNestedOneWithoutVenueInput!
  Location: LocationCreateNestedOneWithoutVenueInput
  LiveOutVenue: LiveOutVenueCreateNestedOneWithoutVenueInput
  VenueStats: VenueStatsCreateNestedOneWithoutVenueInput!
}

input VenueCreateManyInput {
  id: String
  profileId: String!
  name: String
  venueStatsId: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input VenueCreateNestedOneWithoutLiveOutVenueInput {
  create: VenueCreateWithoutLiveOutVenueInput
  connectOrCreate: VenueCreateOrConnectWithoutLiveOutVenueInput
  connect: VenueWhereUniqueInput
}

input VenueCreateNestedOneWithoutLocationInput {
  create: VenueCreateWithoutLocationInput
  connectOrCreate: VenueCreateOrConnectWithoutLocationInput
  connect: VenueWhereUniqueInput
}

input VenueCreateNestedOneWithoutProfileInput {
  create: VenueCreateWithoutProfileInput
  connectOrCreate: VenueCreateOrConnectWithoutProfileInput
  connect: VenueWhereUniqueInput
}

input VenueCreateNestedOneWithoutVenueStatsInput {
  create: VenueCreateWithoutVenueStatsInput
  connectOrCreate: VenueCreateOrConnectWithoutVenueStatsInput
  connect: VenueWhereUniqueInput
}

input VenueCreateOrConnectWithoutLiveOutVenueInput {
  where: VenueWhereUniqueInput!
  create: VenueCreateWithoutLiveOutVenueInput!
}

input VenueCreateOrConnectWithoutLocationInput {
  where: VenueWhereUniqueInput!
  create: VenueCreateWithoutLocationInput!
}

input VenueCreateOrConnectWithoutProfileInput {
  where: VenueWhereUniqueInput!
  create: VenueCreateWithoutProfileInput!
}

input VenueCreateOrConnectWithoutVenueStatsInput {
  where: VenueWhereUniqueInput!
  create: VenueCreateWithoutVenueStatsInput!
}

input VenueCreateWithoutLiveOutVenueInput {
  id: String
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  Profile: ProfileCreateNestedOneWithoutVenueInput!
  Location: LocationCreateNestedOneWithoutVenueInput
  VenueStats: VenueStatsCreateNestedOneWithoutVenueInput!
}

input VenueCreateWithoutLocationInput {
  id: String
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  Profile: ProfileCreateNestedOneWithoutVenueInput!
  LiveOutVenue: LiveOutVenueCreateNestedOneWithoutVenueInput
  VenueStats: VenueStatsCreateNestedOneWithoutVenueInput!
}

input VenueCreateWithoutProfileInput {
  id: String
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  Location: LocationCreateNestedOneWithoutVenueInput
  LiveOutVenue: LiveOutVenueCreateNestedOneWithoutVenueInput
  VenueStats: VenueStatsCreateNestedOneWithoutVenueInput!
}

input VenueCreateWithoutVenueStatsInput {
  id: String
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  Profile: ProfileCreateNestedOneWithoutVenueInput!
  Location: LocationCreateNestedOneWithoutVenueInput
  LiveOutVenue: LiveOutVenueCreateNestedOneWithoutVenueInput
}

input VenueMaxOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  name: SortOrder
  venueStatsId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input VenueMinOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
  name: SortOrder
  venueStatsId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input VenueOrderByWithAggregationInput {
  id: SortOrder
  profileId: SortOrder
  name: SortOrder
  venueStatsId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: VenueCountOrderByAggregateInput
  _max: VenueMaxOrderByAggregateInput
  _min: VenueMinOrderByAggregateInput
}

input VenueOrderByWithRelationInput {
  id: SortOrder
  profileId: SortOrder
  name: SortOrder
  venueStatsId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  Profile: ProfileOrderByWithRelationInput
  Location: LocationOrderByWithRelationInput
  LiveOutVenue: LiveOutVenueOrderByWithRelationInput
  VenueStats: VenueStatsOrderByWithRelationInput
}

input VenueRelationFilter {
  is: VenueWhereInput
  isNot: VenueWhereInput
}

enum VenueScalarFieldEnum {
  id
  profileId
  name
  venueStatsId
  createdAt
  updatedAt
}

input VenueScalarWhereWithAggregatesInput {
  AND: [VenueScalarWhereWithAggregatesInput!]
  OR: [VenueScalarWhereWithAggregatesInput!]
  NOT: [VenueScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  venueStatsId: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type VenueStats {
  id: ID!
  Venue: Venue
  Out(where: OutWhereInput, orderBy: [OutOrderByWithRelationInput!], cursor: OutWhereUniqueInput, take: Int, skip: Int, distinct: [OutScalarFieldEnum!]): [Out!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input VenueStatsCountOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input VenueStatsCreateInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  Venue: VenueCreateNestedOneWithoutVenueStatsInput
  Out: OutCreateNestedManyWithoutVenueStatsInput
}

input VenueStatsCreateManyInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
}

input VenueStatsCreateNestedOneWithoutOutInput {
  create: VenueStatsCreateWithoutOutInput
  connectOrCreate: VenueStatsCreateOrConnectWithoutOutInput
  connect: VenueStatsWhereUniqueInput
}

input VenueStatsCreateNestedOneWithoutVenueInput {
  create: VenueStatsCreateWithoutVenueInput
  connectOrCreate: VenueStatsCreateOrConnectWithoutVenueInput
  connect: VenueStatsWhereUniqueInput
}

input VenueStatsCreateOrConnectWithoutOutInput {
  where: VenueStatsWhereUniqueInput!
  create: VenueStatsCreateWithoutOutInput!
}

input VenueStatsCreateOrConnectWithoutVenueInput {
  where: VenueStatsWhereUniqueInput!
  create: VenueStatsCreateWithoutVenueInput!
}

input VenueStatsCreateWithoutOutInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  Venue: VenueCreateNestedOneWithoutVenueStatsInput
}

input VenueStatsCreateWithoutVenueInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  Out: OutCreateNestedManyWithoutVenueStatsInput
}

input VenueStatsMaxOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input VenueStatsMinOrderByAggregateInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input VenueStatsOrderByWithAggregationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: VenueStatsCountOrderByAggregateInput
  _max: VenueStatsMaxOrderByAggregateInput
  _min: VenueStatsMinOrderByAggregateInput
}

input VenueStatsOrderByWithRelationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  Venue: VenueOrderByWithRelationInput
  Out: OutOrderByRelationAggregateInput
}

input VenueStatsRelationFilter {
  is: VenueStatsWhereInput
  isNot: VenueStatsWhereInput
}

enum VenueStatsScalarFieldEnum {
  id
  createdAt
  updatedAt
}

input VenueStatsScalarWhereWithAggregatesInput {
  AND: [VenueStatsScalarWhereWithAggregatesInput!]
  OR: [VenueStatsScalarWhereWithAggregatesInput!]
  NOT: [VenueStatsScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input VenueStatsUpdateInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Venue: VenueUpdateOneWithoutVenueStatsNestedInput
  Out: OutUpdateManyWithoutVenueStatsNestedInput
}

input VenueStatsUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input VenueStatsUpdateOneRequiredWithoutVenueNestedInput {
  create: VenueStatsCreateWithoutVenueInput
  connectOrCreate: VenueStatsCreateOrConnectWithoutVenueInput
  upsert: VenueStatsUpsertWithoutVenueInput
  connect: VenueStatsWhereUniqueInput
  update: VenueStatsUpdateWithoutVenueInput
}

input VenueStatsUpdateOneWithoutOutNestedInput {
  create: VenueStatsCreateWithoutOutInput
  connectOrCreate: VenueStatsCreateOrConnectWithoutOutInput
  upsert: VenueStatsUpsertWithoutOutInput
  disconnect: Boolean
  delete: Boolean
  connect: VenueStatsWhereUniqueInput
  update: VenueStatsUpdateWithoutOutInput
}

input VenueStatsUpdateWithoutOutInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Venue: VenueUpdateOneWithoutVenueStatsNestedInput
}

input VenueStatsUpdateWithoutVenueInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Out: OutUpdateManyWithoutVenueStatsNestedInput
}

input VenueStatsUpsertWithoutOutInput {
  update: VenueStatsUpdateWithoutOutInput!
  create: VenueStatsCreateWithoutOutInput!
}

input VenueStatsUpsertWithoutVenueInput {
  update: VenueStatsUpdateWithoutVenueInput!
  create: VenueStatsCreateWithoutVenueInput!
}

input VenueStatsWhereInput {
  AND: [VenueStatsWhereInput!]
  OR: [VenueStatsWhereInput!]
  NOT: [VenueStatsWhereInput!]
  id: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  Venue: VenueWhereInput
  Out: OutListRelationFilter
}

input VenueStatsWhereUniqueInput {
  id: String
}

input VenueUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutVenueNestedInput
  Location: LocationUpdateOneWithoutVenueNestedInput
  LiveOutVenue: LiveOutVenueUpdateOneWithoutVenueNestedInput
  VenueStats: VenueStatsUpdateOneRequiredWithoutVenueNestedInput
}

input VenueUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input VenueUpdateOneRequiredWithoutLiveOutVenueNestedInput {
  create: VenueCreateWithoutLiveOutVenueInput
  connectOrCreate: VenueCreateOrConnectWithoutLiveOutVenueInput
  upsert: VenueUpsertWithoutLiveOutVenueInput
  connect: VenueWhereUniqueInput
  update: VenueUpdateWithoutLiveOutVenueInput
}

input VenueUpdateOneWithoutLocationNestedInput {
  create: VenueCreateWithoutLocationInput
  connectOrCreate: VenueCreateOrConnectWithoutLocationInput
  upsert: VenueUpsertWithoutLocationInput
  disconnect: Boolean
  delete: Boolean
  connect: VenueWhereUniqueInput
  update: VenueUpdateWithoutLocationInput
}

input VenueUpdateOneWithoutProfileNestedInput {
  create: VenueCreateWithoutProfileInput
  connectOrCreate: VenueCreateOrConnectWithoutProfileInput
  upsert: VenueUpsertWithoutProfileInput
  disconnect: Boolean
  delete: Boolean
  connect: VenueWhereUniqueInput
  update: VenueUpdateWithoutProfileInput
}

input VenueUpdateOneWithoutVenueStatsNestedInput {
  create: VenueCreateWithoutVenueStatsInput
  connectOrCreate: VenueCreateOrConnectWithoutVenueStatsInput
  upsert: VenueUpsertWithoutVenueStatsInput
  disconnect: Boolean
  delete: Boolean
  connect: VenueWhereUniqueInput
  update: VenueUpdateWithoutVenueStatsInput
}

input VenueUpdateWithoutLiveOutVenueInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutVenueNestedInput
  Location: LocationUpdateOneWithoutVenueNestedInput
  VenueStats: VenueStatsUpdateOneRequiredWithoutVenueNestedInput
}

input VenueUpdateWithoutLocationInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutVenueNestedInput
  LiveOutVenue: LiveOutVenueUpdateOneWithoutVenueNestedInput
  VenueStats: VenueStatsUpdateOneRequiredWithoutVenueNestedInput
}

input VenueUpdateWithoutProfileInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Location: LocationUpdateOneWithoutVenueNestedInput
  LiveOutVenue: LiveOutVenueUpdateOneWithoutVenueNestedInput
  VenueStats: VenueStatsUpdateOneRequiredWithoutVenueNestedInput
}

input VenueUpdateWithoutVenueStatsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutVenueNestedInput
  Location: LocationUpdateOneWithoutVenueNestedInput
  LiveOutVenue: LiveOutVenueUpdateOneWithoutVenueNestedInput
}

input VenueUpsertWithoutLiveOutVenueInput {
  update: VenueUpdateWithoutLiveOutVenueInput!
  create: VenueCreateWithoutLiveOutVenueInput!
}

input VenueUpsertWithoutLocationInput {
  update: VenueUpdateWithoutLocationInput!
  create: VenueCreateWithoutLocationInput!
}

input VenueUpsertWithoutProfileInput {
  update: VenueUpdateWithoutProfileInput!
  create: VenueCreateWithoutProfileInput!
}

input VenueUpsertWithoutVenueStatsInput {
  update: VenueUpdateWithoutVenueStatsInput!
  create: VenueCreateWithoutVenueStatsInput!
}

input VenueWhereInput {
  AND: [VenueWhereInput!]
  OR: [VenueWhereInput!]
  NOT: [VenueWhereInput!]
  id: StringFilter
  profileId: StringFilter
  name: StringNullableFilter
  venueStatsId: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  Profile: ProfileWhereInput
  Location: LocationWhereInput
  LiveOutVenue: LiveOutVenueWhereInput
  VenueStats: VenueStatsWhereInput
}

input VenueWhereUniqueInput {
  id: String
  profileId: String
  venueStatsId: String
}

type VenuesNearbyResponse {
  venuesNearby: [ProfileVenue!]!
  searchArea: Area
}

type Vote {
  id: ID!
  upvote: Boolean!
  Profile: Profile!
  profileId: String!
  ComingArea: ComingArea
  comingAreaId: String
  H3Index6VenueRecommendation: H3Index6VenueRecommendation
  h3Index6VenueRecommendationId: String
  createdAt: DateTime!
  H3Index5VenueRecommendation: H3Index5VenueRecommendation
  h3Index5VenueRecommendationId: String
}

input VoteCountOrderByAggregateInput {
  id: SortOrder
  upvote: SortOrder
  profileId: SortOrder
  comingAreaId: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
}

input VoteCreateInput {
  id: String
  upvote: Boolean!
  createdAt: DateTime
  Profile: ProfileCreateNestedOneWithoutVoteInput!
  ComingArea: ComingAreaCreateNestedOneWithoutVoteInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutVoteInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutVoteInput
}

input VoteCreateManyComingAreaInput {
  id: String
  upvote: Boolean!
  profileId: String!
  h3Index6VenueRecommendationId: String
  createdAt: DateTime
  h3Index5VenueRecommendationId: String
}

input VoteCreateManyComingAreaInputEnvelope {
  data: [VoteCreateManyComingAreaInput!]!
  skipDuplicates: Boolean
}

input VoteCreateManyH3Index5VenueRecommendationInput {
  id: String
  upvote: Boolean!
  profileId: String!
  comingAreaId: String
  h3Index6VenueRecommendationId: String
  createdAt: DateTime
}

input VoteCreateManyH3Index5VenueRecommendationInputEnvelope {
  data: [VoteCreateManyH3Index5VenueRecommendationInput!]!
  skipDuplicates: Boolean
}

input VoteCreateManyH3Index6VenueRecommendationInput {
  id: String
  upvote: Boolean!
  profileId: String!
  comingAreaId: String
  createdAt: DateTime
  h3Index5VenueRecommendationId: String
}

input VoteCreateManyH3Index6VenueRecommendationInputEnvelope {
  data: [VoteCreateManyH3Index6VenueRecommendationInput!]!
  skipDuplicates: Boolean
}

input VoteCreateManyInput {
  id: String
  upvote: Boolean!
  profileId: String!
  comingAreaId: String
  h3Index6VenueRecommendationId: String
  createdAt: DateTime
  h3Index5VenueRecommendationId: String
}

input VoteCreateManyProfileInput {
  id: String
  upvote: Boolean!
  comingAreaId: String
  h3Index6VenueRecommendationId: String
  createdAt: DateTime
  h3Index5VenueRecommendationId: String
}

input VoteCreateManyProfileInputEnvelope {
  data: [VoteCreateManyProfileInput!]!
  skipDuplicates: Boolean
}

input VoteCreateNestedManyWithoutComingAreaInput {
  create: VoteCreateWithoutComingAreaInput
  connectOrCreate: [VoteCreateOrConnectWithoutComingAreaInput!]
  createMany: VoteCreateManyComingAreaInputEnvelope
  connect: [VoteWhereUniqueInput!]
}

input VoteCreateNestedManyWithoutH3Index5VenueRecommendationInput {
  create: VoteCreateWithoutH3Index5VenueRecommendationInput
  connectOrCreate: [VoteCreateOrConnectWithoutH3Index5VenueRecommendationInput!]
  createMany: VoteCreateManyH3Index5VenueRecommendationInputEnvelope
  connect: [VoteWhereUniqueInput!]
}

input VoteCreateNestedManyWithoutH3Index6VenueRecommendationInput {
  create: VoteCreateWithoutH3Index6VenueRecommendationInput
  connectOrCreate: [VoteCreateOrConnectWithoutH3Index6VenueRecommendationInput!]
  createMany: VoteCreateManyH3Index6VenueRecommendationInputEnvelope
  connect: [VoteWhereUniqueInput!]
}

input VoteCreateNestedManyWithoutProfileInput {
  create: VoteCreateWithoutProfileInput
  connectOrCreate: [VoteCreateOrConnectWithoutProfileInput!]
  createMany: VoteCreateManyProfileInputEnvelope
  connect: [VoteWhereUniqueInput!]
}

input VoteCreateOrConnectWithoutComingAreaInput {
  where: VoteWhereUniqueInput!
  create: VoteCreateWithoutComingAreaInput!
}

input VoteCreateOrConnectWithoutH3Index5VenueRecommendationInput {
  where: VoteWhereUniqueInput!
  create: VoteCreateWithoutH3Index5VenueRecommendationInput!
}

input VoteCreateOrConnectWithoutH3Index6VenueRecommendationInput {
  where: VoteWhereUniqueInput!
  create: VoteCreateWithoutH3Index6VenueRecommendationInput!
}

input VoteCreateOrConnectWithoutProfileInput {
  where: VoteWhereUniqueInput!
  create: VoteCreateWithoutProfileInput!
}

input VoteCreateWithoutComingAreaInput {
  id: String
  upvote: Boolean!
  createdAt: DateTime
  Profile: ProfileCreateNestedOneWithoutVoteInput!
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutVoteInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutVoteInput
}

input VoteCreateWithoutH3Index5VenueRecommendationInput {
  id: String
  upvote: Boolean!
  createdAt: DateTime
  Profile: ProfileCreateNestedOneWithoutVoteInput!
  ComingArea: ComingAreaCreateNestedOneWithoutVoteInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutVoteInput
}

input VoteCreateWithoutH3Index6VenueRecommendationInput {
  id: String
  upvote: Boolean!
  createdAt: DateTime
  Profile: ProfileCreateNestedOneWithoutVoteInput!
  ComingArea: ComingAreaCreateNestedOneWithoutVoteInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutVoteInput
}

input VoteCreateWithoutProfileInput {
  id: String
  upvote: Boolean!
  createdAt: DateTime
  ComingArea: ComingAreaCreateNestedOneWithoutVoteInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutVoteInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutVoteInput
}

input VoteListRelationFilter {
  every: VoteWhereInput
  some: VoteWhereInput
  none: VoteWhereInput
}

input VoteMaxOrderByAggregateInput {
  id: SortOrder
  upvote: SortOrder
  profileId: SortOrder
  comingAreaId: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
}

input VoteMinOrderByAggregateInput {
  id: SortOrder
  upvote: SortOrder
  profileId: SortOrder
  comingAreaId: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
}

input VoteOrderByRelationAggregateInput {
  _count: SortOrder
}

input VoteOrderByWithAggregationInput {
  id: SortOrder
  upvote: SortOrder
  profileId: SortOrder
  comingAreaId: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
  _count: VoteCountOrderByAggregateInput
  _max: VoteMaxOrderByAggregateInput
  _min: VoteMinOrderByAggregateInput
}

input VoteOrderByWithRelationInput {
  id: SortOrder
  upvote: SortOrder
  profileId: SortOrder
  comingAreaId: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
  Profile: ProfileOrderByWithRelationInput
  ComingArea: ComingAreaOrderByWithRelationInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationOrderByWithRelationInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationOrderByWithRelationInput
}

enum VoteScalarFieldEnum {
  id
  upvote
  profileId
  comingAreaId
  h3Index6VenueRecommendationId
  createdAt
  h3Index5VenueRecommendationId
}

input VoteScalarWhereInput {
  AND: [VoteScalarWhereInput!]
  OR: [VoteScalarWhereInput!]
  NOT: [VoteScalarWhereInput!]
  id: StringFilter
  upvote: BoolFilter
  profileId: StringFilter
  comingAreaId: StringNullableFilter
  h3Index6VenueRecommendationId: StringNullableFilter
  createdAt: DateTimeFilter
  h3Index5VenueRecommendationId: StringNullableFilter
}

input VoteScalarWhereWithAggregatesInput {
  AND: [VoteScalarWhereWithAggregatesInput!]
  OR: [VoteScalarWhereWithAggregatesInput!]
  NOT: [VoteScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  upvote: BoolWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  comingAreaId: StringNullableWithAggregatesFilter
  h3Index6VenueRecommendationId: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  h3Index5VenueRecommendationId: StringNullableWithAggregatesFilter
}

input VoteUpdateInput {
  id: StringFieldUpdateOperationsInput
  upvote: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutVoteNestedInput
  ComingArea: ComingAreaUpdateOneWithoutVoteNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutVoteNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutVoteNestedInput
}

input VoteUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  upvote: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}

input VoteUpdateManyWithWhereWithoutComingAreaInput {
  where: VoteScalarWhereInput!
  data: VoteUpdateManyMutationInput!
}

input VoteUpdateManyWithWhereWithoutH3Index5VenueRecommendationInput {
  where: VoteScalarWhereInput!
  data: VoteUpdateManyMutationInput!
}

input VoteUpdateManyWithWhereWithoutH3Index6VenueRecommendationInput {
  where: VoteScalarWhereInput!
  data: VoteUpdateManyMutationInput!
}

input VoteUpdateManyWithWhereWithoutProfileInput {
  where: VoteScalarWhereInput!
  data: VoteUpdateManyMutationInput!
}

input VoteUpdateManyWithoutComingAreaNestedInput {
  create: VoteCreateWithoutComingAreaInput
  connectOrCreate: [VoteCreateOrConnectWithoutComingAreaInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutComingAreaInput!]
  createMany: VoteCreateManyComingAreaInputEnvelope
  set: [VoteWhereUniqueInput!]
  disconnect: [VoteWhereUniqueInput!]
  delete: [VoteWhereUniqueInput!]
  connect: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutComingAreaInput!]
  updateMany: [VoteUpdateManyWithWhereWithoutComingAreaInput!]
  deleteMany: [VoteScalarWhereInput!]
}

input VoteUpdateManyWithoutH3Index5VenueRecommendationNestedInput {
  create: VoteCreateWithoutH3Index5VenueRecommendationInput
  connectOrCreate: [VoteCreateOrConnectWithoutH3Index5VenueRecommendationInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutH3Index5VenueRecommendationInput!]
  createMany: VoteCreateManyH3Index5VenueRecommendationInputEnvelope
  set: [VoteWhereUniqueInput!]
  disconnect: [VoteWhereUniqueInput!]
  delete: [VoteWhereUniqueInput!]
  connect: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutH3Index5VenueRecommendationInput!]
  updateMany: [VoteUpdateManyWithWhereWithoutH3Index5VenueRecommendationInput!]
  deleteMany: [VoteScalarWhereInput!]
}

input VoteUpdateManyWithoutH3Index6VenueRecommendationNestedInput {
  create: VoteCreateWithoutH3Index6VenueRecommendationInput
  connectOrCreate: [VoteCreateOrConnectWithoutH3Index6VenueRecommendationInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutH3Index6VenueRecommendationInput!]
  createMany: VoteCreateManyH3Index6VenueRecommendationInputEnvelope
  set: [VoteWhereUniqueInput!]
  disconnect: [VoteWhereUniqueInput!]
  delete: [VoteWhereUniqueInput!]
  connect: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutH3Index6VenueRecommendationInput!]
  updateMany: [VoteUpdateManyWithWhereWithoutH3Index6VenueRecommendationInput!]
  deleteMany: [VoteScalarWhereInput!]
}

input VoteUpdateManyWithoutProfileNestedInput {
  create: VoteCreateWithoutProfileInput
  connectOrCreate: [VoteCreateOrConnectWithoutProfileInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutProfileInput!]
  createMany: VoteCreateManyProfileInputEnvelope
  set: [VoteWhereUniqueInput!]
  disconnect: [VoteWhereUniqueInput!]
  delete: [VoteWhereUniqueInput!]
  connect: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [VoteUpdateManyWithWhereWithoutProfileInput!]
  deleteMany: [VoteScalarWhereInput!]
}

input VoteUpdateWithWhereUniqueWithoutComingAreaInput {
  where: VoteWhereUniqueInput!
  data: VoteUpdateWithoutComingAreaInput!
}

input VoteUpdateWithWhereUniqueWithoutH3Index5VenueRecommendationInput {
  where: VoteWhereUniqueInput!
  data: VoteUpdateWithoutH3Index5VenueRecommendationInput!
}

input VoteUpdateWithWhereUniqueWithoutH3Index6VenueRecommendationInput {
  where: VoteWhereUniqueInput!
  data: VoteUpdateWithoutH3Index6VenueRecommendationInput!
}

input VoteUpdateWithWhereUniqueWithoutProfileInput {
  where: VoteWhereUniqueInput!
  data: VoteUpdateWithoutProfileInput!
}

input VoteUpdateWithoutComingAreaInput {
  id: StringFieldUpdateOperationsInput
  upvote: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutVoteNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutVoteNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutVoteNestedInput
}

input VoteUpdateWithoutH3Index5VenueRecommendationInput {
  id: StringFieldUpdateOperationsInput
  upvote: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutVoteNestedInput
  ComingArea: ComingAreaUpdateOneWithoutVoteNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutVoteNestedInput
}

input VoteUpdateWithoutH3Index6VenueRecommendationInput {
  id: StringFieldUpdateOperationsInput
  upvote: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Profile: ProfileUpdateOneRequiredWithoutVoteNestedInput
  ComingArea: ComingAreaUpdateOneWithoutVoteNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutVoteNestedInput
}

input VoteUpdateWithoutProfileInput {
  id: StringFieldUpdateOperationsInput
  upvote: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  ComingArea: ComingAreaUpdateOneWithoutVoteNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutVoteNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutVoteNestedInput
}

input VoteUpsertWithWhereUniqueWithoutComingAreaInput {
  where: VoteWhereUniqueInput!
  update: VoteUpdateWithoutComingAreaInput!
  create: VoteCreateWithoutComingAreaInput!
}

input VoteUpsertWithWhereUniqueWithoutH3Index5VenueRecommendationInput {
  where: VoteWhereUniqueInput!
  update: VoteUpdateWithoutH3Index5VenueRecommendationInput!
  create: VoteCreateWithoutH3Index5VenueRecommendationInput!
}

input VoteUpsertWithWhereUniqueWithoutH3Index6VenueRecommendationInput {
  where: VoteWhereUniqueInput!
  update: VoteUpdateWithoutH3Index6VenueRecommendationInput!
  create: VoteCreateWithoutH3Index6VenueRecommendationInput!
}

input VoteUpsertWithWhereUniqueWithoutProfileInput {
  where: VoteWhereUniqueInput!
  update: VoteUpdateWithoutProfileInput!
  create: VoteCreateWithoutProfileInput!
}

input VoteWhereInput {
  AND: [VoteWhereInput!]
  OR: [VoteWhereInput!]
  NOT: [VoteWhereInput!]
  id: StringFilter
  upvote: BoolFilter
  profileId: StringFilter
  comingAreaId: StringNullableFilter
  h3Index6VenueRecommendationId: StringNullableFilter
  createdAt: DateTimeFilter
  h3Index5VenueRecommendationId: StringNullableFilter
  Profile: ProfileWhereInput
  ComingArea: ComingAreaWhereInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationWhereInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationWhereInput
}

input VoteWhereUniqueInput {
  id: String
}
